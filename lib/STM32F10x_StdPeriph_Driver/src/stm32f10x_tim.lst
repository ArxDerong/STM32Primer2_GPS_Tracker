   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.TI1_Config,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	TI1_Config:
  24              	.LFB143:
  25              		.file 1 "lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c"
   1:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
   2:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   ******************************************************************************
   3:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @file    stm32f10x_tim.c
   4:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @author  MCD Application Team
   5:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @version V3.6.1
   6:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @date    05-March-2012
   7:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief   This file provides all the TIM firmware functions.
   8:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   ******************************************************************************
   9:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @attention
  10:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
  11:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
  13:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * You may not use this file except in compliance with the License.
  15:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * You may obtain a copy of the License at:
  16:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
  17:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
  19:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * See the License for the specific language governing permissions and
  23:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * limitations under the License.
  24:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
  25:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   ******************************************************************************
  26:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  27:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  28:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /* Includes ------------------------------------------------------------------*/
  29:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** #include "stm32f10x_tim.h"
  30:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** #include "stm32f10x_rcc.h"
  31:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  32:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  34:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  35:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  36:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM 
  37:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief TIM driver modules
  38:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  39:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  40:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  41:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_TypesDefinitions
  42:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  43:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  44:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  45:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
  46:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
  47:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  48:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  49:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Defines
  50:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  51:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  52:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  53:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
  54:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** #define SMCR_ETR_Mask               ((uint16_t)0x00FF) 
  55:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** #define CCMR_Offset                 ((uint16_t)0x0018)
  56:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** #define CCER_CCE_Set                ((uint16_t)0x0001)  
  57:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** #define	CCER_CCNE_Set               ((uint16_t)0x0004) 
  58:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  59:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
  60:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
  61:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  62:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  63:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  64:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  65:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  66:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  67:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
  68:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
  69:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  70:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  71:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  72:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  73:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  74:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  75:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
  76:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
  77:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  78:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  79:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
  80:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  81:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  82:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  83:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  84:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  85:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  86:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  87:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  88:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  89:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  90:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  91:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
  92:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
  93:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  94:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  95:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  96:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
  97:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
  98:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
  99:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
 101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
 104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
 105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
 109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
 112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
 113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @}
 117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Functions
 120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @{
 121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  
 133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }     
 138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   } 
 153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   } 
 158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   } 
 163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   } 
 168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {      
 175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    }  
 178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {      
 180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }  
 183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {     
 185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }  
 188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {      
 190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }  
 193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {       
 195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {       
 200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }        
 203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   } 
 208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   } 
 213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     {
 217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     }  
 220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         structure that contains the configuration information for the 
 229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         specified TIM peripheral.
 230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Counter Mode */
 247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  
 251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the clock division */
 254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Autoreload value */
 261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  
 263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Repetition Counter value */
 269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      values immediately */
 274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
 289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Compare Mode Bits */
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output State */
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N State */
 335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  
 355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
 363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         the TIM peripheral.
 364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
 372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */  
 381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output State */
 401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N State */
 418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
 454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 462:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 466:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 467:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 470:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 471:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 473:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 475:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 476:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 478:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 480:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output State */
 482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 483:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 485:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 486:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 487:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 488:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 489:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 491:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 493:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 498:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N State */
 499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 500:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 501:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 505:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 510:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 511:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 513:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 514:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 517:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 519:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 522:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 524:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 526:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 528:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 531:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 532:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
 533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 535:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 536:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 537:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 538:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 540:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 543:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 545:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 549:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 553:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 555:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 556:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 558:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 560:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 561:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Output State */
 562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
 564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 566:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 567:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 571:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 575:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */  
 576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 577:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 580:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 581:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 583:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 584:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 585:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 586:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
 587:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct.
 588:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 590:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 591:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 592:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 593:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 595:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 597:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 599:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 601:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 602:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 603:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 604:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 605:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 606:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 608:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY_LITE(TIM_ICInitStruct->TIM_ICPolarity));
 609:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 611:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 612:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 615:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 616:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 617:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 622:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 626:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 627:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 629:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 631:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 632:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 633:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI3 Configuration */
 634:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 635:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 636:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 637:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 640:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 641:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 642:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 643:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI4 Configuration */
 644:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 652:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 653:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
 654:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
 655:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
 656:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 657:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 659:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 660:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 662:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 663:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 665:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 666:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 668:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 671:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 673:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 675:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Opposite Input */
 676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 677:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 679:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 680:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 681:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 682:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 685:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 686:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 691:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 693:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 696:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   { 
 698:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 700:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 703:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 707:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 709:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 710:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 712:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         the OSSR State and the AOE(automatic output enable).
 713:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
 714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 715:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
 716:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 717:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 718:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 721:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 722:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
 723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 724:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 726:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 728:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 729:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 731:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 732:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 733:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 734:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 735:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 736:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 737:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 738:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 739:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         structure which will be initialized.
 740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 741:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 742:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 744:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the default configuration */
 745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 750:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 752:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 753:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 754:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
 755:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         be initialized.
 756:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 757:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 758:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 760:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the default configuration */
 761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 770:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 772:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
 773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
 774:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         be initialized.
 775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 776:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 777:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
 778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 779:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the default configuration */
 780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 785:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 786:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 787:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 789:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 790:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         will be initialized.
 791:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 792:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the default configuration */
 796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 803:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 804:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 805:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 806:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 807:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 808:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 809:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 810:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 811:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 814:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 815:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 816:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Enable the TIM Counter */
 821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 823:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 824:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 825:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Disable the TIM Counter */
 826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 827:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 828:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 829:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 830:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 831:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 832:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
 833:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 834:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 836:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 839:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 840:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Enable the TIM Main Output */
 845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 847:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 848:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Disable the TIM Main Output */
 850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 851:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }  
 852:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 853:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 854:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 855:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
 856:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 857:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
 858:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
 860:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
 861:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
 862:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
 863:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
 864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
 865:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
 866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
 867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note 
 868:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update interrupt.
 869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
 870:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
 871:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
 872:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
 873:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
 874:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
 875:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 876:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 877:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 878:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
 879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {  
 880:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 881:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 882:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 883:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 884:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 885:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 886:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 887:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Enable the Interrupt sources */
 888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 889:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 890:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 891:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 892:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Disable the Interrupt sources */
 893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 894:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 895:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 896:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 897:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 898:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
 899:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 900:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
 901:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one or more of the following values:	   
 902:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
 903:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
 904:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
 905:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
 906:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
 907:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
 908:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
 909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
 910:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note 
 911:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update event. 
 912:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.      
 913:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 914:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 915:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
 916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
 917:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 918:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 919:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 920:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 921:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the event sources */
 922:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 923:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 924:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 925:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 926:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
 927:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
 928:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   the TIM peripheral.
 929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
 930:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
 931:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMABase_CR, TIM_DMABase_CR2, TIM_DMABase_SMCR,
 932:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *          TIM_DMABase_DIER, TIM1_DMABase_SR, TIM_DMABase_EGR,
 933:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
 934:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
 935:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *          TIM_DMABase_RCR, TIM_DMABase_CCR1, TIM_DMABase_CCR2,
 936:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCR3, TIM_DMABase_CCR4, TIM_DMABase_BDTR,
 937:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *          TIM_DMABase_DCR.
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
 939:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one value between:
 940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
 941:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 942:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 943:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
 944:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 945:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 946:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 947:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 948:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 949:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 950:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 951:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 952:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 953:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
 955:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 6, 7, 8, 15, 16 or 17 
 956:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   to select the TIM peripheral. 
 957:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
 958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 959:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
 960:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
 961:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
 962:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
 963:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
 964:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
 965:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
 966:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
 967:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 968:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 969:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 970:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
 971:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
 972:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 973:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 974:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 975:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 976:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
 977:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 978:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 979:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Enable the DMA sources */
 980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 981:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 982:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
 983:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
 984:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Disable the DMA sources */
 985:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 986:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
 987:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 988:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
 989:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
 990:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx internal Clock
 991:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15
 992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         to select the TIM peripheral.
 993:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
 994:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
 995:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
 996:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 997:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
 998:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 999:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
1000:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1001:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1002:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1003:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1004:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
1005:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1006:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ITRSource: Trigger source.
1007:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1008:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR0: Internal Trigger 0
1009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR1: Internal Trigger 1
1010:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR2: Internal Trigger 2
1011:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR3: Internal Trigger 3
1012:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1013:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1014:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1015:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1016:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1017:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1018:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
1019:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
1020:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
1021:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1023:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1024:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1025:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1026:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
1027:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1028:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
1029:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1030:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
1031:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
1032:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
1033:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
1034:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1035:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
1036:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
1037:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  ICFilter : specifies the filter value.
1038:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
1039:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1040:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1041:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
1042:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
1043:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1044:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1045:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1046:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
1047:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
1048:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
1049:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
1050:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
1051:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1053:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1054:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
1055:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1056:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1057:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1058:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Trigger source */
1059:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
1060:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1061:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1062:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1063:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1064:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1065:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode1
1066:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1068:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1071:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1072:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1073:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1074:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1075:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1076:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1077:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1078:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1079:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1080:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1081:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
1082:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                              uint16_t ExtTRGFilter)
1083:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1084:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1085:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1086:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1088:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1089:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1090:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1091:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1092:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1093:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1094:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1095:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
1096:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1097:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1098:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
1099:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
1102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode2
1108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
1124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
1125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
1134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
1135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
1139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
1155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                    uint16_t ExtTRGFilter)
1156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
1165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
1166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
1167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
1168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Prescaler.
1174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
1175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
1176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
1177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
1179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
1180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
1183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
1187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
1188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
1189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
1191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
1195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
1197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
1199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
1200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
1201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
1202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
1203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
1206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
1208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
1211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
1212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
1213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
1214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
1215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
1216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
1217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
1218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the Input Trigger source
1222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
1224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
1226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
1227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
1228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
1229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
1230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
1231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
1232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
1233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
1241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
1247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
1253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
1255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
1257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
1258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
1259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *                                on the level of the other input.
1260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
1261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
1265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
1271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
1272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
1277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
1280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
1281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
1282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
1290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the encoder Mode */
1293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
1295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
1297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
1298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
1299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
1301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
1302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
1303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
1309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
1330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
1354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
1378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
1402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
1410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 to select the TIM peripheral.
1411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
1412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
1416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the ARR Preload Bit */
1423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
1424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
1426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the ARR Preload Bit */
1428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
1429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
1435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Commutation event.
1436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the COM Bit */
1447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
1448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
1450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the COM Bit */
1452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
1453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
1458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
1459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
1461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1462:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
1465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1466:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1467:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1470:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1471:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the CCDS Bit */
1472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
1473:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
1475:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1476:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the CCDS Bit */
1477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
1478:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1480:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1483:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 5, 8 or 15 
1484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         to select the TIMx peripheral
1485:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1486:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1487:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1488:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1489:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
1491:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1493:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the CCPC Bit */
1497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
1498:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
1500:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
1501:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the CCPC Bit */
1502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
1503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
1504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1505:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1510:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1511:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1513:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1514:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1517:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1519:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1522:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
1523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
1524:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1526:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1528:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1531:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1532:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1535:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1536:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1537:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1538:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1540:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1543:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1545:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
1548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
1549:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1553:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1555:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1556:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1558:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1560:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1561:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1566:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1567:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1571:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
1572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
1573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1575:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1577:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1580:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1581:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1583:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1584:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1585:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1586:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1587:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1588:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1590:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1591:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1592:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1593:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1595:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
1596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
1597:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1599:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1601:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1602:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1603:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1604:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1605:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1606:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1608:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1609:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1611:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1612:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1615:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1616:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1617:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
1621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
1622:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
1624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1626:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1627:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1629:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1631:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1632:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1633:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1634:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1635:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1636:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1637:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1640:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1641:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1642:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1643:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1644:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
1647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
1648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1652:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1653:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1654:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1655:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1656:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1657:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1659:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1660:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1662:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1663:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1665:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1666:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1668:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1671:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
1672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
1673:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
1675:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1677:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1679:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1680:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1681:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1682:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1685:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1686:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1691:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1693:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1696:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
1697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
1698:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1700:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1703:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1707:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1709:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1710:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1712:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1713:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1715:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1716:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1717:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1718:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1721:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1722:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC1CE Bit */
1723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
1724:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
1726:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1728:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1729:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1731:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1732:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1733:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1734:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1735:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1736:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1737:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1738:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1739:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1741:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1742:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1744:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
1747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
1748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1750:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1752:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1753:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1754:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1755:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1756:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1757:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1758:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1760:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1770:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
1771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
1772:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
1774:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1776:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1777:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1779:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1785:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1786:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1787:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1789:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1790:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1791:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1792:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
1795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
1796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1803:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1804:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1805:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1806:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1807:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1808:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1809:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1810:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1811:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1814:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1815:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1816:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
1819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
1820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
1821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1823:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1824:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1825:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1827:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1828:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1829:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1830:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1831:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1832:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1833:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1834:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1836:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1839:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1840:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
1841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
1843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
1844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
1845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1847:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1848:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1851:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1852:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1853:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1854:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1855:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1856:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1857:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1858:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1860:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1861:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1862:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1863:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1865:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
1866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
1867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1868:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1870:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1871:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1872:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1873:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1874:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1875:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1876:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1877:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1878:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1880:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1881:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1882:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1883:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1884:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1885:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1886:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1887:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
1888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1889:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
1890:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
1891:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1892:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1894:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1895:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1896:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1897:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1898:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1899:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1900:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1901:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1902:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1903:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1904:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1905:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1906:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1907:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1908:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1910:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1911:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1912:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
1913:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
1914:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1915:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1917:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1918:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1919:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1920:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1921:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1922:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1923:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1924:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1925:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1926:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1927:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1928:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1930:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1931:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  
1932:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1933:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1934:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1935:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
1936:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1937:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
1938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
1939:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1941:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1942:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1943:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1944:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1945:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1946:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1947:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1948:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1949:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1950:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1951:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1952:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1953:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1955:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1956:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1957:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1959:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1960:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
1961:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
1962:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1963:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1964:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1965:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1966:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1967:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1968:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1969:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1970:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1971:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1972:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1973:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1974:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1975:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1976:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1977:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1978:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
1979:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
1980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1981:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
1982:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
1983:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1984:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
1985:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1986:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1987:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1988:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1989:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
1990:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1991:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the CCxE Bit */
1992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1993:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1994:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or reset the CCxE Bit */ 
1995:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1996:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
1997:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
1998:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
1999:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
2000:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
2001:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2002:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2003:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2004:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2005:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2006:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2007:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2008:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2010:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2011:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2012:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
2013:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2014:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2015:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2016:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
2017:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
2018:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2019:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
2020:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2021:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the CCxNE Bit */
2022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
2023:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2024:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2025:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
2026:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2027:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2028:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2029:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
2030:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note   This function disables the selected channel before changing the Output
2031:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         Compare Mode.
2032:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
2033:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2034:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2035:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2036:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2037:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2038:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2039:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
2040:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
2041:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2042:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Timing
2043:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Active
2044:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Toggle
2045:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM1
2046:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM2
2047:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active
2048:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive
2049:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2050:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2051:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
2052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2053:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
2054:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
2055:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2056:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2057:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2058:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
2059:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
2060:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2061:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = (uint32_t) TIMx;
2062:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
2063:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2064:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
2065:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2066:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
2067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
2068:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
2070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2071:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
2072:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2073:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2074:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
2075:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
2076:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2077:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
2078:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2079:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2080:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2081:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
2082:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2083:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2084:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
2085:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
2086:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2087:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
2088:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2089:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2090:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2091:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2092:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
2093:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2094:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
2095:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2096:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2097:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2098:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
2099:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the Update Disable Bit */
2106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
2107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the Update Disable Bit */
2111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
2112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
2117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
2119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is the counter overflow/underflow
2121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                                        or the setting of UG bit, or an update generation
2122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                                        through the slave mode controller.
2123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
2124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
2127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
2131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
2132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the URS Bit */
2134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
2135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the URS Bit */
2139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
2140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Set the TI1S Bit */
2158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
2159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Reset the TI1S Bit */
2163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
2164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
2169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
2171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Single
2173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Repetitive
2174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
2177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
2181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
2182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
2183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
2184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
2185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8, 9, 12 or 15 to select the TIM peripheral.
2190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This paramter can be one of the following values:
2192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
2193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *  - For all TIMx
2194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
2198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
2205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *
2206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
2212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
2214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
2215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the TRGO source */
2216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *                               the counter and triggers an update of the registers.
2226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
2237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
2238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
2239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *                                      and its slaves (through TRGO).
2249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
2258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
2259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set or Reset the MSM Bit */
2261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Counter Register value
2266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Counter: specifies the Counter register new value.
2268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)
2271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Counter Register value */
2275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
2276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
2280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
2282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)
2285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
2289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
2290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
2294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
2296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)
2299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
2303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
2304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
2308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
2310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)
2313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
2317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
2318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
2322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
2324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)
2327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
2331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
2332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
2336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
2338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)
2341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
2345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
2346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
2365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
2366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
2367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
2387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
2388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
2389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
2409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
2410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
2411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {  
2427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
2431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
2432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
2433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
2438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select 
2439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   the TIM peripheral.
2440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
2441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following value:
2442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
2443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
2444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
2445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
2448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
2452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
2453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
2454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Set the CKD value */
2455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
2456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval Capture Compare 1 Register value.
2462:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2466:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2467:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
2468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR1;
2469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2470:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2471:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2473:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval Capture Compare 2 Register value.
2475:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2476:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2478:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2480:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
2481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR2;
2482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2483:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2485:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2486:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2487:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval Capture Compare 3 Register value.
2488:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2489:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2491:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2493:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
2494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR3;
2495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2498:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2500:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval Capture Compare 4 Register value.
2501:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2505:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
2507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR4;
2508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2510:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2511:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Counter value.
2512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2513:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval Counter Register value.
2514:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)
2516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2517:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2519:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the Counter Register value */
2520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CNT;
2521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2522:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2524:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
2525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2526:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval Prescaler Register value.
2527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2528:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
2529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2531:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2532:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
2533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->PSC;
2534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2535:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2536:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2537:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2538:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2540:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2543:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2545:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2549:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2553:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note
2554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2555:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2556:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2558:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2560:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2561:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
2564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2566:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2567:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2571:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     bitstatus = SET;
2572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2575:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     bitstatus = RESET;
2576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2577:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return bitstatus;
2578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2580:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2581:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's pending flags.
2582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2583:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2584:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2585:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2586:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2587:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2588:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2590:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2591:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2592:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2593:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2595:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2597:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note
2598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2599:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2601:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2602:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2603:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.   
2604:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2605:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2606:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {  
2608:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2609:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
2611:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
2612:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Clear the flags */
2613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2615:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2616:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2617:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2622:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2626:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2627:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2629:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note
2630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2631:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2632:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2633:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2634:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2635:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.  
2636:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2637:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2640:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2641:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2642:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2643:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2644:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    
2646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     bitstatus = SET;
2652:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2653:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2654:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2655:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     bitstatus = RESET;
2656:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2657:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return bitstatus;
2658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2659:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2660:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2662:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2663:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2665:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2666:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2668:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2671:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2673:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @note
2674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2675:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2677:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2679:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2680:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2681:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2682:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Check the parameters */
2685:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2686:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
2688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2691:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configure the TI1 as Input.
2693:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2696:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2698:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2700:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
2701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
2702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
2703:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2707:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2709:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
  26              		.loc 1 2709 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
2710:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
2711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
2712:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
  38              		.loc 1 2712 0
  39 0002 048C     		ldrh	r4, [r0, #32]
  40 0004 24F00105 		bic	r5, r4, #1
  41 0008 2C04     		lsls	r4, r5, #16
  42 000a 250C     		lsrs	r5, r4, #16
  43 000c 0584     		strh	r5, [r0, #32]	@ movhi
2713:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  44              		.loc 1 2713 0
  45 000e 048B     		ldrh	r4, [r0, #24]
  46 0010 A5B2     		uxth	r5, r4
  47              	.LVL2:
2714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
  48              		.loc 1 2714 0
  49 0012 048C     		ldrh	r4, [r0, #32]
  50              	.LVL3:
  51 0014 A4B2     		uxth	r4, r4
  52              	.LVL4:
2715:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2716:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
  53              		.loc 1 2716 0
  54 0016 25F0F305 		bic	r5, r5, #243
  55              	.LVL5:
2717:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  56              		.loc 1 2717 0
  57 001a 2A43     		orrs	r2, r2, r5
  58              	.LVL6:
  59 001c 42EA0313 		orr	r3, r2, r3, lsl #4
  60              	.LVL7:
  61 0020 9DB2     		uxth	r5, r3
  62              	.LVL8:
2718:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
  63              		.loc 1 2719 0
  64 0022 104A     		ldr	r2, .L10
  65 0024 9042     		cmp	r0, r2
  66 0026 15D0     		beq	.L2
  67              		.loc 1 2719 0 is_stmt 0 discriminator 1
  68 0028 02F50063 		add	r3, r2, #2048
  69              	.LVL9:
  70 002c 9842     		cmp	r0, r3
  71 002e 11D0     		beq	.L2
  72 0030 B0F1804F 		cmp	r0, #1073741824
  73 0034 0ED0     		beq	.L2
  74 0036 A3F59832 		sub	r2, r3, #77824
  75 003a 9042     		cmp	r0, r2
  76 003c 0AD0     		beq	.L2
  77 003e 02F58063 		add	r3, r2, #1024
  78 0042 9842     		cmp	r0, r3
  79 0044 06D0     		beq	.L2
2720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
  80              		.loc 1 2720 0 is_stmt 1
  81 0046 03F58062 		add	r2, r3, #1024
  82 004a 9042     		cmp	r0, r2
2721:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2722:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
2724:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
2725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2726:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2728:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2729:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
  83              		.loc 1 2729 0
  84 004c 18BF     		it	ne
  85 004e 24F00A04 		bicne	r4, r4, #10
  86              	.LVL10:
2720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
  87              		.loc 1 2720 0
  88 0052 01D1     		bne	.L8
  89              	.L2:
  90              	.LVL11:
2723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
  91              		.loc 1 2723 0
  92 0054 24F00204 		bic	r4, r4, #2
  93              	.LVL12:
  94              	.L8:
2730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  95              		.loc 1 2730 0
  96 0058 44F00104 		orr	r4, r4, #1
  97 005c 2143     		orrs	r1, r1, r4
  98              	.LVL13:
2731:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2732:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2733:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2734:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  99              		.loc 1 2734 0
 100 005e 0583     		strh	r5, [r0, #24]	@ movhi
2735:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 101              		.loc 1 2735 0
 102 0060 0184     		strh	r1, [r0, #32]	@ movhi
 103 0062 30BD     		pop	{r4, r5, pc}
 104              	.L11:
 105              		.align	2
 106              	.L10:
 107 0064 002C0140 		.word	1073818624
 108              		.cfi_endproc
 109              	.LFE143:
 111              		.section	.text.TI2_Config,"ax",%progbits
 112              		.align	1
 113              		.thumb
 114              		.thumb_func
 116              	TI2_Config:
 117              	.LFB144:
2736:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2737:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2738:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2739:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configure the TI2 as Input.
2740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2741:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2742:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2744:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
2748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
2749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
2750:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2752:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2753:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2754:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2755:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2756:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 118              		.loc 1 2756 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL14:
 123 0000 30B5     		push	{r4, r5, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 12
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 5, -8
 128              		.cfi_offset 14, -4
 129              	.LVL15:
2757:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
2758:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
2759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 130              		.loc 1 2759 0
 131 0002 048C     		ldrh	r4, [r0, #32]
 132 0004 24F01005 		bic	r5, r4, #16
 133 0008 2C04     		lsls	r4, r5, #16
 134 000a 250C     		lsrs	r5, r4, #16
 135 000c 0584     		strh	r5, [r0, #32]	@ movhi
2760:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 136              		.loc 1 2760 0
 137 000e 048B     		ldrh	r4, [r0, #24]
 138              	.LVL16:
2761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 139              		.loc 1 2761 0
 140 0010 058C     		ldrh	r5, [r0, #32]
 141 0012 ADB2     		uxth	r5, r5
 142              	.LVL17:
2762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
2763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 143              		.loc 1 2764 0
 144 0014 24F44074 		bic	r4, r4, #768
 145              	.LVL18:
 146 0018 2405     		lsls	r4, r4, #20
 147 001a 240D     		lsrs	r4, r4, #20
 148              	.LVL19:
2765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 149              		.loc 1 2765 0
 150 001c 44EA0222 		orr	r2, r4, r2, lsl #8
 151              	.LVL20:
2766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 152              		.loc 1 2766 0
 153 0020 42EA0333 		orr	r3, r2, r3, lsl #12
 154              	.LVL21:
 155 0024 9BB2     		uxth	r3, r3
 156              	.LVL22:
2767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 157              		.loc 1 2768 0
 158 0026 134A     		ldr	r2, .L19
 159 0028 9042     		cmp	r0, r2
 160 002a 12D0     		beq	.L13
 161              		.loc 1 2768 0 is_stmt 0 discriminator 1
 162 002c 02F50062 		add	r2, r2, #2048
 163 0030 9042     		cmp	r0, r2
 164 0032 0ED0     		beq	.L13
 165 0034 B0F1804F 		cmp	r0, #1073741824
 166 0038 0BD0     		beq	.L13
 167 003a A2F59832 		sub	r2, r2, #77824
 168 003e 9042     		cmp	r0, r2
 169 0040 07D0     		beq	.L13
 170 0042 02F58062 		add	r2, r2, #1024
 171 0046 9042     		cmp	r0, r2
 172 0048 03D0     		beq	.L13
2769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 173              		.loc 1 2769 0 is_stmt 1
 174 004a 02F58062 		add	r2, r2, #1024
 175 004e 9042     		cmp	r0, r2
 176 0050 07D1     		bne	.L14
 177              	.L13:
 178              	.LVL23:
2770:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2772:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P));
 179              		.loc 1 2772 0
 180 0052 25F02002 		bic	r2, r5, #32
2773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 181              		.loc 1 2773 0
 182 0056 42F01005 		orr	r5, r2, #16
 183              	.LVL24:
 184 005a 45EA0111 		orr	r1, r5, r1, lsl #4
 185              	.LVL25:
 186 005e 89B2     		uxth	r1, r1
 187              	.LVL26:
 188 0060 04E0     		b	.L15
 189              	.LVL27:
 190              	.L14:
2774:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2776:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2777:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 191              		.loc 1 2778 0
 192 0062 25F0A005 		bic	r5, r5, #160
 193              	.LVL28:
2779:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC2E);
 194              		.loc 1 2779 0
 195 0066 45F01005 		orr	r5, r5, #16
 196 006a 2943     		orrs	r1, r1, r5
 197              	.LVL29:
 198              	.L15:
2780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 199              		.loc 1 2783 0
 200 006c 0383     		strh	r3, [r0, #24]	@ movhi
2784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 201              		.loc 1 2784 0
 202 006e 0184     		strh	r1, [r0, #32]	@ movhi
 203 0070 30BD     		pop	{r4, r5, pc}
 204              	.L20:
 205 0072 00BF     		.align	2
 206              	.L19:
 207 0074 002C0140 		.word	1073818624
 208              		.cfi_endproc
 209              	.LFE144:
 211              		.section	.text.TIM_DeInit,"ax",%progbits
 212              		.align	1
 213              		.global	TIM_DeInit
 214              		.thumb
 215              		.thumb_func
 217              	TIM_DeInit:
 218              	.LFB56:
 129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 219              		.loc 1 129 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL30:
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI2:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 229              		.loc 1 133 0
 230 0002 5A4B     		ldr	r3, .L41
 231 0004 9842     		cmp	r0, r3
 232 0006 07D1     		bne	.L22
 135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 233              		.loc 1 135 0
 234 0008 4FF40060 		mov	r0, #2048
 235              	.LVL31:
 236 000c 0121     		movs	r1, #1
 237 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 238              	.LVL32:
 136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 239              		.loc 1 136 0
 240 0012 4FF40060 		mov	r0, #2048
 241 0016 A2E0     		b	.L39
 242              	.LVL33:
 243              	.L22:
 138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 244              		.loc 1 138 0
 245 0018 B0F1804F 		cmp	r0, #1073741824
 246 001c 05D1     		bne	.L23
 140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 247              		.loc 1 140 0
 248 001e 0120     		movs	r0, #1
 249              	.LVL34:
 250 0020 0146     		mov	r1, r0
 251 0022 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 252              	.LVL35:
 141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 253              		.loc 1 141 0
 254 0026 0120     		movs	r0, #1
 255 0028 07E0     		b	.L40
 256              	.LVL36:
 257              	.L23:
 143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 258              		.loc 1 143 0
 259 002a 5149     		ldr	r1, .L41+4
 260 002c 8842     		cmp	r0, r1
 261 002e 09D1     		bne	.L24
 145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 262              		.loc 1 145 0
 263 0030 0220     		movs	r0, #2
 264              	.LVL37:
 265 0032 0121     		movs	r1, #1
 266 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 267              	.LVL38:
 146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 268              		.loc 1 146 0
 269 0038 0220     		movs	r0, #2
 270              	.L40:
 271 003a 0021     		movs	r1, #0
 221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 272              		.loc 1 221 0
 273 003c BDE80840 		pop	{r3, lr}
 146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 274              		.loc 1 146 0
 275 0040 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 276              	.LVL39:
 277              	.L24:
 148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 278              		.loc 1 148 0
 279 0044 4B4A     		ldr	r2, .L41+8
 280 0046 9042     		cmp	r0, r2
 281 0048 05D1     		bne	.L25
 150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 282              		.loc 1 150 0
 283 004a 0420     		movs	r0, #4
 284              	.LVL40:
 285 004c 0121     		movs	r1, #1
 286 004e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 287              	.LVL41:
 151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 288              		.loc 1 151 0
 289 0052 0420     		movs	r0, #4
 290 0054 F1E7     		b	.L40
 291              	.LVL42:
 292              	.L25:
 153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 293              		.loc 1 153 0
 294 0056 484B     		ldr	r3, .L41+12
 295 0058 9842     		cmp	r0, r3
 296 005a 05D1     		bne	.L26
 155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 297              		.loc 1 155 0
 298 005c 0820     		movs	r0, #8
 299              	.LVL43:
 300 005e 0121     		movs	r1, #1
 301 0060 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 302              	.LVL44:
 156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 303              		.loc 1 156 0
 304 0064 0820     		movs	r0, #8
 305 0066 E8E7     		b	.L40
 306              	.LVL45:
 307              	.L26:
 158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 308              		.loc 1 158 0
 309 0068 4449     		ldr	r1, .L41+16
 310 006a 8842     		cmp	r0, r1
 311 006c 05D1     		bne	.L27
 160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 312              		.loc 1 160 0
 313 006e 1020     		movs	r0, #16
 314              	.LVL46:
 315 0070 0121     		movs	r1, #1
 316 0072 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 317              	.LVL47:
 161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 318              		.loc 1 161 0
 319 0076 1020     		movs	r0, #16
 320 0078 DFE7     		b	.L40
 321              	.LVL48:
 322              	.L27:
 163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 323              		.loc 1 163 0
 324 007a 414A     		ldr	r2, .L41+20
 325 007c 9042     		cmp	r0, r2
 326 007e 05D1     		bne	.L28
 165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 327              		.loc 1 165 0
 328 0080 2020     		movs	r0, #32
 329              	.LVL49:
 330 0082 0121     		movs	r1, #1
 331 0084 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 332              	.LVL50:
 166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 333              		.loc 1 166 0
 334 0088 2020     		movs	r0, #32
 335 008a D6E7     		b	.L40
 336              	.LVL51:
 337              	.L28:
 168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 338              		.loc 1 168 0
 339 008c 3D4B     		ldr	r3, .L41+24
 340 008e 9842     		cmp	r0, r3
 341 0090 07D1     		bne	.L29
 170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 342              		.loc 1 170 0
 343 0092 4FF40050 		mov	r0, #8192
 344              	.LVL52:
 345 0096 0121     		movs	r1, #1
 346 0098 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 347              	.LVL53:
 171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 348              		.loc 1 171 0
 349 009c 4FF40050 		mov	r0, #8192
 350 00a0 5DE0     		b	.L39
 351              	.LVL54:
 352              	.L29:
 173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 353              		.loc 1 173 0
 354 00a2 3949     		ldr	r1, .L41+28
 355 00a4 8842     		cmp	r0, r1
 356 00a6 07D1     		bne	.L30
 175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 357              		.loc 1 175 0
 358 00a8 4FF40020 		mov	r0, #524288
 359              	.LVL55:
 360 00ac 0121     		movs	r1, #1
 361 00ae FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 362              	.LVL56:
 176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 363              		.loc 1 176 0
 364 00b2 4FF40020 		mov	r0, #524288
 365 00b6 52E0     		b	.L39
 366              	.LVL57:
 367              	.L30:
 178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 368              		.loc 1 178 0
 369 00b8 344A     		ldr	r2, .L41+32
 370 00ba 9042     		cmp	r0, r2
 371 00bc 07D1     		bne	.L31
 180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 372              		.loc 1 180 0
 373 00be 4FF48010 		mov	r0, #1048576
 374              	.LVL58:
 375 00c2 0121     		movs	r1, #1
 376 00c4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 377              	.LVL59:
 181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 378              		.loc 1 181 0
 379 00c8 4FF48010 		mov	r0, #1048576
 380 00cc 47E0     		b	.L39
 381              	.LVL60:
 382              	.L31:
 183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 383              		.loc 1 183 0
 384 00ce 304B     		ldr	r3, .L41+36
 385 00d0 9842     		cmp	r0, r3
 386 00d2 07D1     		bne	.L32
 185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 387              		.loc 1 185 0
 388 00d4 4FF40010 		mov	r0, #2097152
 389              	.LVL61:
 390 00d8 0121     		movs	r1, #1
 391 00da FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 392              	.LVL62:
 186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 393              		.loc 1 186 0
 394 00de 4FF40010 		mov	r0, #2097152
 395 00e2 3CE0     		b	.L39
 396              	.LVL63:
 397              	.L32:
 188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 398              		.loc 1 188 0
 399 00e4 2B49     		ldr	r1, .L41+40
 400 00e6 8842     		cmp	r0, r1
 401 00e8 05D1     		bne	.L33
 190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 402              		.loc 1 190 0
 403 00ea 4020     		movs	r0, #64
 404              	.LVL64:
 405 00ec 0121     		movs	r1, #1
 406 00ee FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 407              	.LVL65:
 191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 408              		.loc 1 191 0
 409 00f2 4020     		movs	r0, #64
 410 00f4 A1E7     		b	.L40
 411              	.LVL66:
 412              	.L33:
 193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 413              		.loc 1 193 0
 414 00f6 284A     		ldr	r2, .L41+44
 415 00f8 9042     		cmp	r0, r2
 416 00fa 05D1     		bne	.L34
 195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 417              		.loc 1 195 0
 418 00fc 8020     		movs	r0, #128
 419              	.LVL67:
 420 00fe 0121     		movs	r1, #1
 421 0100 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 422              	.LVL68:
 196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 423              		.loc 1 196 0
 424 0104 8020     		movs	r0, #128
 425 0106 98E7     		b	.L40
 426              	.LVL69:
 427              	.L34:
 198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 428              		.loc 1 198 0
 429 0108 244B     		ldr	r3, .L41+48
 430 010a 9842     		cmp	r0, r3
 431 010c 07D1     		bne	.L35
 200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 432              		.loc 1 200 0
 433 010e 4FF48070 		mov	r0, #256
 434              	.LVL70:
 435 0112 0121     		movs	r1, #1
 436 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 437              	.LVL71:
 201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 438              		.loc 1 201 0
 439 0118 4FF48070 		mov	r0, #256
 440 011c 8DE7     		b	.L40
 441              	.LVL72:
 442              	.L35:
 203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 443              		.loc 1 203 0
 444 011e 2049     		ldr	r1, .L41+52
 445 0120 8842     		cmp	r0, r1
 446 0122 07D1     		bne	.L36
 205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 447              		.loc 1 205 0
 448 0124 4FF48030 		mov	r0, #65536
 449              	.LVL73:
 450 0128 0121     		movs	r1, #1
 451 012a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 452              	.LVL74:
 206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 453              		.loc 1 206 0
 454 012e 4FF48030 		mov	r0, #65536
 455 0132 14E0     		b	.L39
 456              	.LVL75:
 457              	.L36:
 208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 458              		.loc 1 208 0
 459 0134 1B4A     		ldr	r2, .L41+56
 460 0136 9042     		cmp	r0, r2
 461 0138 07D1     		bne	.L37
 210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 462              		.loc 1 210 0
 463 013a 4FF40030 		mov	r0, #131072
 464              	.LVL76:
 465 013e 0121     		movs	r1, #1
 466 0140 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 467              	.LVL77:
 211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 468              		.loc 1 211 0
 469 0144 4FF40030 		mov	r0, #131072
 470 0148 09E0     		b	.L39
 471              	.LVL78:
 472              	.L37:
 215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 473              		.loc 1 215 0
 474 014a 174B     		ldr	r3, .L41+60
 475 014c 9842     		cmp	r0, r3
 476 014e 0BD1     		bne	.L21
 217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 477              		.loc 1 217 0
 478 0150 4FF48020 		mov	r0, #262144
 479              	.LVL79:
 480 0154 0121     		movs	r1, #1
 481 0156 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 482              	.LVL80:
 218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 483              		.loc 1 218 0
 484 015a 4FF48020 		mov	r0, #262144
 485              	.L39:
 486 015e 0021     		movs	r1, #0
 221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 487              		.loc 1 221 0
 488 0160 BDE80840 		pop	{r3, lr}
 218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 489              		.loc 1 218 0
 490 0164 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 491              	.LVL81:
 492              	.L21:
 493 0168 08BD     		pop	{r3, pc}
 494              	.L42:
 495 016a 00BF     		.align	2
 496              	.L41:
 497 016c 002C0140 		.word	1073818624
 498 0170 00040040 		.word	1073742848
 499 0174 00080040 		.word	1073743872
 500 0178 000C0040 		.word	1073744896
 501 017c 00100040 		.word	1073745920
 502 0180 00140040 		.word	1073746944
 503 0184 00340140 		.word	1073820672
 504 0188 004C0140 		.word	1073826816
 505 018c 00500140 		.word	1073827840
 506 0190 00540140 		.word	1073828864
 507 0194 00180040 		.word	1073747968
 508 0198 001C0040 		.word	1073748992
 509 019c 00200040 		.word	1073750016
 510 01a0 00400140 		.word	1073823744
 511 01a4 00440140 		.word	1073824768
 512 01a8 00480140 		.word	1073825792
 513              		.cfi_endproc
 514              	.LFE56:
 516              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 517              		.align	1
 518              		.global	TIM_TimeBaseInit
 519              		.thumb
 520              		.thumb_func
 522              	TIM_TimeBaseInit:
 523              	.LFB57:
 233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 524              		.loc 1 233 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL82:
 530              	.LVL83:
 241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 531              		.loc 1 241 0
 532 0000 0388     		ldrh	r3, [r0, #0]
 533 0002 9BB2     		uxth	r3, r3
 534              	.LVL84:
 243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 535              		.loc 1 243 0
 536 0004 214A     		ldr	r2, .L52
 537 0006 9042     		cmp	r0, r2
 538 0008 12D0     		beq	.L44
 243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 539              		.loc 1 243 0 is_stmt 0 discriminator 1
 540 000a 02F50062 		add	r2, r2, #2048
 541 000e 9042     		cmp	r0, r2
 542 0010 0ED0     		beq	.L44
 543 0012 B0F1804F 		cmp	r0, #1073741824
 544 0016 0BD0     		beq	.L44
 545 0018 A2F59832 		sub	r2, r2, #77824
 546 001c 9042     		cmp	r0, r2
 547 001e 07D0     		beq	.L44
 548 0020 02F58062 		add	r2, r2, #1024
 549 0024 9042     		cmp	r0, r2
 550 0026 03D0     		beq	.L44
 244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 551              		.loc 1 244 0 is_stmt 1
 552 0028 02F58062 		add	r2, r2, #1024
 553 002c 9042     		cmp	r0, r2
 554 002e 03D1     		bne	.L45
 555              	.L44:
 247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 556              		.loc 1 247 0
 557 0030 23F07003 		bic	r3, r3, #112
 558              	.LVL85:
 248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 559              		.loc 1 248 0
 560 0034 4A88     		ldrh	r2, [r1, #2]
 561 0036 1343     		orrs	r3, r3, r2
 562              	.LVL86:
 563              	.L45:
 251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 564              		.loc 1 251 0
 565 0038 154A     		ldr	r2, .L52+4
 566 003a 9042     		cmp	r0, r2
 567 003c 08D0     		beq	.L46
 251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 568              		.loc 1 251 0 is_stmt 0 discriminator 1
 569 003e 02F58062 		add	r2, r2, #1024
 570 0042 9042     		cmp	r0, r2
 571 0044 04D0     		beq	.L46
 254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 572              		.loc 1 254 0 is_stmt 1
 573 0046 23F44073 		bic	r3, r3, #768
 574              	.LVL87:
 575 004a 9BB2     		uxth	r3, r3
 576              	.LVL88:
 255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 577              		.loc 1 255 0
 578 004c CA88     		ldrh	r2, [r1, #6]
 579 004e 1343     		orrs	r3, r3, r2
 580              	.LVL89:
 581              	.L46:
 258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 582              		.loc 1 258 0
 583 0050 0380     		strh	r3, [r0, #0]	@ movhi
 261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 584              		.loc 1 261 0
 585 0052 8B88     		ldrh	r3, [r1, #4]
 586              	.LVL90:
 587 0054 8385     		strh	r3, [r0, #44]	@ movhi
 264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 588              		.loc 1 264 0
 589 0056 0A88     		ldrh	r2, [r1, #0]
 590 0058 0285     		strh	r2, [r0, #40]	@ movhi
 266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 591              		.loc 1 266 0
 592 005a 0C4B     		ldr	r3, .L52
 593 005c 9842     		cmp	r0, r3
 594 005e 0FD0     		beq	.L47
 266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 595              		.loc 1 266 0 is_stmt 0 discriminator 1
 596 0060 03F50062 		add	r2, r3, #2048
 597 0064 9042     		cmp	r0, r2
 598 0066 0BD0     		beq	.L47
 599 0068 02F54063 		add	r3, r2, #3072
 600 006c 9842     		cmp	r0, r3
 601 006e 07D0     		beq	.L47
 602 0070 03F58062 		add	r2, r3, #1024
 603 0074 9042     		cmp	r0, r2
 604 0076 03D0     		beq	.L47
 605 0078 02F58063 		add	r3, r2, #1024
 606 007c 9842     		cmp	r0, r3
 607 007e 01D1     		bne	.L48
 608              	.L47:
 269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 609              		.loc 1 269 0 is_stmt 1
 610 0080 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 611              	.LVL91:
 612 0082 0186     		strh	r1, [r0, #48]	@ movhi
 613              	.L48:
 274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 614              		.loc 1 274 0
 615 0084 0122     		movs	r2, #1
 616 0086 8282     		strh	r2, [r0, #20]	@ movhi
 617 0088 7047     		bx	lr
 618              	.L53:
 619 008a 00BF     		.align	2
 620              	.L52:
 621 008c 002C0140 		.word	1073818624
 622 0090 00100040 		.word	1073745920
 623              		.cfi_endproc
 624              	.LFE57:
 626              		.section	.text.TIM_OC1Init,"ax",%progbits
 627              		.align	1
 628              		.global	TIM_OC1Init
 629              		.thumb
 630              		.thumb_func
 632              	TIM_OC1Init:
 633              	.LFB58:
 286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 634              		.loc 1 286 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL92:
 639 0000 70B5     		push	{r4, r5, r6, lr}
 640              	.LCFI3:
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 6, -8
 645              		.cfi_offset 14, -4
 646              	.LVL93:
 295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 647              		.loc 1 295 0
 648 0002 038C     		ldrh	r3, [r0, #32]
 649 0004 23F00102 		bic	r2, r3, #1
 650 0008 1404     		lsls	r4, r2, #16
 651 000a 250C     		lsrs	r5, r4, #16
 652 000c 0584     		strh	r5, [r0, #32]	@ movhi
 297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 653              		.loc 1 297 0
 654 000e 068C     		ldrh	r6, [r0, #32]
 655              	.LVL94:
 299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 656              		.loc 1 299 0
 657 0010 8388     		ldrh	r3, [r0, #4]
 658 0012 9CB2     		uxth	r4, r3
 659              	.LVL95:
 302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 660              		.loc 1 302 0
 661 0014 028B     		ldrh	r2, [r0, #24]
 662              	.LVL96:
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 663              		.loc 1 306 0
 664 0016 22F07305 		bic	r5, r2, #115
 665 001a 2B04     		lsls	r3, r5, #16
 666              	.LVL97:
 667 001c 1A0C     		lsrs	r2, r3, #16
 668              	.LVL98:
 309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 669              		.loc 1 309 0
 670 001e 0D88     		ldrh	r5, [r1, #0]
 671 0020 2A43     		orrs	r2, r2, r5
 672              	.LVL99:
 312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 673              		.loc 1 312 0
 674 0022 26F00206 		bic	r6, r6, #2
 675              	.LVL100:
 676 0026 3304     		lsls	r3, r6, #16
 677 0028 1B0C     		lsrs	r3, r3, #16
 678              	.LVL101:
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 679              		.loc 1 314 0
 680 002a 4E88     		ldrh	r6, [r1, #2]
 681 002c 0D89     		ldrh	r5, [r1, #8]
 682 002e 3543     		orrs	r5, r5, r6
 683 0030 ADB2     		uxth	r5, r5
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 684              		.loc 1 317 0
 685 0032 2B43     		orrs	r3, r3, r5
 686              	.LVL102:
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 687              		.loc 1 319 0
 688 0034 134D     		ldr	r5, .L57
 689 0036 A842     		cmp	r0, r5
 690 0038 0FD0     		beq	.L55
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 691              		.loc 1 319 0 is_stmt 0 discriminator 1
 692 003a 05F50065 		add	r5, r5, #2048
 693 003e A842     		cmp	r0, r5
 694 0040 0BD0     		beq	.L55
 695 0042 05F54065 		add	r5, r5, #3072
 696 0046 A842     		cmp	r0, r5
 697 0048 07D0     		beq	.L55
 698 004a 05F58065 		add	r5, r5, #1024
 699 004e A842     		cmp	r0, r5
 700 0050 03D0     		beq	.L55
 320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 701              		.loc 1 320 0 is_stmt 1
 702 0052 05F58065 		add	r5, r5, #1024
 703 0056 A842     		cmp	r0, r5
 704 0058 0ED1     		bne	.L56
 705              	.L55:
 328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 706              		.loc 1 328 0
 707 005a 23F00806 		bic	r6, r3, #8
 708              	.LVL103:
 330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 709              		.loc 1 330 0
 710 005e 4B89     		ldrh	r3, [r1, #10]
 711 0060 1E43     		orrs	r6, r6, r3
 712              	.LVL104:
 333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 713              		.loc 1 333 0
 714 0062 26F00403 		bic	r3, r6, #4
 715              	.LVL105:
 335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 716              		.loc 1 335 0
 717 0066 8D88     		ldrh	r5, [r1, #4]
 718 0068 2B43     		orrs	r3, r3, r5
 719              	.LVL106:
 339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 720              		.loc 1 339 0
 721 006a 24F44074 		bic	r4, r4, #768
 722              	.LVL107:
 342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 723              		.loc 1 342 0
 724 006e CE89     		ldrh	r6, [r1, #14]
 725 0070 8D89     		ldrh	r5, [r1, #12]
 726 0072 3543     		orrs	r5, r5, r6
 727 0074 ADB2     		uxth	r5, r5
 344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 728              		.loc 1 344 0
 729 0076 2C43     		orrs	r4, r4, r5
 730              	.LVL108:
 731              	.L56:
 347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 732              		.loc 1 347 0
 733 0078 8480     		strh	r4, [r0, #4]	@ movhi
 350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 734              		.loc 1 350 0
 735 007a 0283     		strh	r2, [r0, #24]	@ movhi
 353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 736              		.loc 1 353 0
 737 007c C988     		ldrh	r1, [r1, #6]
 738              	.LVL109:
 739 007e 8186     		strh	r1, [r0, #52]	@ movhi
 356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 740              		.loc 1 356 0
 741 0080 0384     		strh	r3, [r0, #32]	@ movhi
 742 0082 70BD     		pop	{r4, r5, r6, pc}
 743              	.L58:
 744              		.align	2
 745              	.L57:
 746 0084 002C0140 		.word	1073818624
 747              		.cfi_endproc
 748              	.LFE58:
 750              		.section	.text.TIM_OC2Init,"ax",%progbits
 751              		.align	1
 752              		.global	TIM_OC2Init
 753              		.thumb
 754              		.thumb_func
 756              	TIM_OC2Init:
 757              	.LFB59:
 369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 758              		.loc 1 369 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              	.LVL110:
 763 0000 30B5     		push	{r4, r5, lr}
 764              	.LCFI4:
 765              		.cfi_def_cfa_offset 12
 766              		.cfi_offset 4, -12
 767              		.cfi_offset 5, -8
 768              		.cfi_offset 14, -4
 769              	.LVL111:
 378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 770              		.loc 1 378 0
 771 0002 038C     		ldrh	r3, [r0, #32]
 772 0004 23F01002 		bic	r2, r3, #16
 773 0008 1404     		lsls	r4, r2, #16
 774 000a 250C     		lsrs	r5, r4, #16
 775 000c 0584     		strh	r5, [r0, #32]	@ movhi
 381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 776              		.loc 1 381 0
 777 000e 038C     		ldrh	r3, [r0, #32]
 778              	.LVL112:
 383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 779              		.loc 1 383 0
 780 0010 8288     		ldrh	r2, [r0, #4]
 781 0012 92B2     		uxth	r2, r2
 782              	.LVL113:
 386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 783              		.loc 1 386 0
 784 0014 048B     		ldrh	r4, [r0, #24]
 785              	.LVL114:
 390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 786              		.loc 1 390 0
 787 0016 24F4E645 		bic	r5, r4, #29440
 788 001a 2C04     		lsls	r4, r5, #16
 789              	.LVL115:
 790 001c 240C     		lsrs	r4, r4, #16
 791              	.LVL116:
 393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 792              		.loc 1 393 0
 793 001e 0D88     		ldrh	r5, [r1, #0]
 794 0020 44EA0524 		orr	r4, r4, r5, lsl #8
 795              	.LVL117:
 796 0024 A4B2     		uxth	r4, r4
 797              	.LVL118:
 396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 798              		.loc 1 396 0
 799 0026 23F02003 		bic	r3, r3, #32
 800              	.LVL119:
 801 002a 1D04     		lsls	r5, r3, #16
 802 002c 2B0C     		lsrs	r3, r5, #16
 803              	.LVL120:
 398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 804              		.loc 1 398 0
 805 002e 0D89     		ldrh	r5, [r1, #8]
 806 0030 43EA0513 		orr	r3, r3, r5, lsl #4
 807              	.LVL121:
 401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 808              		.loc 1 401 0
 809 0034 4D88     		ldrh	r5, [r1, #2]
 810 0036 43EA0513 		orr	r3, r3, r5, lsl #4
 811              	.LVL122:
 812 003a 9BB2     		uxth	r3, r3
 813              	.LVL123:
 403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 814              		.loc 1 403 0
 815 003c 114D     		ldr	r5, .L62
 816 003e A842     		cmp	r0, r5
 817 0040 03D0     		beq	.L60
 403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 818              		.loc 1 403 0 is_stmt 0 discriminator 1
 819 0042 05F50065 		add	r5, r5, #2048
 820 0046 A842     		cmp	r0, r5
 821 0048 15D1     		bne	.L61
 822              	.L60:
 411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 823              		.loc 1 411 0 is_stmt 1
 824 004a 23F08003 		bic	r3, r3, #128
 825              	.LVL124:
 826 004e 9BB2     		uxth	r3, r3
 827              	.LVL125:
 413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 828              		.loc 1 413 0
 829 0050 4D89     		ldrh	r5, [r1, #10]
 830 0052 43EA0513 		orr	r3, r3, r5, lsl #4
 831              	.LVL126:
 416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 832              		.loc 1 416 0
 833 0056 4FF6BF75 		movw	r5, #65471
 834 005a 1D40     		ands	r5, r5, r3
 835              	.LVL127:
 418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 836              		.loc 1 418 0
 837 005c 8B88     		ldrh	r3, [r1, #4]
 838 005e 45EA0315 		orr	r5, r5, r3, lsl #4
 839              	.LVL128:
 840 0062 ABB2     		uxth	r3, r5
 841              	.LVL129:
 422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 842              		.loc 1 422 0
 843 0064 22F44062 		bic	r2, r2, #3072
 844              	.LVL130:
 425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 845              		.loc 1 425 0
 846 0068 8D89     		ldrh	r5, [r1, #12]
 847              	.LVL131:
 848 006a 42EA8502 		orr	r2, r2, r5, lsl #2
 849              	.LVL132:
 427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 850              		.loc 1 427 0
 851 006e CD89     		ldrh	r5, [r1, #14]
 852 0070 42EA8502 		orr	r2, r2, r5, lsl #2
 853              	.LVL133:
 854 0074 92B2     		uxth	r2, r2
 855              	.LVL134:
 856              	.L61:
 430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 857              		.loc 1 430 0
 858 0076 8280     		strh	r2, [r0, #4]	@ movhi
 433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 859              		.loc 1 433 0
 860 0078 0483     		strh	r4, [r0, #24]	@ movhi
 436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 861              		.loc 1 436 0
 862 007a C988     		ldrh	r1, [r1, #6]
 863              	.LVL135:
 864 007c 0187     		strh	r1, [r0, #56]	@ movhi
 439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 865              		.loc 1 439 0
 866 007e 0384     		strh	r3, [r0, #32]	@ movhi
 867 0080 30BD     		pop	{r4, r5, pc}
 868              	.L63:
 869 0082 00BF     		.align	2
 870              	.L62:
 871 0084 002C0140 		.word	1073818624
 872              		.cfi_endproc
 873              	.LFE59:
 875              		.section	.text.TIM_OC3Init,"ax",%progbits
 876              		.align	1
 877              		.global	TIM_OC3Init
 878              		.thumb
 879              		.thumb_func
 881              	TIM_OC3Init:
 882              	.LFB60:
 451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 883              		.loc 1 451 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              	.LVL136:
 888 0000 30B5     		push	{r4, r5, lr}
 889              	.LCFI5:
 890              		.cfi_def_cfa_offset 12
 891              		.cfi_offset 4, -12
 892              		.cfi_offset 5, -8
 893              		.cfi_offset 14, -4
 894              	.LVL137:
 460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 895              		.loc 1 460 0
 896 0002 038C     		ldrh	r3, [r0, #32]
 897 0004 23F48072 		bic	r2, r3, #256
 898 0008 1404     		lsls	r4, r2, #16
 899 000a 250C     		lsrs	r5, r4, #16
 900 000c 0584     		strh	r5, [r0, #32]	@ movhi
 463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 901              		.loc 1 463 0
 902 000e 038C     		ldrh	r3, [r0, #32]
 903              	.LVL138:
 465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 904              		.loc 1 465 0
 905 0010 8288     		ldrh	r2, [r0, #4]
 906 0012 92B2     		uxth	r2, r2
 907              	.LVL139:
 468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 908              		.loc 1 468 0
 909 0014 848B     		ldrh	r4, [r0, #28]
 910              	.LVL140:
 472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 911              		.loc 1 472 0
 912 0016 24F07305 		bic	r5, r4, #115
 913 001a 2C04     		lsls	r4, r5, #16
 914              	.LVL141:
 915 001c 240C     		lsrs	r4, r4, #16
 916              	.LVL142:
 474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 917              		.loc 1 474 0
 918 001e 0D88     		ldrh	r5, [r1, #0]
 919 0020 2C43     		orrs	r4, r4, r5
 920              	.LVL143:
 477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 921              		.loc 1 477 0
 922 0022 23F40073 		bic	r3, r3, #512
 923              	.LVL144:
 924 0026 1D04     		lsls	r5, r3, #16
 925 0028 2B0C     		lsrs	r3, r5, #16
 926              	.LVL145:
 479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 927              		.loc 1 479 0
 928 002a 0D89     		ldrh	r5, [r1, #8]
 929 002c 43EA0523 		orr	r3, r3, r5, lsl #8
 930              	.LVL146:
 482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 931              		.loc 1 482 0
 932 0030 4D88     		ldrh	r5, [r1, #2]
 933 0032 43EA0523 		orr	r3, r3, r5, lsl #8
 934              	.LVL147:
 935 0036 9BB2     		uxth	r3, r3
 936              	.LVL148:
 484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 937              		.loc 1 484 0
 938 0038 114D     		ldr	r5, .L67
 939 003a A842     		cmp	r0, r5
 940 003c 03D0     		beq	.L65
 484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 941              		.loc 1 484 0 is_stmt 0 discriminator 1
 942 003e 05F50065 		add	r5, r5, #2048
 943 0042 A842     		cmp	r0, r5
 944 0044 15D1     		bne	.L66
 945              	.L65:
 492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 946              		.loc 1 492 0 is_stmt 1
 947 0046 23F40063 		bic	r3, r3, #2048
 948              	.LVL149:
 949 004a 9BB2     		uxth	r3, r3
 950              	.LVL150:
 494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 951              		.loc 1 494 0
 952 004c 4D89     		ldrh	r5, [r1, #10]
 953 004e 43EA0523 		orr	r3, r3, r5, lsl #8
 954              	.LVL151:
 496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 955              		.loc 1 496 0
 956 0052 4FF6FF35 		movw	r5, #64511
 957 0056 1D40     		ands	r5, r5, r3
 958              	.LVL152:
 499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 959              		.loc 1 499 0
 960 0058 8B88     		ldrh	r3, [r1, #4]
 961 005a 45EA0325 		orr	r5, r5, r3, lsl #8
 962              	.LVL153:
 963 005e ABB2     		uxth	r3, r5
 964              	.LVL154:
 502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 965              		.loc 1 502 0
 966 0060 22F44052 		bic	r2, r2, #12288
 967              	.LVL155:
 504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 968              		.loc 1 504 0
 969 0064 8D89     		ldrh	r5, [r1, #12]
 970              	.LVL156:
 971 0066 42EA0512 		orr	r2, r2, r5, lsl #4
 972              	.LVL157:
 506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 973              		.loc 1 506 0
 974 006a CD89     		ldrh	r5, [r1, #14]
 975 006c 42EA0512 		orr	r2, r2, r5, lsl #4
 976              	.LVL158:
 977 0070 92B2     		uxth	r2, r2
 978              	.LVL159:
 979              	.L66:
 509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 980              		.loc 1 509 0
 981 0072 8280     		strh	r2, [r0, #4]	@ movhi
 512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 982              		.loc 1 512 0
 983 0074 8483     		strh	r4, [r0, #28]	@ movhi
 515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 984              		.loc 1 515 0
 985 0076 C988     		ldrh	r1, [r1, #6]
 986              	.LVL160:
 987 0078 8187     		strh	r1, [r0, #60]	@ movhi
 518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 988              		.loc 1 518 0
 989 007a 0384     		strh	r3, [r0, #32]	@ movhi
 990 007c 30BD     		pop	{r4, r5, pc}
 991              	.L68:
 992 007e 00BF     		.align	2
 993              	.L67:
 994 0080 002C0140 		.word	1073818624
 995              		.cfi_endproc
 996              	.LFE60:
 998              		.section	.text.TIM_OC4Init,"ax",%progbits
 999              		.align	1
 1000              		.global	TIM_OC4Init
 1001              		.thumb
 1002              		.thumb_func
 1004              	TIM_OC4Init:
 1005              	.LFB61:
 530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1006              		.loc 1 530 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL161:
 1011 0000 30B5     		push	{r4, r5, lr}
 1012              	.LCFI6:
 1013              		.cfi_def_cfa_offset 12
 1014              		.cfi_offset 4, -12
 1015              		.cfi_offset 5, -8
 1016              		.cfi_offset 14, -4
 1017              	.LVL162:
 539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 1018              		.loc 1 539 0
 1019 0002 038C     		ldrh	r3, [r0, #32]
 1020 0004 23F48052 		bic	r2, r3, #4096
 1021 0008 1404     		lsls	r4, r2, #16
 1022 000a 250C     		lsrs	r5, r4, #16
 1023 000c 0584     		strh	r5, [r0, #32]	@ movhi
 542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 1024              		.loc 1 542 0
 1025 000e 038C     		ldrh	r3, [r0, #32]
 1026              	.LVL163:
 544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1027              		.loc 1 544 0
 1028 0010 8288     		ldrh	r2, [r0, #4]
 1029 0012 94B2     		uxth	r4, r2
 1030              	.LVL164:
 547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1031              		.loc 1 547 0
 1032 0014 858B     		ldrh	r5, [r0, #28]
 1033              	.LVL165:
 551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 1034              		.loc 1 551 0
 1035 0016 25F4E642 		bic	r2, r5, #29440
 1036              	.LVL166:
 1037 001a 1504     		lsls	r5, r2, #16
 1038              	.LVL167:
 1039 001c 2A0C     		lsrs	r2, r5, #16
 1040              	.LVL168:
 554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1041              		.loc 1 554 0
 1042 001e 0D88     		ldrh	r5, [r1, #0]
 1043 0020 42EA0522 		orr	r2, r2, r5, lsl #8
 1044              	.LVL169:
 1045 0024 92B2     		uxth	r2, r2
 1046              	.LVL170:
 557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 1047              		.loc 1 557 0
 1048 0026 23F40053 		bic	r3, r3, #8192
 1049              	.LVL171:
 1050 002a 1D04     		lsls	r5, r3, #16
 1051 002c 2B0C     		lsrs	r3, r5, #16
 1052              	.LVL172:
 559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1053              		.loc 1 559 0
 1054 002e 0D89     		ldrh	r5, [r1, #8]
 1055 0030 43EA0533 		orr	r3, r3, r5, lsl #12
 1056              	.LVL173:
 562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1057              		.loc 1 562 0
 1058 0034 4D88     		ldrh	r5, [r1, #2]
 1059 0036 43EA0533 		orr	r3, r3, r5, lsl #12
 1060              	.LVL174:
 1061 003a 9BB2     		uxth	r3, r3
 1062              	.LVL175:
 564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1063              		.loc 1 564 0
 1064 003c 094D     		ldr	r5, .L72
 1065 003e A842     		cmp	r0, r5
 1066 0040 03D0     		beq	.L70
 564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1067              		.loc 1 564 0 is_stmt 0 discriminator 1
 1068 0042 05F50065 		add	r5, r5, #2048
 1069 0046 A842     		cmp	r0, r5
 1070 0048 05D1     		bne	.L71
 1071              	.L70:
 568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 1072              		.loc 1 568 0 is_stmt 1
 1073 004a 24F48044 		bic	r4, r4, #16384
 1074              	.LVL176:
 570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1075              		.loc 1 570 0
 1076 004e 8D89     		ldrh	r5, [r1, #12]
 1077 0050 44EA8514 		orr	r4, r4, r5, lsl #6
 1078              	.LVL177:
 1079 0054 A4B2     		uxth	r4, r4
 1080              	.LVL178:
 1081              	.L71:
 573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 1082              		.loc 1 573 0
 1083 0056 8480     		strh	r4, [r0, #4]	@ movhi
 576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1084              		.loc 1 576 0
 1085 0058 8283     		strh	r2, [r0, #28]	@ movhi
 579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1086              		.loc 1 579 0
 1087 005a C988     		ldrh	r1, [r1, #6]
 1088              	.LVL179:
 1089 005c A0F84010 		strh	r1, [r0, #64]	@ movhi
 582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 1090              		.loc 1 582 0
 1091 0060 0384     		strh	r3, [r0, #32]	@ movhi
 1092 0062 30BD     		pop	{r4, r5, pc}
 1093              	.L73:
 1094              		.align	2
 1095              	.L72:
 1096 0064 002C0140 		.word	1073818624
 1097              		.cfi_endproc
 1098              	.LFE61:
 1100              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 1101              		.align	1
 1102              		.global	TIM_BDTRConfig
 1103              		.thumb
 1104              		.thumb_func
 1106              	TIM_BDTRConfig:
 1107              	.LFB64:
 719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1108              		.loc 1 719 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113              	.LVL180:
 730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 1114              		.loc 1 730 0
 1115 0000 4A88     		ldrh	r2, [r1, #2]
 1116 0002 0B88     		ldrh	r3, [r1, #0]
 1117 0004 1343     		orrs	r3, r3, r2
 1118 0006 8A88     		ldrh	r2, [r1, #4]
 1119 0008 1343     		orrs	r3, r3, r2
 1120 000a CA88     		ldrh	r2, [r1, #6]
 1121 000c 1343     		orrs	r3, r3, r2
 1122 000e 0A89     		ldrh	r2, [r1, #8]
 1123 0010 1343     		orrs	r3, r3, r2
 1124 0012 4A89     		ldrh	r2, [r1, #10]
 1125 0014 1343     		orrs	r3, r3, r2
 1126 0016 8989     		ldrh	r1, [r1, #12]
 1127              	.LVL181:
 1128 0018 0B43     		orrs	r3, r3, r1
 1129 001a 9BB2     		uxth	r3, r3
 1130 001c A0F84430 		strh	r3, [r0, #68]	@ movhi
 1131 0020 7047     		bx	lr
 1132              		.cfi_endproc
 1133              	.LFE64:
 1135              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 1136              		.align	1
 1137              		.global	TIM_TimeBaseStructInit
 1138              		.thumb
 1139              		.thumb_func
 1141              	TIM_TimeBaseStructInit:
 1142              	.LFB65:
 743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1143              		.loc 1 743 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              		@ link register save eliminated.
 1148              	.LVL182:
 745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 1149              		.loc 1 745 0
 1150 0000 4FF6FF73 		movw	r3, #65535
 1151 0004 8380     		strh	r3, [r0, #4]	@ movhi
 746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 1152              		.loc 1 746 0
 1153 0006 0021     		movs	r1, #0
 1154 0008 0180     		strh	r1, [r0, #0]	@ movhi
 747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 1155              		.loc 1 747 0
 1156 000a C180     		strh	r1, [r0, #6]	@ movhi
 748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 1157              		.loc 1 748 0
 1158 000c 4180     		strh	r1, [r0, #2]	@ movhi
 749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 1159              		.loc 1 749 0
 1160 000e 0172     		strb	r1, [r0, #8]
 1161 0010 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE65:
 1165              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1166              		.align	1
 1167              		.global	TIM_OCStructInit
 1168              		.thumb
 1169              		.thumb_func
 1171              	TIM_OCStructInit:
 1172              	.LFB66:
 759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1173              		.loc 1 759 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 1178              	.LVL183:
 761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1179              		.loc 1 761 0
 1180 0000 0023     		movs	r3, #0
 1181 0002 0380     		strh	r3, [r0, #0]	@ movhi
 762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1182              		.loc 1 762 0
 1183 0004 4380     		strh	r3, [r0, #2]	@ movhi
 763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1184              		.loc 1 763 0
 1185 0006 8380     		strh	r3, [r0, #4]	@ movhi
 764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 1186              		.loc 1 764 0
 1187 0008 C380     		strh	r3, [r0, #6]	@ movhi
 765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1188              		.loc 1 765 0
 1189 000a 0381     		strh	r3, [r0, #8]	@ movhi
 766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1190              		.loc 1 766 0
 1191 000c 4381     		strh	r3, [r0, #10]	@ movhi
 767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1192              		.loc 1 767 0
 1193 000e 8381     		strh	r3, [r0, #12]	@ movhi
 768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1194              		.loc 1 768 0
 1195 0010 C381     		strh	r3, [r0, #14]	@ movhi
 1196 0012 7047     		bx	lr
 1197              		.cfi_endproc
 1198              	.LFE66:
 1200              		.section	.text.TIM_ICStructInit,"ax",%progbits
 1201              		.align	1
 1202              		.global	TIM_ICStructInit
 1203              		.thumb
 1204              		.thumb_func
 1206              	TIM_ICStructInit:
 1207              	.LFB67:
 778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1208              		.loc 1 778 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              		@ link register save eliminated.
 1213              	.LVL184:
 780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 1214              		.loc 1 780 0
 1215 0000 0023     		movs	r3, #0
 1216 0002 0380     		strh	r3, [r0, #0]	@ movhi
 781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 1217              		.loc 1 781 0
 1218 0004 4380     		strh	r3, [r0, #2]	@ movhi
 782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 1219              		.loc 1 782 0
 1220 0006 0122     		movs	r2, #1
 1221 0008 8280     		strh	r2, [r0, #4]	@ movhi
 783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1222              		.loc 1 783 0
 1223 000a C380     		strh	r3, [r0, #6]	@ movhi
 784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 1224              		.loc 1 784 0
 1225 000c 0381     		strh	r3, [r0, #8]	@ movhi
 1226 000e 7047     		bx	lr
 1227              		.cfi_endproc
 1228              	.LFE67:
 1230              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 1231              		.align	1
 1232              		.global	TIM_BDTRStructInit
 1233              		.thumb
 1234              		.thumb_func
 1236              	TIM_BDTRStructInit:
 1237              	.LFB68:
 794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1238              		.loc 1 794 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 1243              	.LVL185:
 796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 1244              		.loc 1 796 0
 1245 0000 0023     		movs	r3, #0
 1246 0002 0380     		strh	r3, [r0, #0]	@ movhi
 797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 1247              		.loc 1 797 0
 1248 0004 4380     		strh	r3, [r0, #2]	@ movhi
 798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 1249              		.loc 1 798 0
 1250 0006 8380     		strh	r3, [r0, #4]	@ movhi
 799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 1251              		.loc 1 799 0
 1252 0008 C380     		strh	r3, [r0, #6]	@ movhi
 800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 1253              		.loc 1 800 0
 1254 000a 0381     		strh	r3, [r0, #8]	@ movhi
 801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 1255              		.loc 1 801 0
 1256 000c 4381     		strh	r3, [r0, #10]	@ movhi
 802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 1257              		.loc 1 802 0
 1258 000e 8381     		strh	r3, [r0, #12]	@ movhi
 1259 0010 7047     		bx	lr
 1260              		.cfi_endproc
 1261              	.LFE68:
 1263              		.section	.text.TIM_Cmd,"ax",%progbits
 1264              		.align	1
 1265              		.global	TIM_Cmd
 1266              		.thumb
 1267              		.thumb_func
 1269              	TIM_Cmd:
 1270              	.LFB69:
 813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1271              		.loc 1 813 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              		@ link register save eliminated.
 1276              	.LVL186:
 821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1277              		.loc 1 821 0
 1278 0000 0388     		ldrh	r3, [r0, #0]
 818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 1279              		.loc 1 818 0
 1280 0002 19B1     		cbz	r1, .L80
 821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1281              		.loc 1 821 0
 1282 0004 99B2     		uxth	r1, r3
 1283              	.LVL187:
 1284 0006 41F00103 		orr	r3, r1, #1
 1285 000a 03E0     		b	.L82
 1286              	.LVL188:
 1287              	.L80:
 826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 1288              		.loc 1 826 0
 1289 000c 23F00101 		bic	r1, r3, #1
 1290              	.LVL189:
 1291 0010 0A04     		lsls	r2, r1, #16
 1292 0012 130C     		lsrs	r3, r2, #16
 1293              	.L82:
 1294 0014 0380     		strh	r3, [r0, #0]	@ movhi
 1295 0016 7047     		bx	lr
 1296              		.cfi_endproc
 1297              	.LFE69:
 1299              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 1300              		.align	1
 1301              		.global	TIM_CtrlPWMOutputs
 1302              		.thumb
 1303              		.thumb_func
 1305              	TIM_CtrlPWMOutputs:
 1306              	.LFB70:
 838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1307              		.loc 1 838 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312              	.LVL190:
 845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 1313              		.loc 1 845 0
 1314 0000 B0F84430 		ldrh	r3, [r0, #68]
 842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 1315              		.loc 1 842 0
 1316 0004 29B1     		cbz	r1, .L84
 845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 1317              		.loc 1 845 0
 1318 0006 6FEA4343 		mvn	r3, r3, lsl #17
 1319 000a 6FEA5341 		mvn	r1, r3, lsr #17
 1320              	.LVL191:
 1321 000e 8AB2     		uxth	r2, r1
 1322 0010 01E0     		b	.L86
 1323              	.LVL192:
 1324              	.L84:
 850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 1325              		.loc 1 850 0
 1326 0012 5904     		lsls	r1, r3, #17
 1327              	.LVL193:
 1328 0014 4A0C     		lsrs	r2, r1, #17
 1329              	.L86:
 1330 0016 A0F84420 		strh	r2, [r0, #68]	@ movhi
 1331 001a 7047     		bx	lr
 1332              		.cfi_endproc
 1333              	.LFE70:
 1335              		.section	.text.TIM_ITConfig,"ax",%progbits
 1336              		.align	1
 1337              		.global	TIM_ITConfig
 1338              		.thumb
 1339              		.thumb_func
 1341              	TIM_ITConfig:
 1342              	.LFB71:
 879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {  
 1343              		.loc 1 879 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 1348              	.LVL194:
 888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 1349              		.loc 1 888 0
 1350 0000 8389     		ldrh	r3, [r0, #12]
 1351 0002 9BB2     		uxth	r3, r3
 885:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 1352              		.loc 1 885 0
 1353 0004 0AB1     		cbz	r2, .L88
 888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 1354              		.loc 1 888 0
 1355 0006 1943     		orrs	r1, r1, r3
 1356              	.LVL195:
 1357 0008 01E0     		b	.L90
 1358              	.LVL196:
 1359              	.L88:
 893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 1360              		.loc 1 893 0
 1361 000a 23EA0101 		bic	r1, r3, r1
 1362              	.LVL197:
 1363              	.L90:
 1364 000e 8181     		strh	r1, [r0, #12]	@ movhi
 1365 0010 7047     		bx	lr
 1366              		.cfi_endproc
 1367              	.LFE71:
 1369              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 1370              		.align	1
 1371              		.global	TIM_GenerateEvent
 1372              		.thumb
 1373              		.thumb_func
 1375              	TIM_GenerateEvent:
 1376              	.LFB72:
 916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
 1377              		.loc 1 916 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              		@ link register save eliminated.
 1382              	.LVL198:
 922:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 1383              		.loc 1 922 0
 1384 0000 8182     		strh	r1, [r0, #20]	@ movhi
 1385 0002 7047     		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE72:
 1389              		.section	.text.TIM_DMAConfig,"ax",%progbits
 1390              		.align	1
 1391              		.global	TIM_DMAConfig
 1392              		.thumb
 1393              		.thumb_func
 1395              	TIM_DMAConfig:
 1396              	.LFB73:
 944:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1397              		.loc 1 944 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 1402              	.LVL199:
 950:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 1403              		.loc 1 950 0
 1404 0000 0A43     		orrs	r2, r2, r1
 1405              	.LVL200:
 1406 0002 A0F84820 		strh	r2, [r0, #72]	@ movhi
 1407 0006 7047     		bx	lr
 1408              		.cfi_endproc
 1409              	.LFE73:
 1411              		.section	.text.TIM_DMACmd,"ax",%progbits
 1412              		.align	1
 1413              		.global	TIM_DMACmd
 1414              		.thumb
 1415              		.thumb_func
 1417              	TIM_DMACmd:
 1418              	.LFB74:
 971:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
 1419              		.loc 1 971 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 1423              		@ link register save eliminated.
 1424              	.LVL201:
 980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 1425              		.loc 1 980 0
 1426 0000 8389     		ldrh	r3, [r0, #12]
 1427 0002 9BB2     		uxth	r3, r3
 977:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 1428              		.loc 1 977 0
 1429 0004 0AB1     		cbz	r2, .L94
 980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 1430              		.loc 1 980 0
 1431 0006 1943     		orrs	r1, r1, r3
 1432              	.LVL202:
 1433 0008 01E0     		b	.L96
 1434              	.LVL203:
 1435              	.L94:
 985:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 1436              		.loc 1 985 0
 1437 000a 23EA0101 		bic	r1, r3, r1
 1438              	.LVL204:
 1439              	.L96:
 1440 000e 8181     		strh	r1, [r0, #12]	@ movhi
 1441 0010 7047     		bx	lr
 1442              		.cfi_endproc
 1443              	.LFE74:
 1445              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 1446              		.align	1
 1447              		.global	TIM_InternalClockConfig
 1448              		.thumb
 1449              		.thumb_func
 1451              	TIM_InternalClockConfig:
 1452              	.LFB75:
 996:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1453              		.loc 1 996 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL205:
1000:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 1459              		.loc 1 1000 0
 1460 0000 0389     		ldrh	r3, [r0, #8]
 1461 0002 23F00701 		bic	r1, r3, #7
 1462 0006 0A04     		lsls	r2, r1, #16
 1463 0008 130C     		lsrs	r3, r2, #16
 1464 000a 0381     		strh	r3, [r0, #8]	@ movhi
 1465 000c 7047     		bx	lr
 1466              		.cfi_endproc
 1467              	.LFE75:
 1469              		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 1470              		.align	1
 1471              		.global	TIM_ITRxExternalClockConfig
 1472              		.thumb
 1473              		.thumb_func
 1475              	TIM_ITRxExternalClockConfig:
 1476              	.LFB76:
1015:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1477              		.loc 1 1015 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481              		@ link register save eliminated.
 1482              	.LVL206:
 1483              	.LVL207:
 1484              	.LBB6:
 1485              	.LBB7:
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 1486              		.loc 1 1242 0
 1487 0000 0389     		ldrh	r3, [r0, #8]
 1488              	.LVL208:
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 1489              		.loc 1 1244 0
 1490 0002 23F07002 		bic	r2, r3, #112
 1491 0006 1304     		lsls	r3, r2, #16
 1492              	.LVL209:
 1493 0008 1A0C     		lsrs	r2, r3, #16
 1494              	.LVL210:
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 1495              		.loc 1 1246 0
 1496 000a 1143     		orrs	r1, r1, r2
 1497              	.LVL211:
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 1498              		.loc 1 1248 0
 1499 000c 0181     		strh	r1, [r0, #8]	@ movhi
 1500              	.LBE7:
 1501              	.LBE6:
1022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 1502              		.loc 1 1022 0
 1503 000e 0189     		ldrh	r1, [r0, #8]
 1504              	.LVL212:
 1505 0010 8BB2     		uxth	r3, r1
 1506 0012 43F00702 		orr	r2, r3, #7
 1507 0016 0281     		strh	r2, [r0, #8]	@ movhi
 1508 0018 7047     		bx	lr
 1509              		.cfi_endproc
 1510              	.LFE76:
 1512              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 1513              		.align	1
 1514              		.global	TIM_TIxExternalClockConfig
 1515              		.thumb
 1516              		.thumb_func
 1518              	TIM_TIxExternalClockConfig:
 1519              	.LFB77:
1043:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1520              		.loc 1 1043 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              	.LVL213:
 1525 0000 38B5     		push	{r3, r4, r5, lr}
 1526              	.LCFI7:
 1527              		.cfi_def_cfa_offset 16
 1528              		.cfi_offset 3, -16
 1529              		.cfi_offset 4, -12
 1530              		.cfi_offset 5, -8
 1531              		.cfi_offset 14, -4
 1532 0002 0446     		mov	r4, r0
 1533 0004 0D46     		mov	r5, r1
 1534 0006 1146     		mov	r1, r2
 1535              	.LVL214:
1052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 1536              		.loc 1 1052 0
 1537 0008 0122     		movs	r2, #1
 1538              	.LVL215:
1050:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 1539              		.loc 1 1050 0
 1540 000a 602D     		cmp	r5, #96
 1541 000c 02D1     		bne	.L100
1052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 1542              		.loc 1 1052 0
 1543 000e FFF7FEFF 		bl	TI2_Config
 1544              	.LVL216:
 1545 0012 01E0     		b	.L101
 1546              	.LVL217:
 1547              	.L100:
1056:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 1548              		.loc 1 1056 0
 1549 0014 FFF7FEFF 		bl	TI1_Config
 1550              	.LVL218:
 1551              	.L101:
 1552              	.LBB8:
 1553              	.LBB9:
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 1554              		.loc 1 1242 0
 1555 0018 2389     		ldrh	r3, [r4, #8]
 1556              	.LVL219:
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 1557              		.loc 1 1244 0
 1558 001a 23F07000 		bic	r0, r3, #112
 1559 001e 0104     		lsls	r1, r0, #16
 1560 0020 0A0C     		lsrs	r2, r1, #16
 1561              	.LVL220:
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 1562              		.loc 1 1246 0
 1563 0022 45EA0203 		orr	r3, r5, r2
 1564              	.LVL221:
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 1565              		.loc 1 1248 0
 1566 0026 2381     		strh	r3, [r4, #8]	@ movhi
 1567              	.LBE9:
 1568              	.LBE8:
1061:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 1569              		.loc 1 1061 0
 1570 0028 2089     		ldrh	r0, [r4, #8]
 1571 002a 81B2     		uxth	r1, r0
 1572 002c 41F00702 		orr	r2, r1, #7
 1573 0030 2281     		strh	r2, [r4, #8]	@ movhi
 1574 0032 38BD     		pop	{r3, r4, r5, pc}
 1575              		.cfi_endproc
 1576              	.LFE77:
 1578              		.section	.text.TIM_ETRConfig,"ax",%progbits
 1579              		.align	1
 1580              		.global	TIM_ETRConfig
 1581              		.thumb
 1582              		.thumb_func
 1584              	TIM_ETRConfig:
 1585              	.LFB80:
1156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1586              		.loc 1 1156 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              	.LVL222:
 1591 0000 10B5     		push	{r4, lr}
 1592              	.LCFI8:
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 4, -8
 1595              		.cfi_offset 14, -4
 1596              	.LVL223:
1163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 1597              		.loc 1 1163 0
 1598 0002 0489     		ldrh	r4, [r0, #8]
 1599              	.LVL224:
1165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
 1600              		.loc 1 1165 0
 1601 0004 E4B2     		uxtb	r4, r4
 1602              	.LVL225:
1167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 1603              		.loc 1 1167 0
 1604 0006 2143     		orrs	r1, r1, r4
 1605              	.LVL226:
 1606 0008 0A43     		orrs	r2, r2, r1
 1607              	.LVL227:
 1608 000a 42EA0323 		orr	r3, r2, r3, lsl #8
 1609              	.LVL228:
 1610 000e 9CB2     		uxth	r4, r3
 1611              	.LVL229:
1169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 1612              		.loc 1 1169 0
 1613 0010 0481     		strh	r4, [r0, #8]	@ movhi
 1614 0012 10BD     		pop	{r4, pc}
 1615              		.cfi_endproc
 1616              	.LFE80:
 1618              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 1619              		.align	1
 1620              		.global	TIM_ETRClockMode2Config
 1621              		.thumb
 1622              		.thumb_func
 1624              	TIM_ETRClockMode2Config:
 1625              	.LFB79:
1125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1626              		.loc 1 1125 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              	.LVL230:
 1631 0000 10B5     		push	{r4, lr}
 1632              	.LCFI9:
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 4, -8
 1635              		.cfi_offset 14, -4
 1636 0002 0446     		mov	r4, r0
1132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 1637              		.loc 1 1132 0
 1638 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1639              	.LVL231:
1134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 1640              		.loc 1 1134 0
 1641 0008 2389     		ldrh	r3, [r4, #8]
 1642 000a 98B2     		uxth	r0, r3
 1643 000c 40F48041 		orr	r1, r0, #16384
 1644 0010 2181     		strh	r1, [r4, #8]	@ movhi
 1645 0012 10BD     		pop	{r4, pc}
 1646              		.cfi_endproc
 1647              	.LFE79:
 1649              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 1650              		.align	1
 1651              		.global	TIM_ETRClockMode1Config
 1652              		.thumb
 1653              		.thumb_func
 1655              	TIM_ETRClockMode1Config:
 1656              	.LFB78:
1083:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1657              		.loc 1 1083 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              	.LVL232:
 1662 0000 10B5     		push	{r4, lr}
 1663              	.LCFI10:
 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 4, -8
 1666              		.cfi_offset 14, -4
 1667 0002 0446     		mov	r4, r0
 1668              	.LVL233:
1091:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 1669              		.loc 1 1091 0
 1670 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1671              	.LVL234:
1094:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 1672              		.loc 1 1094 0
 1673 0008 2389     		ldrh	r3, [r4, #8]
 1674              	.LVL235:
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 1675              		.loc 1 1100 0
 1676 000a 23F07700 		bic	r0, r3, #119
 1677 000e 0104     		lsls	r1, r0, #16
 1678 0010 0A0C     		lsrs	r2, r1, #16
 1679              	.LVL236:
1101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 1680              		.loc 1 1101 0
 1681 0012 42F07703 		orr	r3, r2, #119
 1682              	.LVL237:
1103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 1683              		.loc 1 1103 0
 1684 0016 2381     		strh	r3, [r4, #8]	@ movhi
 1685 0018 10BD     		pop	{r4, pc}
 1686              		.cfi_endproc
 1687              	.LFE78:
 1689              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 1690              		.align	1
 1691              		.global	TIM_PrescalerConfig
 1692              		.thumb
 1693              		.thumb_func
 1695              	TIM_PrescalerConfig:
 1696              	.LFB81:
1183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1697              		.loc 1 1183 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              		@ link register save eliminated.
 1702              	.LVL238:
1188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
 1703              		.loc 1 1188 0
 1704 0000 0185     		strh	r1, [r0, #40]	@ movhi
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 1705              		.loc 1 1190 0
 1706 0002 8282     		strh	r2, [r0, #20]	@ movhi
 1707 0004 7047     		bx	lr
 1708              		.cfi_endproc
 1709              	.LFE81:
 1711              		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 1712              		.align	1
 1713              		.global	TIM_CounterModeConfig
 1714              		.thumb
 1715              		.thumb_func
 1717              	TIM_CounterModeConfig:
 1718              	.LFB82:
1206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1719              		.loc 1 1206 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723              		@ link register save eliminated.
 1724              	.LVL239:
 1725              	.LVL240:
1211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
 1726              		.loc 1 1211 0
 1727 0000 0388     		ldrh	r3, [r0, #0]
 1728              	.LVL241:
1213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 1729              		.loc 1 1213 0
 1730 0002 23F07002 		bic	r2, r3, #112
 1731 0006 1304     		lsls	r3, r2, #16
 1732              	.LVL242:
 1733 0008 1A0C     		lsrs	r2, r3, #16
 1734              	.LVL243:
1215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
 1735              		.loc 1 1215 0
 1736 000a 1143     		orrs	r1, r1, r2
 1737              	.LVL244:
1217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 1738              		.loc 1 1217 0
 1739 000c 0180     		strh	r1, [r0, #0]	@ movhi
 1740 000e 7047     		bx	lr
 1741              		.cfi_endproc
 1742              	.LFE82:
 1744              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 1745              		.align	1
 1746              		.global	TIM_SelectInputTrigger
 1747              		.thumb
 1748              		.thumb_func
 1750              	TIM_SelectInputTrigger:
 1751              	.LFB83:
1236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1752              		.loc 1 1236 0
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 0
 1755              		@ frame_needed = 0, uses_anonymous_args = 0
 1756              		@ link register save eliminated.
 1757              	.LVL245:
 1758              	.LVL246:
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 1759              		.loc 1 1242 0
 1760 0000 0389     		ldrh	r3, [r0, #8]
 1761              	.LVL247:
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 1762              		.loc 1 1244 0
 1763 0002 23F07002 		bic	r2, r3, #112
 1764 0006 1304     		lsls	r3, r2, #16
 1765              	.LVL248:
 1766 0008 1A0C     		lsrs	r2, r3, #16
 1767              	.LVL249:
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 1768              		.loc 1 1246 0
 1769 000a 1143     		orrs	r1, r1, r2
 1770              	.LVL250:
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 1771              		.loc 1 1248 0
 1772 000c 0181     		strh	r1, [r0, #8]	@ movhi
 1773 000e 7047     		bx	lr
 1774              		.cfi_endproc
 1775              	.LFE83:
 1777              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 1778              		.align	1
 1779              		.global	TIM_EncoderInterfaceConfig
 1780              		.thumb
 1781              		.thumb_func
 1783              	TIM_EncoderInterfaceConfig:
 1784              	.LFB84:
1272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1785              		.loc 1 1272 0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 0
 1788              		@ frame_needed = 0, uses_anonymous_args = 0
 1789              	.LVL251:
 1790 0000 70B5     		push	{r4, r5, r6, lr}
 1791              	.LCFI11:
 1792              		.cfi_def_cfa_offset 16
 1793              		.cfi_offset 4, -16
 1794              		.cfi_offset 5, -12
 1795              		.cfi_offset 6, -8
 1796              		.cfi_offset 14, -4
 1797              	.LVL252:
1284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
 1798              		.loc 1 1284 0
 1799 0002 0589     		ldrh	r5, [r0, #8]
 1800              	.LVL253:
1287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1801              		.loc 1 1287 0
 1802 0004 048B     		ldrh	r4, [r0, #24]
 1803              	.LVL254:
1290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 1804              		.loc 1 1290 0
 1805 0006 068C     		ldrh	r6, [r0, #32]
 1806 0008 B6B2     		uxth	r6, r6
 1807              	.LVL255:
1293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 1808              		.loc 1 1293 0
 1809 000a 25F00705 		bic	r5, r5, #7
 1810              	.LVL256:
 1811 000e 2D04     		lsls	r5, r5, #16
 1812 0010 2D0C     		lsrs	r5, r5, #16
 1813              	.LVL257:
1294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 1814              		.loc 1 1294 0
 1815 0012 2943     		orrs	r1, r1, r5
 1816              	.LVL258:
1297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
 1817              		.loc 1 1297 0
 1818 0014 24F44074 		bic	r4, r4, #768
 1819              	.LVL259:
 1820 0018 24F00304 		bic	r4, r4, #3
 1821 001c 2404     		lsls	r4, r4, #16
 1822 001e 240C     		lsrs	r4, r4, #16
 1823              	.LVL260:
1298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 1824              		.loc 1 1298 0
 1825 0020 44F48074 		orr	r4, r4, #256
 1826              	.LVL261:
 1827 0024 44F00104 		orr	r4, r4, #1
 1828              	.LVL262:
1301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
 1829              		.loc 1 1301 0
 1830 0028 26F02206 		bic	r6, r6, #34
 1831              	.LVL263:
1302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 1832              		.loc 1 1302 0
 1833 002c 3243     		orrs	r2, r2, r6
 1834              	.LVL264:
 1835 002e 42EA0313 		orr	r3, r2, r3, lsl #4
 1836              	.LVL265:
 1837 0032 9EB2     		uxth	r6, r3
 1838              	.LVL266:
1305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
 1839              		.loc 1 1305 0
 1840 0034 0181     		strh	r1, [r0, #8]	@ movhi
1307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1841              		.loc 1 1307 0
 1842 0036 0483     		strh	r4, [r0, #24]	@ movhi
1309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 1843              		.loc 1 1309 0
 1844 0038 0684     		strh	r6, [r0, #32]	@ movhi
 1845 003a 70BD     		pop	{r4, r5, r6, pc}
 1846              		.cfi_endproc
 1847              	.LFE84:
 1849              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 1850              		.align	1
 1851              		.global	TIM_ForcedOC1Config
 1852              		.thumb
 1853              		.thumb_func
 1855              	TIM_ForcedOC1Config:
 1856              	.LFB85:
1322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1857              		.loc 1 1322 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              		@ link register save eliminated.
 1862              	.LVL267:
 1863              	.LVL268:
1327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1864              		.loc 1 1327 0
 1865 0000 038B     		ldrh	r3, [r0, #24]
 1866              	.LVL269:
1329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
 1867              		.loc 1 1329 0
 1868 0002 23F07002 		bic	r2, r3, #112
 1869 0006 1304     		lsls	r3, r2, #16
 1870              	.LVL270:
 1871 0008 1A0C     		lsrs	r2, r3, #16
 1872              	.LVL271:
1331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 1873              		.loc 1 1331 0
 1874 000a 1143     		orrs	r1, r1, r2
 1875              	.LVL272:
1333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1876              		.loc 1 1333 0
 1877 000c 0183     		strh	r1, [r0, #24]	@ movhi
 1878 000e 7047     		bx	lr
 1879              		.cfi_endproc
 1880              	.LFE85:
 1882              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 1883              		.align	1
 1884              		.global	TIM_ForcedOC2Config
 1885              		.thumb
 1886              		.thumb_func
 1888              	TIM_ForcedOC2Config:
 1889              	.LFB86:
1346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1890              		.loc 1 1346 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
 1895              	.LVL273:
 1896              	.LVL274:
1351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1897              		.loc 1 1351 0
 1898 0000 038B     		ldrh	r3, [r0, #24]
 1899              	.LVL275:
1353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
 1900              		.loc 1 1353 0
 1901 0002 23F4E042 		bic	r2, r3, #28672
 1902 0006 1304     		lsls	r3, r2, #16
 1903              	.LVL276:
 1904 0008 1A0C     		lsrs	r2, r3, #16
 1905              	.LVL277:
1355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 1906              		.loc 1 1355 0
 1907 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 1908              	.LVL278:
 1909 000e 8BB2     		uxth	r3, r1
 1910              	.LVL279:
1357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1911              		.loc 1 1357 0
 1912 0010 0383     		strh	r3, [r0, #24]	@ movhi
 1913 0012 7047     		bx	lr
 1914              		.cfi_endproc
 1915              	.LFE86:
 1917              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 1918              		.align	1
 1919              		.global	TIM_ForcedOC3Config
 1920              		.thumb
 1921              		.thumb_func
 1923              	TIM_ForcedOC3Config:
 1924              	.LFB87:
1370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1925              		.loc 1 1370 0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
 1930              	.LVL280:
 1931              	.LVL281:
1375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1932              		.loc 1 1375 0
 1933 0000 838B     		ldrh	r3, [r0, #28]
 1934              	.LVL282:
1377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
 1935              		.loc 1 1377 0
 1936 0002 23F07002 		bic	r2, r3, #112
 1937 0006 1304     		lsls	r3, r2, #16
 1938              	.LVL283:
 1939 0008 1A0C     		lsrs	r2, r3, #16
 1940              	.LVL284:
1379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 1941              		.loc 1 1379 0
 1942 000a 1143     		orrs	r1, r1, r2
 1943              	.LVL285:
1381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1944              		.loc 1 1381 0
 1945 000c 8183     		strh	r1, [r0, #28]	@ movhi
 1946 000e 7047     		bx	lr
 1947              		.cfi_endproc
 1948              	.LFE87:
 1950              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 1951              		.align	1
 1952              		.global	TIM_ForcedOC4Config
 1953              		.thumb
 1954              		.thumb_func
 1956              	TIM_ForcedOC4Config:
 1957              	.LFB88:
1394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1958              		.loc 1 1394 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962              		@ link register save eliminated.
 1963              	.LVL286:
 1964              	.LVL287:
1399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1965              		.loc 1 1399 0
 1966 0000 838B     		ldrh	r3, [r0, #28]
 1967              	.LVL288:
1401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
 1968              		.loc 1 1401 0
 1969 0002 23F4E042 		bic	r2, r3, #28672
 1970 0006 1304     		lsls	r3, r2, #16
 1971              	.LVL289:
 1972 0008 1A0C     		lsrs	r2, r3, #16
 1973              	.LVL290:
1403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 1974              		.loc 1 1403 0
 1975 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 1976              	.LVL291:
 1977 000e 8BB2     		uxth	r3, r1
 1978              	.LVL292:
1405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1979              		.loc 1 1405 0
 1980 0010 8383     		strh	r3, [r0, #28]	@ movhi
 1981 0012 7047     		bx	lr
 1982              		.cfi_endproc
 1983              	.LFE88:
 1985              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 1986              		.align	1
 1987              		.global	TIM_ARRPreloadConfig
 1988              		.thumb
 1989              		.thumb_func
 1991              	TIM_ARRPreloadConfig:
 1992              	.LFB89:
1416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 1993              		.loc 1 1416 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              		@ link register save eliminated.
 1998              	.LVL293:
1423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 1999              		.loc 1 1423 0
 2000 0000 0388     		ldrh	r3, [r0, #0]
1420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2001              		.loc 1 1420 0
 2002 0002 19B1     		cbz	r1, .L114
1423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 2003              		.loc 1 1423 0
 2004 0004 99B2     		uxth	r1, r3
 2005              	.LVL294:
 2006 0006 41F08003 		orr	r3, r1, #128
 2007 000a 03E0     		b	.L116
 2008              	.LVL295:
 2009              	.L114:
1428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
 2010              		.loc 1 1428 0
 2011 000c 23F08001 		bic	r1, r3, #128
 2012              	.LVL296:
 2013 0010 0A04     		lsls	r2, r1, #16
 2014 0012 130C     		lsrs	r3, r2, #16
 2015              	.L116:
 2016 0014 0380     		strh	r3, [r0, #0]	@ movhi
 2017 0016 7047     		bx	lr
 2018              		.cfi_endproc
 2019              	.LFE89:
 2021              		.section	.text.TIM_SelectCOM,"ax",%progbits
 2022              		.align	1
 2023              		.global	TIM_SelectCOM
 2024              		.thumb
 2025              		.thumb_func
 2027              	TIM_SelectCOM:
 2028              	.LFB90:
1440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2029              		.loc 1 1440 0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 0
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
 2033              		@ link register save eliminated.
 2034              	.LVL297:
1447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 2035              		.loc 1 1447 0
 2036 0000 8388     		ldrh	r3, [r0, #4]
1444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2037              		.loc 1 1444 0
 2038 0002 19B1     		cbz	r1, .L118
1447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 2039              		.loc 1 1447 0
 2040 0004 99B2     		uxth	r1, r3
 2041              	.LVL298:
 2042 0006 41F00403 		orr	r3, r1, #4
 2043 000a 03E0     		b	.L120
 2044              	.LVL299:
 2045              	.L118:
1452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
 2046              		.loc 1 1452 0
 2047 000c 23F00401 		bic	r1, r3, #4
 2048              	.LVL300:
 2049 0010 0A04     		lsls	r2, r1, #16
 2050 0012 130C     		lsrs	r3, r2, #16
 2051              	.L120:
 2052 0014 8380     		strh	r3, [r0, #4]	@ movhi
 2053 0016 7047     		bx	lr
 2054              		.cfi_endproc
 2055              	.LFE90:
 2057              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 2058              		.align	1
 2059              		.global	TIM_SelectCCDMA
 2060              		.thumb
 2061              		.thumb_func
 2063              	TIM_SelectCCDMA:
 2064              	.LFB91:
1465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2065              		.loc 1 1465 0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 0
 2068              		@ frame_needed = 0, uses_anonymous_args = 0
 2069              		@ link register save eliminated.
 2070              	.LVL301:
1472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 2071              		.loc 1 1472 0
 2072 0000 8388     		ldrh	r3, [r0, #4]
1469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2073              		.loc 1 1469 0
 2074 0002 19B1     		cbz	r1, .L122
1472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 2075              		.loc 1 1472 0
 2076 0004 99B2     		uxth	r1, r3
 2077              	.LVL302:
 2078 0006 41F00803 		orr	r3, r1, #8
 2079 000a 03E0     		b	.L124
 2080              	.LVL303:
 2081              	.L122:
1477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
 2082              		.loc 1 1477 0
 2083 000c 23F00801 		bic	r1, r3, #8
 2084              	.LVL304:
 2085 0010 0A04     		lsls	r2, r1, #16
 2086 0012 130C     		lsrs	r3, r2, #16
 2087              	.L124:
 2088 0014 8380     		strh	r3, [r0, #4]	@ movhi
 2089 0016 7047     		bx	lr
 2090              		.cfi_endproc
 2091              	.LFE91:
 2093              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 2094              		.align	1
 2095              		.global	TIM_CCPreloadControl
 2096              		.thumb
 2097              		.thumb_func
 2099              	TIM_CCPreloadControl:
 2100              	.LFB92:
1490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
 2101              		.loc 1 1490 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              		@ link register save eliminated.
 2106              	.LVL305:
1497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 2107              		.loc 1 1497 0
 2108 0000 8388     		ldrh	r3, [r0, #4]
1494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2109              		.loc 1 1494 0
 2110 0002 19B1     		cbz	r1, .L126
1497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 2111              		.loc 1 1497 0
 2112 0004 99B2     		uxth	r1, r3
 2113              	.LVL306:
 2114 0006 41F00103 		orr	r3, r1, #1
 2115 000a 03E0     		b	.L128
 2116              	.LVL307:
 2117              	.L126:
1502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
 2118              		.loc 1 1502 0
 2119 000c 23F00101 		bic	r1, r3, #1
 2120              	.LVL308:
 2121 0010 0A04     		lsls	r2, r1, #16
 2122 0012 130C     		lsrs	r3, r2, #16
 2123              	.L128:
 2124 0014 8380     		strh	r3, [r0, #4]	@ movhi
 2125 0016 7047     		bx	lr
 2126              		.cfi_endproc
 2127              	.LFE92:
 2129              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2130              		.align	1
 2131              		.global	TIM_OC1PreloadConfig
 2132              		.thumb
 2133              		.thumb_func
 2135              	TIM_OC1PreloadConfig:
 2136              	.LFB93:
1516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2137              		.loc 1 1516 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
 2142              	.LVL309:
 2143              	.LVL310:
1521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2144              		.loc 1 1521 0
 2145 0000 038B     		ldrh	r3, [r0, #24]
 2146              	.LVL311:
1523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
 2147              		.loc 1 1523 0
 2148 0002 23F00802 		bic	r2, r3, #8
 2149 0006 1304     		lsls	r3, r2, #16
 2150              	.LVL312:
 2151 0008 1A0C     		lsrs	r2, r3, #16
 2152              	.LVL313:
1525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2153              		.loc 1 1525 0
 2154 000a 1143     		orrs	r1, r1, r2
 2155              	.LVL314:
1527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2156              		.loc 1 1527 0
 2157 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2158 000e 7047     		bx	lr
 2159              		.cfi_endproc
 2160              	.LFE93:
 2162              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2163              		.align	1
 2164              		.global	TIM_OC2PreloadConfig
 2165              		.thumb
 2166              		.thumb_func
 2168              	TIM_OC2PreloadConfig:
 2169              	.LFB94:
1541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2170              		.loc 1 1541 0
 2171              		.cfi_startproc
 2172              		@ args = 0, pretend = 0, frame = 0
 2173              		@ frame_needed = 0, uses_anonymous_args = 0
 2174              		@ link register save eliminated.
 2175              	.LVL315:
 2176              	.LVL316:
1546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2177              		.loc 1 1546 0
 2178 0000 038B     		ldrh	r3, [r0, #24]
 2179              	.LVL317:
1548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
 2180              		.loc 1 1548 0
 2181 0002 23F40062 		bic	r2, r3, #2048
 2182 0006 1304     		lsls	r3, r2, #16
 2183              	.LVL318:
 2184 0008 1A0C     		lsrs	r2, r3, #16
 2185              	.LVL319:
1550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2186              		.loc 1 1550 0
 2187 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 2188              	.LVL320:
 2189 000e 8BB2     		uxth	r3, r1
 2190              	.LVL321:
1552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2191              		.loc 1 1552 0
 2192 0010 0383     		strh	r3, [r0, #24]	@ movhi
 2193 0012 7047     		bx	lr
 2194              		.cfi_endproc
 2195              	.LFE94:
 2197              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2198              		.align	1
 2199              		.global	TIM_OC3PreloadConfig
 2200              		.thumb
 2201              		.thumb_func
 2203              	TIM_OC3PreloadConfig:
 2204              	.LFB95:
1565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2205              		.loc 1 1565 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 2209              		@ link register save eliminated.
 2210              	.LVL322:
 2211              	.LVL323:
1570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2212              		.loc 1 1570 0
 2213 0000 838B     		ldrh	r3, [r0, #28]
 2214              	.LVL324:
1572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
 2215              		.loc 1 1572 0
 2216 0002 23F00802 		bic	r2, r3, #8
 2217 0006 1304     		lsls	r3, r2, #16
 2218              	.LVL325:
 2219 0008 1A0C     		lsrs	r2, r3, #16
 2220              	.LVL326:
1574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2221              		.loc 1 1574 0
 2222 000a 1143     		orrs	r1, r1, r2
 2223              	.LVL327:
1576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2224              		.loc 1 1576 0
 2225 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2226 000e 7047     		bx	lr
 2227              		.cfi_endproc
 2228              	.LFE95:
 2230              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2231              		.align	1
 2232              		.global	TIM_OC4PreloadConfig
 2233              		.thumb
 2234              		.thumb_func
 2236              	TIM_OC4PreloadConfig:
 2237              	.LFB96:
1589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2238              		.loc 1 1589 0
 2239              		.cfi_startproc
 2240              		@ args = 0, pretend = 0, frame = 0
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
 2242              		@ link register save eliminated.
 2243              	.LVL328:
 2244              	.LVL329:
1594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2245              		.loc 1 1594 0
 2246 0000 838B     		ldrh	r3, [r0, #28]
 2247              	.LVL330:
1596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
 2248              		.loc 1 1596 0
 2249 0002 23F40062 		bic	r2, r3, #2048
 2250 0006 1304     		lsls	r3, r2, #16
 2251              	.LVL331:
 2252 0008 1A0C     		lsrs	r2, r3, #16
 2253              	.LVL332:
1598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2254              		.loc 1 1598 0
 2255 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 2256              	.LVL333:
 2257 000e 8BB2     		uxth	r3, r1
 2258              	.LVL334:
1600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2259              		.loc 1 1600 0
 2260 0010 8383     		strh	r3, [r0, #28]	@ movhi
 2261 0012 7047     		bx	lr
 2262              		.cfi_endproc
 2263              	.LFE96:
 2265              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2266              		.align	1
 2267              		.global	TIM_OC1FastConfig
 2268              		.thumb
 2269              		.thumb_func
 2271              	TIM_OC1FastConfig:
 2272              	.LFB97:
1613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2273              		.loc 1 1613 0
 2274              		.cfi_startproc
 2275              		@ args = 0, pretend = 0, frame = 0
 2276              		@ frame_needed = 0, uses_anonymous_args = 0
 2277              		@ link register save eliminated.
 2278              	.LVL335:
 2279              	.LVL336:
1619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2280              		.loc 1 1619 0
 2281 0000 038B     		ldrh	r3, [r0, #24]
 2282              	.LVL337:
1621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
 2283              		.loc 1 1621 0
 2284 0002 23F00402 		bic	r2, r3, #4
 2285 0006 1304     		lsls	r3, r2, #16
 2286              	.LVL338:
 2287 0008 1A0C     		lsrs	r2, r3, #16
 2288              	.LVL339:
1623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2289              		.loc 1 1623 0
 2290 000a 1143     		orrs	r1, r1, r2
 2291              	.LVL340:
1625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2292              		.loc 1 1625 0
 2293 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2294 000e 7047     		bx	lr
 2295              		.cfi_endproc
 2296              	.LFE97:
 2298              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2299              		.align	1
 2300              		.global	TIM_OC2FastConfig
 2301              		.thumb
 2302              		.thumb_func
 2304              	TIM_OC2FastConfig:
 2305              	.LFB98:
1639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2306              		.loc 1 1639 0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 0
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 2310              		@ link register save eliminated.
 2311              	.LVL341:
 2312              	.LVL342:
1645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2313              		.loc 1 1645 0
 2314 0000 038B     		ldrh	r3, [r0, #24]
 2315              	.LVL343:
1647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
 2316              		.loc 1 1647 0
 2317 0002 23F48062 		bic	r2, r3, #1024
 2318 0006 1304     		lsls	r3, r2, #16
 2319              	.LVL344:
 2320 0008 1A0C     		lsrs	r2, r3, #16
 2321              	.LVL345:
1649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2322              		.loc 1 1649 0
 2323 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 2324              	.LVL346:
 2325 000e 8BB2     		uxth	r3, r1
 2326              	.LVL347:
1651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2327              		.loc 1 1651 0
 2328 0010 0383     		strh	r3, [r0, #24]	@ movhi
 2329 0012 7047     		bx	lr
 2330              		.cfi_endproc
 2331              	.LFE98:
 2333              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2334              		.align	1
 2335              		.global	TIM_OC3FastConfig
 2336              		.thumb
 2337              		.thumb_func
 2339              	TIM_OC3FastConfig:
 2340              	.LFB99:
1664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2341              		.loc 1 1664 0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 2345              		@ link register save eliminated.
 2346              	.LVL348:
 2347              	.LVL349:
1670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2348              		.loc 1 1670 0
 2349 0000 838B     		ldrh	r3, [r0, #28]
 2350              	.LVL350:
1672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
 2351              		.loc 1 1672 0
 2352 0002 23F00402 		bic	r2, r3, #4
 2353 0006 1304     		lsls	r3, r2, #16
 2354              	.LVL351:
 2355 0008 1A0C     		lsrs	r2, r3, #16
 2356              	.LVL352:
1674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2357              		.loc 1 1674 0
 2358 000a 1143     		orrs	r1, r1, r2
 2359              	.LVL353:
1676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2360              		.loc 1 1676 0
 2361 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2362 000e 7047     		bx	lr
 2363              		.cfi_endproc
 2364              	.LFE99:
 2366              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2367              		.align	1
 2368              		.global	TIM_OC4FastConfig
 2369              		.thumb
 2370              		.thumb_func
 2372              	TIM_OC4FastConfig:
 2373              	.LFB100:
1689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2374              		.loc 1 1689 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 0, uses_anonymous_args = 0
 2378              		@ link register save eliminated.
 2379              	.LVL354:
 2380              	.LVL355:
1695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2381              		.loc 1 1695 0
 2382 0000 838B     		ldrh	r3, [r0, #28]
 2383              	.LVL356:
1697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
 2384              		.loc 1 1697 0
 2385 0002 23F48062 		bic	r2, r3, #1024
 2386 0006 1304     		lsls	r3, r2, #16
 2387              	.LVL357:
 2388 0008 1A0C     		lsrs	r2, r3, #16
 2389              	.LVL358:
1699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2390              		.loc 1 1699 0
 2391 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 2392              	.LVL359:
 2393 000e 8BB2     		uxth	r3, r1
 2394              	.LVL360:
1701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2395              		.loc 1 1701 0
 2396 0010 8383     		strh	r3, [r0, #28]	@ movhi
 2397 0012 7047     		bx	lr
 2398              		.cfi_endproc
 2399              	.LFE100:
 2401              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2402              		.align	1
 2403              		.global	TIM_ClearOC1Ref
 2404              		.thumb
 2405              		.thumb_func
 2407              	TIM_ClearOC1Ref:
 2408              	.LFB101:
1714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2409              		.loc 1 1714 0
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 0
 2412              		@ frame_needed = 0, uses_anonymous_args = 0
 2413              		@ link register save eliminated.
 2414              	.LVL361:
 2415              	.LVL362:
1720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2416              		.loc 1 1720 0
 2417 0000 038B     		ldrh	r3, [r0, #24]
 2418              	.LVL363:
1723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
 2419              		.loc 1 1723 0
 2420 0002 23F08002 		bic	r2, r3, #128
 2421 0006 1304     		lsls	r3, r2, #16
 2422              	.LVL364:
 2423 0008 1A0C     		lsrs	r2, r3, #16
 2424              	.LVL365:
1725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2425              		.loc 1 1725 0
 2426 000a 1143     		orrs	r1, r1, r2
 2427              	.LVL366:
1727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2428              		.loc 1 1727 0
 2429 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2430 000e 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE101:
 2434              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2435              		.align	1
 2436              		.global	TIM_ClearOC2Ref
 2437              		.thumb
 2438              		.thumb_func
 2440              	TIM_ClearOC2Ref:
 2441              	.LFB102:
1740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2442              		.loc 1 1740 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 0
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
 2446              		@ link register save eliminated.
 2447              	.LVL367:
 2448              	.LVL368:
1745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2449              		.loc 1 1745 0
 2450 0000 038B     		ldrh	r3, [r0, #24]
 2451              	.LVL369:
1747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
 2452              		.loc 1 1747 0
 2453 0002 5A04     		lsls	r2, r3, #17
 2454              	.LVL370:
1749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2455              		.loc 1 1749 0
 2456 0004 0902     		lsls	r1, r1, #8
 2457              	.LVL371:
 2458 0006 41EA5243 		orr	r3, r1, r2, lsr #17
 2459 000a 9AB2     		uxth	r2, r3
 2460              	.LVL372:
1751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2461              		.loc 1 1751 0
 2462 000c 0283     		strh	r2, [r0, #24]	@ movhi
 2463 000e 7047     		bx	lr
 2464              		.cfi_endproc
 2465              	.LFE102:
 2467              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2468              		.align	1
 2469              		.global	TIM_ClearOC3Ref
 2470              		.thumb
 2471              		.thumb_func
 2473              	TIM_ClearOC3Ref:
 2474              	.LFB103:
1764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2475              		.loc 1 1764 0
 2476              		.cfi_startproc
 2477              		@ args = 0, pretend = 0, frame = 0
 2478              		@ frame_needed = 0, uses_anonymous_args = 0
 2479              		@ link register save eliminated.
 2480              	.LVL373:
 2481              	.LVL374:
1769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2482              		.loc 1 1769 0
 2483 0000 838B     		ldrh	r3, [r0, #28]
 2484              	.LVL375:
1771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
 2485              		.loc 1 1771 0
 2486 0002 23F08002 		bic	r2, r3, #128
 2487 0006 1304     		lsls	r3, r2, #16
 2488              	.LVL376:
 2489 0008 1A0C     		lsrs	r2, r3, #16
 2490              	.LVL377:
1773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2491              		.loc 1 1773 0
 2492 000a 1143     		orrs	r1, r1, r2
 2493              	.LVL378:
1775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2494              		.loc 1 1775 0
 2495 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2496 000e 7047     		bx	lr
 2497              		.cfi_endproc
 2498              	.LFE103:
 2500              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2501              		.align	1
 2502              		.global	TIM_ClearOC4Ref
 2503              		.thumb
 2504              		.thumb_func
 2506              	TIM_ClearOC4Ref:
 2507              	.LFB104:
1788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2508              		.loc 1 1788 0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 0
 2511              		@ frame_needed = 0, uses_anonymous_args = 0
 2512              		@ link register save eliminated.
 2513              	.LVL379:
 2514              	.LVL380:
1793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2515              		.loc 1 1793 0
 2516 0000 838B     		ldrh	r3, [r0, #28]
 2517              	.LVL381:
1795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
 2518              		.loc 1 1795 0
 2519 0002 5A04     		lsls	r2, r3, #17
 2520              	.LVL382:
1797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2521              		.loc 1 1797 0
 2522 0004 0902     		lsls	r1, r1, #8
 2523              	.LVL383:
 2524 0006 41EA5243 		orr	r3, r1, r2, lsr #17
 2525 000a 9AB2     		uxth	r2, r3
 2526              	.LVL384:
1799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2527              		.loc 1 1799 0
 2528 000c 8283     		strh	r2, [r0, #28]	@ movhi
 2529 000e 7047     		bx	lr
 2530              		.cfi_endproc
 2531              	.LFE104:
 2533              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2534              		.align	1
 2535              		.global	TIM_OC1PolarityConfig
 2536              		.thumb
 2537              		.thumb_func
 2539              	TIM_OC1PolarityConfig:
 2540              	.LFB105:
1812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2541              		.loc 1 1812 0
 2542              		.cfi_startproc
 2543              		@ args = 0, pretend = 0, frame = 0
 2544              		@ frame_needed = 0, uses_anonymous_args = 0
 2545              		@ link register save eliminated.
 2546              	.LVL385:
 2547              	.LVL386:
1817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2548              		.loc 1 1817 0
 2549 0000 038C     		ldrh	r3, [r0, #32]
 2550              	.LVL387:
1819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
 2551              		.loc 1 1819 0
 2552 0002 23F00202 		bic	r2, r3, #2
 2553 0006 1304     		lsls	r3, r2, #16
 2554              	.LVL388:
 2555 0008 1A0C     		lsrs	r2, r3, #16
 2556              	.LVL389:
1820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 2557              		.loc 1 1820 0
 2558 000a 1143     		orrs	r1, r1, r2
 2559              	.LVL390:
1822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2560              		.loc 1 1822 0
 2561 000c 0184     		strh	r1, [r0, #32]	@ movhi
 2562 000e 7047     		bx	lr
 2563              		.cfi_endproc
 2564              	.LFE105:
 2566              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2567              		.align	1
 2568              		.global	TIM_OC1NPolarityConfig
 2569              		.thumb
 2570              		.thumb_func
 2572              	TIM_OC1NPolarityConfig:
 2573              	.LFB106:
1835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2574              		.loc 1 1835 0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 0
 2577              		@ frame_needed = 0, uses_anonymous_args = 0
 2578              		@ link register save eliminated.
 2579              	.LVL391:
 2580              	.LVL392:
1841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2581              		.loc 1 1841 0
 2582 0000 038C     		ldrh	r3, [r0, #32]
 2583              	.LVL393:
1843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
 2584              		.loc 1 1843 0
 2585 0002 23F00802 		bic	r2, r3, #8
 2586 0006 1304     		lsls	r3, r2, #16
 2587              	.LVL394:
 2588 0008 1A0C     		lsrs	r2, r3, #16
 2589              	.LVL395:
1844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2590              		.loc 1 1844 0
 2591 000a 1143     		orrs	r1, r1, r2
 2592              	.LVL396:
1846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2593              		.loc 1 1846 0
 2594 000c 0184     		strh	r1, [r0, #32]	@ movhi
 2595 000e 7047     		bx	lr
 2596              		.cfi_endproc
 2597              	.LFE106:
 2599              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2600              		.align	1
 2601              		.global	TIM_OC2PolarityConfig
 2602              		.thumb
 2603              		.thumb_func
 2605              	TIM_OC2PolarityConfig:
 2606              	.LFB107:
1859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2607              		.loc 1 1859 0
 2608              		.cfi_startproc
 2609              		@ args = 0, pretend = 0, frame = 0
 2610              		@ frame_needed = 0, uses_anonymous_args = 0
 2611              		@ link register save eliminated.
 2612              	.LVL397:
 2613              	.LVL398:
1864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2614              		.loc 1 1864 0
 2615 0000 038C     		ldrh	r3, [r0, #32]
 2616              	.LVL399:
1866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
 2617              		.loc 1 1866 0
 2618 0002 23F02002 		bic	r2, r3, #32
 2619 0006 1304     		lsls	r3, r2, #16
 2620              	.LVL400:
 2621 0008 1A0C     		lsrs	r2, r3, #16
 2622              	.LVL401:
1867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2623              		.loc 1 1867 0
 2624 000a 42EA0111 		orr	r1, r2, r1, lsl #4
 2625              	.LVL402:
 2626 000e 8BB2     		uxth	r3, r1
 2627              	.LVL403:
1869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2628              		.loc 1 1869 0
 2629 0010 0384     		strh	r3, [r0, #32]	@ movhi
 2630 0012 7047     		bx	lr
 2631              		.cfi_endproc
 2632              	.LFE107:
 2634              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 2635              		.align	1
 2636              		.global	TIM_OC2NPolarityConfig
 2637              		.thumb
 2638              		.thumb_func
 2640              	TIM_OC2NPolarityConfig:
 2641              	.LFB108:
1882:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2642              		.loc 1 1882 0
 2643              		.cfi_startproc
 2644              		@ args = 0, pretend = 0, frame = 0
 2645              		@ frame_needed = 0, uses_anonymous_args = 0
 2646              		@ link register save eliminated.
 2647              	.LVL404:
 2648              	.LVL405:
1888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2649              		.loc 1 1888 0
 2650 0000 038C     		ldrh	r3, [r0, #32]
 2651              	.LVL406:
1890:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
 2652              		.loc 1 1890 0
 2653 0002 23F08002 		bic	r2, r3, #128
 2654 0006 1304     		lsls	r3, r2, #16
 2655              	.LVL407:
 2656 0008 1A0C     		lsrs	r2, r3, #16
 2657              	.LVL408:
1891:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2658              		.loc 1 1891 0
 2659 000a 42EA0111 		orr	r1, r2, r1, lsl #4
 2660              	.LVL409:
 2661 000e 8BB2     		uxth	r3, r1
 2662              	.LVL410:
1893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2663              		.loc 1 1893 0
 2664 0010 0384     		strh	r3, [r0, #32]	@ movhi
 2665 0012 7047     		bx	lr
 2666              		.cfi_endproc
 2667              	.LFE108:
 2669              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 2670              		.align	1
 2671              		.global	TIM_OC3PolarityConfig
 2672              		.thumb
 2673              		.thumb_func
 2675              	TIM_OC3PolarityConfig:
 2676              	.LFB109:
1906:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2677              		.loc 1 1906 0
 2678              		.cfi_startproc
 2679              		@ args = 0, pretend = 0, frame = 0
 2680              		@ frame_needed = 0, uses_anonymous_args = 0
 2681              		@ link register save eliminated.
 2682              	.LVL411:
 2683              	.LVL412:
1911:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2684              		.loc 1 1911 0
 2685 0000 038C     		ldrh	r3, [r0, #32]
 2686              	.LVL413:
1913:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
 2687              		.loc 1 1913 0
 2688 0002 23F40072 		bic	r2, r3, #512
 2689 0006 1304     		lsls	r3, r2, #16
 2690              	.LVL414:
 2691 0008 1A0C     		lsrs	r2, r3, #16
 2692              	.LVL415:
1914:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2693              		.loc 1 1914 0
 2694 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 2695              	.LVL416:
 2696 000e 8BB2     		uxth	r3, r1
 2697              	.LVL417:
1916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2698              		.loc 1 1916 0
 2699 0010 0384     		strh	r3, [r0, #32]	@ movhi
 2700 0012 7047     		bx	lr
 2701              		.cfi_endproc
 2702              	.LFE109:
 2704              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 2705              		.align	1
 2706              		.global	TIM_OC3NPolarityConfig
 2707              		.thumb
 2708              		.thumb_func
 2710              	TIM_OC3NPolarityConfig:
 2711              	.LFB110:
1929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2712              		.loc 1 1929 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 0, uses_anonymous_args = 0
 2716              		@ link register save eliminated.
 2717              	.LVL418:
 2718              	.LVL419:
1936:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2719              		.loc 1 1936 0
 2720 0000 038C     		ldrh	r3, [r0, #32]
 2721              	.LVL420:
1938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
 2722              		.loc 1 1938 0
 2723 0002 23F40062 		bic	r2, r3, #2048
 2724 0006 1304     		lsls	r3, r2, #16
 2725              	.LVL421:
 2726 0008 1A0C     		lsrs	r2, r3, #16
 2727              	.LVL422:
1939:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2728              		.loc 1 1939 0
 2729 000a 42EA0121 		orr	r1, r2, r1, lsl #8
 2730              	.LVL423:
 2731 000e 8BB2     		uxth	r3, r1
 2732              	.LVL424:
1941:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2733              		.loc 1 1941 0
 2734 0010 0384     		strh	r3, [r0, #32]	@ movhi
 2735 0012 7047     		bx	lr
 2736              		.cfi_endproc
 2737              	.LFE110:
 2739              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 2740              		.align	1
 2741              		.global	TIM_OC4PolarityConfig
 2742              		.thumb
 2743              		.thumb_func
 2745              	TIM_OC4PolarityConfig:
 2746              	.LFB111:
1954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2747              		.loc 1 1954 0
 2748              		.cfi_startproc
 2749              		@ args = 0, pretend = 0, frame = 0
 2750              		@ frame_needed = 0, uses_anonymous_args = 0
 2751              		@ link register save eliminated.
 2752              	.LVL425:
 2753              	.LVL426:
1959:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 2754              		.loc 1 1959 0
 2755 0000 038C     		ldrh	r3, [r0, #32]
 2756              	.LVL427:
1961:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
 2757              		.loc 1 1961 0
 2758 0002 23F40052 		bic	r2, r3, #8192
 2759 0006 1304     		lsls	r3, r2, #16
 2760              	.LVL428:
 2761 0008 1A0C     		lsrs	r2, r3, #16
 2762              	.LVL429:
1962:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 2763              		.loc 1 1962 0
 2764 000a 42EA0131 		orr	r1, r2, r1, lsl #12
 2765              	.LVL430:
 2766 000e 8BB2     		uxth	r3, r1
 2767              	.LVL431:
1964:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 2768              		.loc 1 1964 0
 2769 0010 0384     		strh	r3, [r0, #32]	@ movhi
 2770 0012 7047     		bx	lr
 2771              		.cfi_endproc
 2772              	.LFE111:
 2774              		.section	.text.TIM_CCxCmd,"ax",%progbits
 2775              		.align	1
 2776              		.global	TIM_CCxCmd
 2777              		.thumb
 2778              		.thumb_func
 2780              	TIM_CCxCmd:
 2781              	.LFB112:
1981:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2782              		.loc 1 1981 0
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 0
 2785              		@ frame_needed = 0, uses_anonymous_args = 0
 2786              	.LVL432:
 2787 0000 10B5     		push	{r4, lr}
 2788              	.LCFI12:
 2789              		.cfi_def_cfa_offset 8
 2790              		.cfi_offset 4, -8
 2791              		.cfi_offset 14, -4
 2792              	.LVL433:
1992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 2793              		.loc 1 1992 0
 2794 0002 048C     		ldrh	r4, [r0, #32]
 2795 0004 A4B2     		uxth	r4, r4
1989:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
 2796              		.loc 1 1989 0
 2797 0006 0123     		movs	r3, #1
 2798 0008 03FA01F3 		lsl	r3, r3, r1
1992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 2799              		.loc 1 1992 0
 2800 000c 24EA0303 		bic	r3, r4, r3
 2801 0010 0384     		strh	r3, [r0, #32]	@ movhi
1995:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 2802              		.loc 1 1995 0
 2803 0012 038C     		ldrh	r3, [r0, #32]
 2804 0014 02FA01F2 		lsl	r2, r2, r1
 2805              	.LVL434:
 2806 0018 42EA0301 		orr	r1, r2, r3
 2807              	.LVL435:
 2808 001c 8AB2     		uxth	r2, r1
 2809 001e 0284     		strh	r2, [r0, #32]	@ movhi
 2810 0020 10BD     		pop	{r4, pc}
 2811              		.cfi_endproc
 2812              	.LFE112:
 2814              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 2815              		.align	1
 2816              		.global	TIM_CCxNCmd
 2817              		.thumb
 2818              		.thumb_func
 2820              	TIM_CCxNCmd:
 2821              	.LFB113:
2011:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2822              		.loc 1 2011 0
 2823              		.cfi_startproc
 2824              		@ args = 0, pretend = 0, frame = 0
 2825              		@ frame_needed = 0, uses_anonymous_args = 0
 2826              	.LVL436:
 2827 0000 10B5     		push	{r4, lr}
 2828              	.LCFI13:
 2829              		.cfi_def_cfa_offset 8
 2830              		.cfi_offset 4, -8
 2831              		.cfi_offset 14, -4
 2832              	.LVL437:
2022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 2833              		.loc 1 2022 0
 2834 0002 048C     		ldrh	r4, [r0, #32]
 2835 0004 A4B2     		uxth	r4, r4
2019:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
 2836              		.loc 1 2019 0
 2837 0006 0423     		movs	r3, #4
 2838 0008 03FA01F3 		lsl	r3, r3, r1
2022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 2839              		.loc 1 2022 0
 2840 000c 24EA0303 		bic	r3, r4, r3
 2841 0010 0384     		strh	r3, [r0, #32]	@ movhi
2025:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 2842              		.loc 1 2025 0
 2843 0012 038C     		ldrh	r3, [r0, #32]
 2844 0014 02FA01F2 		lsl	r2, r2, r1
 2845              	.LVL438:
 2846 0018 42EA0301 		orr	r1, r2, r3
 2847              	.LVL439:
 2848 001c 8AB2     		uxth	r2, r1
 2849 001e 0284     		strh	r2, [r0, #32]	@ movhi
 2850 0020 10BD     		pop	{r4, pc}
 2851              		.cfi_endproc
 2852              	.LFE113:
 2854              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 2855              		.align	1
 2856              		.global	TIM_SelectOCxM
 2857              		.thumb
 2858              		.thumb_func
 2860              	TIM_SelectOCxM:
 2861              	.LFB114:
2052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2862              		.loc 1 2052 0
 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 0
 2865              		@ frame_needed = 0, uses_anonymous_args = 0
 2866              	.LVL440:
 2867 0000 30B5     		push	{r4, r5, lr}
 2868              	.LCFI14:
 2869              		.cfi_def_cfa_offset 12
 2870              		.cfi_offset 4, -12
 2871              		.cfi_offset 5, -8
 2872              		.cfi_offset 14, -4
 2873              	.LVL441:
2062:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
 2874              		.loc 1 2062 0
 2875 0002 00F11803 		add	r3, r0, #24
 2876              	.LVL442:
2067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 2877              		.loc 1 2067 0
 2878 0006 058C     		ldrh	r5, [r0, #32]
 2879 0008 ADB2     		uxth	r5, r5
2064:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
 2880              		.loc 1 2064 0
 2881 000a 0124     		movs	r4, #1
 2882 000c 04FA01F4 		lsl	r4, r4, r1
2067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 2883              		.loc 1 2067 0
 2884 0010 25EA0404 		bic	r4, r5, r4
 2885 0014 0484     		strh	r4, [r0, #32]	@ movhi
2069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 2886              		.loc 1 2069 0
 2887 0016 09B1     		cbz	r1, .L151
2069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 2888              		.loc 1 2069 0 is_stmt 0 discriminator 1
 2889 0018 0829     		cmp	r1, #8
 2890 001a 06D1     		bne	.L152
 2891              	.L151:
 2892              	.LVL443:
2071:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
 2893              		.loc 1 2071 0 is_stmt 1
 2894 001c 4908     		lsrs	r1, r1, #1
 2895              	.LVL444:
2074:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
 2896              		.loc 1 2074 0
 2897 001e C858     		ldr	r0, [r1, r3]
 2898              	.LVL445:
 2899 0020 20F07000 		bic	r0, r0, #112
 2900 0024 C850     		str	r0, [r1, r3]
2077:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 2901              		.loc 1 2077 0
 2902 0026 C858     		ldr	r0, [r1, r3]
 2903 0028 09E0     		b	.L157
 2904              	.LVL446:
 2905              	.L152:
2081:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 2906              		.loc 1 2081 0
 2907 002a 0439     		subs	r1, r1, #4
 2908              	.LVL447:
 2909 002c C1F34E01 		ubfx	r1, r1, #1, #15
 2910              	.LVL448:
2084:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
 2911              		.loc 1 2084 0
 2912 0030 C858     		ldr	r0, [r1, r3]
 2913              	.LVL449:
 2914 0032 20F4E040 		bic	r0, r0, #28672
 2915 0036 C850     		str	r0, [r1, r3]
2087:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 2916              		.loc 1 2087 0
 2917 0038 C858     		ldr	r0, [r1, r3]
 2918 003a 1202     		lsls	r2, r2, #8
 2919              	.LVL450:
 2920 003c 92B2     		uxth	r2, r2
 2921              	.L157:
 2922 003e 0243     		orrs	r2, r2, r0
 2923 0040 CA50     		str	r2, [r1, r3]
 2924 0042 30BD     		pop	{r4, r5, pc}
 2925              		.cfi_endproc
 2926              	.LFE114:
 2928              		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 2929              		.align	1
 2930              		.global	TIM_UpdateDisableConfig
 2931              		.thumb
 2932              		.thumb_func
 2934              	TIM_UpdateDisableConfig:
 2935              	.LFB115:
2099:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2936              		.loc 1 2099 0
 2937              		.cfi_startproc
 2938              		@ args = 0, pretend = 0, frame = 0
 2939              		@ frame_needed = 0, uses_anonymous_args = 0
 2940              		@ link register save eliminated.
 2941              	.LVL451:
2106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 2942              		.loc 1 2106 0
 2943 0000 0388     		ldrh	r3, [r0, #0]
2103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 2944              		.loc 1 2103 0
 2945 0002 19B1     		cbz	r1, .L159
2106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 2946              		.loc 1 2106 0
 2947 0004 99B2     		uxth	r1, r3
 2948              	.LVL452:
 2949 0006 41F00203 		orr	r3, r1, #2
 2950 000a 03E0     		b	.L161
 2951              	.LVL453:
 2952              	.L159:
2111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
 2953              		.loc 1 2111 0
 2954 000c 23F00201 		bic	r1, r3, #2
 2955              	.LVL454:
 2956 0010 0A04     		lsls	r2, r1, #16
 2957 0012 130C     		lsrs	r3, r2, #16
 2958              	.L161:
 2959 0014 0380     		strh	r3, [r0, #0]	@ movhi
 2960 0016 7047     		bx	lr
 2961              		.cfi_endproc
 2962              	.LFE115:
 2964              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 2965              		.align	1
 2966              		.global	TIM_UpdateRequestConfig
 2967              		.thumb
 2968              		.thumb_func
 2970              	TIM_UpdateRequestConfig:
 2971              	.LFB116:
2127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 2972              		.loc 1 2127 0
 2973              		.cfi_startproc
 2974              		@ args = 0, pretend = 0, frame = 0
 2975              		@ frame_needed = 0, uses_anonymous_args = 0
 2976              		@ link register save eliminated.
 2977              	.LVL455:
2134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 2978              		.loc 1 2134 0
 2979 0000 0388     		ldrh	r3, [r0, #0]
2131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 2980              		.loc 1 2131 0
 2981 0002 19B1     		cbz	r1, .L163
2134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 2982              		.loc 1 2134 0
 2983 0004 99B2     		uxth	r1, r3
 2984              	.LVL456:
 2985 0006 41F00403 		orr	r3, r1, #4
 2986 000a 03E0     		b	.L165
 2987              	.LVL457:
 2988              	.L163:
2139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
 2989              		.loc 1 2139 0
 2990 000c 23F00401 		bic	r1, r3, #4
 2991              	.LVL458:
 2992 0010 0A04     		lsls	r2, r1, #16
 2993 0012 130C     		lsrs	r3, r2, #16
 2994              	.L165:
 2995 0014 0380     		strh	r3, [r0, #0]	@ movhi
 2996 0016 7047     		bx	lr
 2997              		.cfi_endproc
 2998              	.LFE116:
 3000              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 3001              		.align	1
 3002              		.global	TIM_SelectHallSensor
 3003              		.thumb
 3004              		.thumb_func
 3006              	TIM_SelectHallSensor:
 3007              	.LFB117:
2151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3008              		.loc 1 2151 0
 3009              		.cfi_startproc
 3010              		@ args = 0, pretend = 0, frame = 0
 3011              		@ frame_needed = 0, uses_anonymous_args = 0
 3012              		@ link register save eliminated.
 3013              	.LVL459:
2158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 3014              		.loc 1 2158 0
 3015 0000 8388     		ldrh	r3, [r0, #4]
2155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 3016              		.loc 1 2155 0
 3017 0002 19B1     		cbz	r1, .L167
2158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 3018              		.loc 1 2158 0
 3019 0004 99B2     		uxth	r1, r3
 3020              	.LVL460:
 3021 0006 41F08003 		orr	r3, r1, #128
 3022 000a 03E0     		b	.L169
 3023              	.LVL461:
 3024              	.L167:
2163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
 3025              		.loc 1 2163 0
 3026 000c 23F08001 		bic	r1, r3, #128
 3027              	.LVL462:
 3028 0010 0A04     		lsls	r2, r1, #16
 3029 0012 130C     		lsrs	r3, r2, #16
 3030              	.L169:
 3031 0014 8380     		strh	r3, [r0, #4]	@ movhi
 3032 0016 7047     		bx	lr
 3033              		.cfi_endproc
 3034              	.LFE117:
 3036              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 3037              		.align	1
 3038              		.global	TIM_SelectOnePulseMode
 3039              		.thumb
 3040              		.thumb_func
 3042              	TIM_SelectOnePulseMode:
 3043              	.LFB118:
2177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3044              		.loc 1 2177 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048              		@ link register save eliminated.
 3049              	.LVL463:
2182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
 3050              		.loc 1 2182 0
 3051 0000 0388     		ldrh	r3, [r0, #0]
 3052 0002 23F00802 		bic	r2, r3, #8
 3053 0006 1304     		lsls	r3, r2, #16
 3054 0008 1A0C     		lsrs	r2, r3, #16
 3055 000a 0280     		strh	r2, [r0, #0]	@ movhi
2184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 3056              		.loc 1 2184 0
 3057 000c 0388     		ldrh	r3, [r0, #0]
 3058 000e 9AB2     		uxth	r2, r3
 3059 0010 1143     		orrs	r1, r1, r2
 3060              	.LVL464:
 3061 0012 0180     		strh	r1, [r0, #0]	@ movhi
 3062 0014 7047     		bx	lr
 3063              		.cfi_endproc
 3064              	.LFE118:
 3066              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3067              		.align	1
 3068              		.global	TIM_SelectOutputTrigger
 3069              		.thumb
 3070              		.thumb_func
 3072              	TIM_SelectOutputTrigger:
 3073              	.LFB119:
2209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3074              		.loc 1 2209 0
 3075              		.cfi_startproc
 3076              		@ args = 0, pretend = 0, frame = 0
 3077              		@ frame_needed = 0, uses_anonymous_args = 0
 3078              		@ link register save eliminated.
 3079              	.LVL465:
2214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
 3080              		.loc 1 2214 0
 3081 0000 8388     		ldrh	r3, [r0, #4]
 3082 0002 23F07002 		bic	r2, r3, #112
 3083 0006 1304     		lsls	r3, r2, #16
 3084 0008 1A0C     		lsrs	r2, r3, #16
 3085 000a 8280     		strh	r2, [r0, #4]	@ movhi
2216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 3086              		.loc 1 2216 0
 3087 000c 8388     		ldrh	r3, [r0, #4]
 3088 000e 9AB2     		uxth	r2, r3
 3089 0010 1143     		orrs	r1, r1, r2
 3090              	.LVL466:
 3091 0012 8180     		strh	r1, [r0, #4]	@ movhi
 3092 0014 7047     		bx	lr
 3093              		.cfi_endproc
 3094              	.LFE119:
 3096              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3097              		.align	1
 3098              		.global	TIM_SelectSlaveMode
 3099              		.thumb
 3100              		.thumb_func
 3102              	TIM_SelectSlaveMode:
 3103              	.LFB120:
2232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3104              		.loc 1 2232 0
 3105              		.cfi_startproc
 3106              		@ args = 0, pretend = 0, frame = 0
 3107              		@ frame_needed = 0, uses_anonymous_args = 0
 3108              		@ link register save eliminated.
 3109              	.LVL467:
2237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
 3110              		.loc 1 2237 0
 3111 0000 0389     		ldrh	r3, [r0, #8]
 3112 0002 23F00702 		bic	r2, r3, #7
 3113 0006 1304     		lsls	r3, r2, #16
 3114 0008 1A0C     		lsrs	r2, r3, #16
 3115 000a 0281     		strh	r2, [r0, #8]	@ movhi
2239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 3116              		.loc 1 2239 0
 3117 000c 0389     		ldrh	r3, [r0, #8]
 3118 000e 9AB2     		uxth	r2, r3
 3119 0010 1143     		orrs	r1, r1, r2
 3120              	.LVL468:
 3121 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3122 0014 7047     		bx	lr
 3123              		.cfi_endproc
 3124              	.LFE120:
 3126              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3127              		.align	1
 3128              		.global	TIM_SelectMasterSlaveMode
 3129              		.thumb
 3130              		.thumb_func
 3132              	TIM_SelectMasterSlaveMode:
 3133              	.LFB121:
2253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3134              		.loc 1 2253 0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 0
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 3138              		@ link register save eliminated.
 3139              	.LVL469:
2258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
 3140              		.loc 1 2258 0
 3141 0000 0389     		ldrh	r3, [r0, #8]
 3142 0002 23F08002 		bic	r2, r3, #128
 3143 0006 1304     		lsls	r3, r2, #16
 3144 0008 1A0C     		lsrs	r2, r3, #16
 3145 000a 0281     		strh	r2, [r0, #8]	@ movhi
2261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 3146              		.loc 1 2261 0
 3147 000c 0389     		ldrh	r3, [r0, #8]
 3148 000e 9AB2     		uxth	r2, r3
 3149 0010 1143     		orrs	r1, r1, r2
 3150              	.LVL470:
 3151 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3152 0014 7047     		bx	lr
 3153              		.cfi_endproc
 3154              	.LFE121:
 3156              		.section	.text.TIM_SetCounter,"ax",%progbits
 3157              		.align	1
 3158              		.global	TIM_SetCounter
 3159              		.thumb
 3160              		.thumb_func
 3162              	TIM_SetCounter:
 3163              	.LFB122:
2271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3164              		.loc 1 2271 0
 3165              		.cfi_startproc
 3166              		@ args = 0, pretend = 0, frame = 0
 3167              		@ frame_needed = 0, uses_anonymous_args = 0
 3168              		@ link register save eliminated.
 3169              	.LVL471:
2275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
 3170              		.loc 1 2275 0
 3171 0000 8184     		strh	r1, [r0, #36]	@ movhi
 3172 0002 7047     		bx	lr
 3173              		.cfi_endproc
 3174              	.LFE122:
 3176              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 3177              		.align	1
 3178              		.global	TIM_SetAutoreload
 3179              		.thumb
 3180              		.thumb_func
 3182              	TIM_SetAutoreload:
 3183              	.LFB123:
2285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3184              		.loc 1 2285 0
 3185              		.cfi_startproc
 3186              		@ args = 0, pretend = 0, frame = 0
 3187              		@ frame_needed = 0, uses_anonymous_args = 0
 3188              		@ link register save eliminated.
 3189              	.LVL472:
2289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
 3190              		.loc 1 2289 0
 3191 0000 8185     		strh	r1, [r0, #44]	@ movhi
 3192 0002 7047     		bx	lr
 3193              		.cfi_endproc
 3194              	.LFE123:
 3196              		.section	.text.TIM_SetCompare1,"ax",%progbits
 3197              		.align	1
 3198              		.global	TIM_SetCompare1
 3199              		.thumb
 3200              		.thumb_func
 3202              	TIM_SetCompare1:
 3203              	.LFB124:
2299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3204              		.loc 1 2299 0
 3205              		.cfi_startproc
 3206              		@ args = 0, pretend = 0, frame = 0
 3207              		@ frame_needed = 0, uses_anonymous_args = 0
 3208              		@ link register save eliminated.
 3209              	.LVL473:
2303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
 3210              		.loc 1 2303 0
 3211 0000 8186     		strh	r1, [r0, #52]	@ movhi
 3212 0002 7047     		bx	lr
 3213              		.cfi_endproc
 3214              	.LFE124:
 3216              		.section	.text.TIM_SetCompare2,"ax",%progbits
 3217              		.align	1
 3218              		.global	TIM_SetCompare2
 3219              		.thumb
 3220              		.thumb_func
 3222              	TIM_SetCompare2:
 3223              	.LFB125:
2313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3224              		.loc 1 2313 0
 3225              		.cfi_startproc
 3226              		@ args = 0, pretend = 0, frame = 0
 3227              		@ frame_needed = 0, uses_anonymous_args = 0
 3228              		@ link register save eliminated.
 3229              	.LVL474:
2317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
 3230              		.loc 1 2317 0
 3231 0000 0187     		strh	r1, [r0, #56]	@ movhi
 3232 0002 7047     		bx	lr
 3233              		.cfi_endproc
 3234              	.LFE125:
 3236              		.section	.text.TIM_SetCompare3,"ax",%progbits
 3237              		.align	1
 3238              		.global	TIM_SetCompare3
 3239              		.thumb
 3240              		.thumb_func
 3242              	TIM_SetCompare3:
 3243              	.LFB126:
2327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3244              		.loc 1 2327 0
 3245              		.cfi_startproc
 3246              		@ args = 0, pretend = 0, frame = 0
 3247              		@ frame_needed = 0, uses_anonymous_args = 0
 3248              		@ link register save eliminated.
 3249              	.LVL475:
2331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
 3250              		.loc 1 2331 0
 3251 0000 8187     		strh	r1, [r0, #60]	@ movhi
 3252 0002 7047     		bx	lr
 3253              		.cfi_endproc
 3254              	.LFE126:
 3256              		.section	.text.TIM_SetCompare4,"ax",%progbits
 3257              		.align	1
 3258              		.global	TIM_SetCompare4
 3259              		.thumb
 3260              		.thumb_func
 3262              	TIM_SetCompare4:
 3263              	.LFB127:
2341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3264              		.loc 1 2341 0
 3265              		.cfi_startproc
 3266              		@ args = 0, pretend = 0, frame = 0
 3267              		@ frame_needed = 0, uses_anonymous_args = 0
 3268              		@ link register save eliminated.
 3269              	.LVL476:
2345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
 3270              		.loc 1 2345 0
 3271 0000 A0F84010 		strh	r1, [r0, #64]	@ movhi
 3272 0004 7047     		bx	lr
 3273              		.cfi_endproc
 3274              	.LFE127:
 3276              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3277              		.align	1
 3278              		.global	TIM_SetIC1Prescaler
 3279              		.thumb
 3280              		.thumb_func
 3282              	TIM_SetIC1Prescaler:
 3283              	.LFB128:
2360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3284              		.loc 1 2360 0
 3285              		.cfi_startproc
 3286              		@ args = 0, pretend = 0, frame = 0
 3287              		@ frame_needed = 0, uses_anonymous_args = 0
 3288              		@ link register save eliminated.
 3289              	.LVL477:
2365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
 3290              		.loc 1 2365 0
 3291 0000 038B     		ldrh	r3, [r0, #24]
 3292 0002 23F00C02 		bic	r2, r3, #12
 3293 0006 1304     		lsls	r3, r2, #16
 3294 0008 1A0C     		lsrs	r2, r3, #16
 3295 000a 0283     		strh	r2, [r0, #24]	@ movhi
2367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3296              		.loc 1 2367 0
 3297 000c 038B     		ldrh	r3, [r0, #24]
 3298 000e 9AB2     		uxth	r2, r3
 3299 0010 1143     		orrs	r1, r1, r2
 3300              	.LVL478:
 3301 0012 0183     		strh	r1, [r0, #24]	@ movhi
 3302 0014 7047     		bx	lr
 3303              		.cfi_endproc
 3304              	.LFE128:
 3306              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3307              		.align	1
 3308              		.global	TIM_SetIC2Prescaler
 3309              		.thumb
 3310              		.thumb_func
 3312              	TIM_SetIC2Prescaler:
 3313              	.LFB129:
2382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3314              		.loc 1 2382 0
 3315              		.cfi_startproc
 3316              		@ args = 0, pretend = 0, frame = 0
 3317              		@ frame_needed = 0, uses_anonymous_args = 0
 3318              		@ link register save eliminated.
 3319              	.LVL479:
2387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
 3320              		.loc 1 2387 0
 3321 0000 038B     		ldrh	r3, [r0, #24]
 3322 0002 23F44062 		bic	r2, r3, #3072
 3323 0006 1304     		lsls	r3, r2, #16
 3324 0008 1A0C     		lsrs	r2, r3, #16
 3325 000a 0283     		strh	r2, [r0, #24]	@ movhi
2389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3326              		.loc 1 2389 0
 3327 000c 038B     		ldrh	r3, [r0, #24]
 3328 000e 9AB2     		uxth	r2, r3
 3329 0010 42EA0121 		orr	r1, r2, r1, lsl #8
 3330              	.LVL480:
 3331 0014 8BB2     		uxth	r3, r1
 3332 0016 0383     		strh	r3, [r0, #24]	@ movhi
 3333 0018 7047     		bx	lr
 3334              		.cfi_endproc
 3335              	.LFE129:
 3337              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3338              		.align	1
 3339              		.global	TIM_PWMIConfig
 3340              		.thumb
 3341              		.thumb_func
 3343              	TIM_PWMIConfig:
 3344              	.LFB63:
 661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3345              		.loc 1 661 0
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 0
 3348              		@ frame_needed = 0, uses_anonymous_args = 0
 3349              	.LVL481:
 3350 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3351              	.LCFI15:
 3352              		.cfi_def_cfa_offset 24
 3353              		.cfi_offset 3, -24
 3354              		.cfi_offset 4, -20
 3355              		.cfi_offset 5, -16
 3356              		.cfi_offset 6, -12
 3357              		.cfi_offset 7, -8
 3358              		.cfi_offset 14, -4
 3359 0002 0546     		mov	r5, r0
 3360 0004 0C46     		mov	r4, r1
 3361              	.LVL482:
 667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3362              		.loc 1 667 0
 3363 0006 4988     		ldrh	r1, [r1, #2]
 3364              	.LVL483:
 669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3365              		.loc 1 669 0
 3366 0008 0029     		cmp	r1, #0
 3367 000a 0CBF     		ite	eq
 3368 000c 0227     		moveq	r7, #2
 3369 000e 0027     		movne	r7, #0
 3370              	.LVL484:
 676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3371              		.loc 1 676 0
 3372 0010 A288     		ldrh	r2, [r4, #4]
 678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3373              		.loc 1 678 0
 3374 0012 012A     		cmp	r2, #1
 3375 0014 14BF     		ite	ne
 3376 0016 0126     		movne	r6, #1
 3377 0018 0226     		moveq	r6, #2
 3378              	.LVL485:
 684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3379              		.loc 1 684 0
 3380 001a B4F800E0 		ldrh	lr, [r4, #0]
 3381 001e 2389     		ldrh	r3, [r4, #8]
 3382 0020 BEF1000F 		cmp	lr, #0
 3383 0024 11D1     		bne	.L185
 687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3384              		.loc 1 687 0
 3385 0026 FFF7FEFF 		bl	TI1_Config
 3386              	.LVL486:
 690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3387              		.loc 1 690 0
 3388 002a 2846     		mov	r0, r5
 3389 002c E188     		ldrh	r1, [r4, #6]
 3390 002e FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3391              	.LVL487:
 692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3392              		.loc 1 692 0
 3393 0032 2846     		mov	r0, r5
 3394 0034 3946     		mov	r1, r7
 3395 0036 3246     		mov	r2, r6
 3396 0038 2389     		ldrh	r3, [r4, #8]
 3397 003a FFF7FEFF 		bl	TI2_Config
 3398              	.LVL488:
 694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3399              		.loc 1 694 0
 3400 003e 2846     		mov	r0, r5
 3401 0040 E188     		ldrh	r1, [r4, #6]
 708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3402              		.loc 1 708 0
 3403 0042 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3404              		.loc 1 694 0
 3405 0046 FFF7FEBF 		b	TIM_SetIC2Prescaler
 3406              	.LVL489:
 3407              	.L185:
 699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3408              		.loc 1 699 0
 3409 004a FFF7FEFF 		bl	TI2_Config
 3410              	.LVL490:
 702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3411              		.loc 1 702 0
 3412 004e 2846     		mov	r0, r5
 3413 0050 E188     		ldrh	r1, [r4, #6]
 3414 0052 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3415              	.LVL491:
 704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3416              		.loc 1 704 0
 3417 0056 2846     		mov	r0, r5
 3418 0058 3946     		mov	r1, r7
 3419 005a 3246     		mov	r2, r6
 3420 005c 2389     		ldrh	r3, [r4, #8]
 3421 005e FFF7FEFF 		bl	TI1_Config
 3422              	.LVL492:
 706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3423              		.loc 1 706 0
 3424 0062 2846     		mov	r0, r5
 3425 0064 E188     		ldrh	r1, [r4, #6]
 708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3426              		.loc 1 708 0
 3427 0066 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3428              		.loc 1 706 0
 3429 006a FFF7FEBF 		b	TIM_SetIC1Prescaler
 3430              	.LVL493:
 3431              		.cfi_endproc
 3432              	.LFE63:
 3434              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3435              		.align	1
 3436              		.global	TIM_SetIC3Prescaler
 3437              		.thumb
 3438              		.thumb_func
 3440              	TIM_SetIC3Prescaler:
 3441              	.LFB130:
2404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3442              		.loc 1 2404 0
 3443              		.cfi_startproc
 3444              		@ args = 0, pretend = 0, frame = 0
 3445              		@ frame_needed = 0, uses_anonymous_args = 0
 3446              		@ link register save eliminated.
 3447              	.LVL494:
2409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
 3448              		.loc 1 2409 0
 3449 0000 838B     		ldrh	r3, [r0, #28]
 3450 0002 23F00C02 		bic	r2, r3, #12
 3451 0006 1304     		lsls	r3, r2, #16
 3452 0008 1A0C     		lsrs	r2, r3, #16
 3453 000a 8283     		strh	r2, [r0, #28]	@ movhi
2411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 3454              		.loc 1 2411 0
 3455 000c 838B     		ldrh	r3, [r0, #28]
 3456 000e 9AB2     		uxth	r2, r3
 3457 0010 1143     		orrs	r1, r1, r2
 3458              	.LVL495:
 3459 0012 8183     		strh	r1, [r0, #28]	@ movhi
 3460 0014 7047     		bx	lr
 3461              		.cfi_endproc
 3462              	.LFE130:
 3464              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 3465              		.align	1
 3466              		.global	TIM_SetIC4Prescaler
 3467              		.thumb
 3468              		.thumb_func
 3470              	TIM_SetIC4Prescaler:
 3471              	.LFB131:
2426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {  
 3472              		.loc 1 2426 0
 3473              		.cfi_startproc
 3474              		@ args = 0, pretend = 0, frame = 0
 3475              		@ frame_needed = 0, uses_anonymous_args = 0
 3476              		@ link register save eliminated.
 3477              	.LVL496:
2431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
 3478              		.loc 1 2431 0
 3479 0000 838B     		ldrh	r3, [r0, #28]
 3480 0002 23F44062 		bic	r2, r3, #3072
 3481 0006 1304     		lsls	r3, r2, #16
 3482 0008 1A0C     		lsrs	r2, r3, #16
 3483 000a 8283     		strh	r2, [r0, #28]	@ movhi
2433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 3484              		.loc 1 2433 0
 3485 000c 838B     		ldrh	r3, [r0, #28]
 3486 000e 9AB2     		uxth	r2, r3
 3487 0010 42EA0121 		orr	r1, r2, r1, lsl #8
 3488              	.LVL497:
 3489 0014 8BB2     		uxth	r3, r1
 3490 0016 8383     		strh	r3, [r0, #28]	@ movhi
 3491 0018 7047     		bx	lr
 3492              		.cfi_endproc
 3493              	.LFE131:
 3495              		.section	.text.TIM_ICInit,"ax",%progbits
 3496              		.align	1
 3497              		.global	TIM_ICInit
 3498              		.thumb
 3499              		.thumb_func
 3501              	TIM_ICInit:
 3502              	.LFB62:
 594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3503              		.loc 1 594 0
 3504              		.cfi_startproc
 3505              		@ args = 0, pretend = 0, frame = 0
 3506              		@ frame_needed = 0, uses_anonymous_args = 0
 3507              	.LVL498:
 3508 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3509              	.LCFI16:
 3510              		.cfi_def_cfa_offset 24
 3511              		.cfi_offset 3, -24
 3512              		.cfi_offset 4, -20
 3513              		.cfi_offset 5, -16
 3514              		.cfi_offset 6, -12
 3515              		.cfi_offset 7, -8
 3516              		.cfi_offset 14, -4
 3517 0002 0446     		mov	r4, r0
 3518 0004 0D46     		mov	r5, r1
 610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3519              		.loc 1 610 0
 3520 0006 0B88     		ldrh	r3, [r1, #0]
 3521 0008 4988     		ldrh	r1, [r1, #2]
 3522              	.LVL499:
 3523 000a AA88     		ldrh	r2, [r5, #4]
 3524 000c 43B9     		cbnz	r3, .L191
 614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3525              		.loc 1 614 0
 3526 000e 2B89     		ldrh	r3, [r5, #8]
 3527 0010 FFF7FEFF 		bl	TI1_Config
 3528              	.LVL500:
 618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3529              		.loc 1 618 0
 3530 0014 2046     		mov	r0, r4
 3531 0016 E988     		ldrh	r1, [r5, #6]
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3532              		.loc 1 650 0
 3533 0018 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3534              		.loc 1 618 0
 3535 001c FFF7FEBF 		b	TIM_SetIC1Prescaler
 3536              	.LVL501:
 3537              	.L191:
 620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3538              		.loc 1 620 0
 3539 0020 042B     		cmp	r3, #4
 3540 0022 08D1     		bne	.L192
 624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3541              		.loc 1 624 0
 3542 0024 2B89     		ldrh	r3, [r5, #8]
 3543 0026 FFF7FEFF 		bl	TI2_Config
 3544              	.LVL502:
 628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3545              		.loc 1 628 0
 3546 002a 2046     		mov	r0, r4
 3547 002c E988     		ldrh	r1, [r5, #6]
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3548              		.loc 1 650 0
 3549 002e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3550              		.loc 1 628 0
 3551 0032 FFF7FEBF 		b	TIM_SetIC2Prescaler
 3552              	.LVL503:
 3553              	.L192:
 630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3554              		.loc 1 630 0
 3555 0036 082B     		cmp	r3, #8
 3556 0038 0E46     		mov	r6, r1
 3557 003a 2F89     		ldrh	r7, [r5, #8]
 3558              	.LBB14:
 3559              	.LBB15:
2785:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2786:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2787:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configure the TI3 as Input.
2789:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2790:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2791:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2792:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
2797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
2798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
2799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2803:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2804:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2805:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2806:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2807:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
2808:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 3560              		.loc 1 2808 0
 3561 003c 008C     		ldrh	r0, [r0, #32]
 3562              	.LVL504:
 3563              	.LBE15:
 3564              	.LBE14:
 630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3565              		.loc 1 630 0
 3566 003e 3AD1     		bne	.L193
 3567              	.LVL505:
 3568              	.LBB17:
 3569              	.LBB16:
 3570              		.loc 1 2808 0
 3571 0040 20F48073 		bic	r3, r0, #256
 3572 0044 1804     		lsls	r0, r3, #16
 3573 0046 030C     		lsrs	r3, r0, #16
 3574 0048 2384     		strh	r3, [r4, #32]	@ movhi
2809:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3575              		.loc 1 2809 0
 3576 004a A08B     		ldrh	r0, [r4, #28]
 3577 004c 83B2     		uxth	r3, r0
 3578              	.LVL506:
2810:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 3579              		.loc 1 2810 0
 3580 004e 208C     		ldrh	r0, [r4, #32]
 3581              	.LVL507:
 3582 0050 80B2     		uxth	r0, r0
 3583              	.LVL508:
2811:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
2812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 3584              		.loc 1 2813 0
 3585 0052 23F0F303 		bic	r3, r3, #243
 3586              	.LVL509:
2814:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 3587              		.loc 1 2814 0
 3588 0056 43EA0717 		orr	r7, r3, r7, lsl #4
 3589 005a BFB2     		uxth	r7, r7
 3590 005c 3A43     		orrs	r2, r2, r7
 3591              	.LVL510:
2815:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     
2816:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 3592              		.loc 1 2816 0
 3593 005e 344B     		ldr	r3, .L206
 3594 0060 9C42     		cmp	r4, r3
 3595 0062 12D0     		beq	.L194
 3596 0064 03F50063 		add	r3, r3, #2048
 3597 0068 9C42     		cmp	r4, r3
 3598 006a 0ED0     		beq	.L194
 3599 006c B4F1804F 		cmp	r4, #1073741824
 3600 0070 0BD0     		beq	.L194
 3601 0072 A3F59833 		sub	r3, r3, #77824
 3602 0076 9C42     		cmp	r4, r3
 3603 0078 07D0     		beq	.L194
 3604 007a 03F58063 		add	r3, r3, #1024
 3605 007e 9C42     		cmp	r4, r3
 3606 0080 03D0     		beq	.L194
2817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 3607              		.loc 1 2817 0
 3608 0082 03F58063 		add	r3, r3, #1024
 3609 0086 9C42     		cmp	r4, r3
 3610 0088 07D1     		bne	.L195
 3611              	.L194:
 3612              	.LVL511:
2818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P));
 3613              		.loc 1 2820 0
 3614 008a 20F40070 		bic	r0, r0, #512
 3615              	.LVL512:
2821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 3616              		.loc 1 2821 0
 3617 008e 40EA0621 		orr	r1, r0, r6, lsl #8
 3618              	.LVL513:
 3619 0092 8BB2     		uxth	r3, r1
 3620 0094 43F48073 		orr	r3, r3, #256
 3621              	.LVL514:
 3622 0098 05E0     		b	.L196
 3623              	.LVL515:
 3624              	.L195:
2822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2823:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2824:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2825:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 3625              		.loc 1 2826 0
 3626 009a 20F42060 		bic	r0, r0, #2560
 3627              	.LVL516:
2827:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC3E);
 3628              		.loc 1 2827 0
 3629 009e 41F48071 		orr	r1, r1, #256
 3630              	.LVL517:
 3631 00a2 40EA0103 		orr	r3, r0, r1
 3632              	.LVL518:
 3633              	.L196:
2828:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2829:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2830:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2831:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3634              		.loc 1 2831 0
 3635 00a6 A283     		strh	r2, [r4, #28]	@ movhi
2832:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 3636              		.loc 1 2832 0
 3637 00a8 2384     		strh	r3, [r4, #32]	@ movhi
 3638              	.LBE16:
 3639              	.LBE17:
 638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3640              		.loc 1 638 0
 3641 00aa 2046     		mov	r0, r4
 3642 00ac E988     		ldrh	r1, [r5, #6]
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3643              		.loc 1 650 0
 3644 00ae BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3645              		.loc 1 638 0
 3646 00b2 FFF7FEBF 		b	TIM_SetIC3Prescaler
 3647              	.LVL519:
 3648              	.L193:
 3649              	.LBB18:
 3650              	.LBB19:
2833:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
2834:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** /**
2836:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @brief  Configure the TI4 as Input.
2837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2839:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2840:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
2845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
2846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
2847:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2848:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   * @retval None
2850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   */
2851:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2852:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2853:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
2854:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2855:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** 
2856:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
2857:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 3651              		.loc 1 2857 0
 3652 00b6 20F48053 		bic	r3, r0, #4096
 3653 00ba 1804     		lsls	r0, r3, #16
 3654 00bc 030C     		lsrs	r3, r0, #16
 3655 00be 2384     		strh	r3, [r4, #32]	@ movhi
2858:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3656              		.loc 1 2858 0
 3657 00c0 A38B     		ldrh	r3, [r4, #28]
 3658              	.LVL520:
2859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 3659              		.loc 1 2859 0
 3660 00c2 208C     		ldrh	r0, [r4, #32]
 3661 00c4 80B2     		uxth	r0, r0
 3662              	.LVL521:
2860:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
2861:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2862:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 3663              		.loc 1 2862 0
 3664 00c6 23F44073 		bic	r3, r3, #768
 3665              	.LVL522:
 3666 00ca 1B05     		lsls	r3, r3, #20
 3667 00cc 1B0D     		lsrs	r3, r3, #20
 3668              	.LVL523:
2863:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 3669              		.loc 1 2863 0
 3670 00ce 43EA0222 		orr	r2, r3, r2, lsl #8
 3671              	.LVL524:
2864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 3672              		.loc 1 2864 0
 3673 00d2 42EA0733 		orr	r3, r2, r7, lsl #12
 3674 00d6 9BB2     		uxth	r3, r3
 3675              	.LVL525:
2865:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   
2866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 3676              		.loc 1 2866 0
 3677 00d8 154A     		ldr	r2, .L206
 3678 00da 9442     		cmp	r4, r2
 3679 00dc 12D0     		beq	.L197
 3680 00de 02F50062 		add	r2, r2, #2048
 3681 00e2 9442     		cmp	r4, r2
 3682 00e4 0ED0     		beq	.L197
 3683 00e6 B4F1804F 		cmp	r4, #1073741824
 3684 00ea 0BD0     		beq	.L197
 3685 00ec A2F59832 		sub	r2, r2, #77824
 3686 00f0 9442     		cmp	r4, r2
 3687 00f2 07D0     		beq	.L197
 3688 00f4 02F58062 		add	r2, r2, #1024
 3689 00f8 9442     		cmp	r4, r2
 3690 00fa 03D0     		beq	.L197
2867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 3691              		.loc 1 2867 0
 3692 00fc 02F58062 		add	r2, r2, #1024
 3693 0100 9442     		cmp	r4, r2
 3694 0102 07D1     		bne	.L198
 3695              	.L197:
 3696              	.LVL526:
2868:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2870:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P));
 3697              		.loc 1 2870 0
 3698 0104 20F40050 		bic	r0, r0, #8192
 3699              	.LVL527:
2871:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 3700              		.loc 1 2871 0
 3701 0108 40EA0632 		orr	r2, r0, r6, lsl #12
 3702 010c 91B2     		uxth	r1, r2
 3703              	.LVL528:
 3704 010e 41F48052 		orr	r2, r1, #4096
 3705              	.LVL529:
 3706 0112 05E0     		b	.L199
 3707              	.LVL530:
 3708              	.L198:
2872:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2873:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   else
2874:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   {
2875:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2876:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC4NP));
 3709              		.loc 1 2876 0
 3710 0114 47F6FF52 		movw	r2, #32255
 3711 0118 0240     		ands	r2, r2, r0
 3712              	.LVL531:
2877:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC4E);
 3713              		.loc 1 2877 0
 3714 011a 41F48051 		orr	r1, r1, #4096
 3715              	.LVL532:
 3716 011e 0A43     		orrs	r2, r2, r1
 3717              	.LVL533:
 3718              	.L199:
2878:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   }
2879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2880:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3719              		.loc 1 2880 0
 3720 0120 A383     		strh	r3, [r4, #28]	@ movhi
2881:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 3721              		.loc 1 2881 0
 3722 0122 2284     		strh	r2, [r4, #32]	@ movhi
 3723              	.LBE19:
 3724              	.LBE18:
 648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3725              		.loc 1 648 0
 3726 0124 2046     		mov	r0, r4
 3727 0126 E988     		ldrh	r1, [r5, #6]
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3728              		.loc 1 650 0
 3729 0128 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3730              		.loc 1 648 0
 3731 012c FFF7FEBF 		b	TIM_SetIC4Prescaler
 3732              	.LVL534:
 3733              	.L207:
 3734              		.align	2
 3735              	.L206:
 3736 0130 002C0140 		.word	1073818624
 3737              		.cfi_endproc
 3738              	.LFE62:
 3740              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 3741              		.align	1
 3742              		.global	TIM_SetClockDivision
 3743              		.thumb
 3744              		.thumb_func
 3746              	TIM_SetClockDivision:
 3747              	.LFB132:
2448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3748              		.loc 1 2448 0
 3749              		.cfi_startproc
 3750              		@ args = 0, pretend = 0, frame = 0
 3751              		@ frame_needed = 0, uses_anonymous_args = 0
 3752              		@ link register save eliminated.
 3753              	.LVL535:
2453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
 3754              		.loc 1 2453 0
 3755 0000 0388     		ldrh	r3, [r0, #0]
 3756 0002 23F44072 		bic	r2, r3, #768
 3757 0006 1304     		lsls	r3, r2, #16
 3758 0008 1A0C     		lsrs	r2, r3, #16
 3759 000a 0280     		strh	r2, [r0, #0]	@ movhi
2455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
 3760              		.loc 1 2455 0
 3761 000c 0388     		ldrh	r3, [r0, #0]
 3762 000e 9AB2     		uxth	r2, r3
 3763 0010 1143     		orrs	r1, r1, r2
 3764              	.LVL536:
 3765 0012 0180     		strh	r1, [r0, #0]	@ movhi
 3766 0014 7047     		bx	lr
 3767              		.cfi_endproc
 3768              	.LFE132:
 3770              		.section	.text.TIM_GetCapture1,"ax",%progbits
 3771              		.align	1
 3772              		.global	TIM_GetCapture1
 3773              		.thumb
 3774              		.thumb_func
 3776              	TIM_GetCapture1:
 3777              	.LFB133:
2464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3778              		.loc 1 2464 0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 0
 3781              		@ frame_needed = 0, uses_anonymous_args = 0
 3782              		@ link register save eliminated.
 3783              	.LVL537:
2468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR1;
 3784              		.loc 1 2468 0
 3785 0000 808E     		ldrh	r0, [r0, #52]
 3786              	.LVL538:
2469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3787              		.loc 1 2469 0
 3788 0002 80B2     		uxth	r0, r0
 3789 0004 7047     		bx	lr
 3790              		.cfi_endproc
 3791              	.LFE133:
 3793              		.section	.text.TIM_GetCapture2,"ax",%progbits
 3794              		.align	1
 3795              		.global	TIM_GetCapture2
 3796              		.thumb
 3797              		.thumb_func
 3799              	TIM_GetCapture2:
 3800              	.LFB134:
2477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3801              		.loc 1 2477 0
 3802              		.cfi_startproc
 3803              		@ args = 0, pretend = 0, frame = 0
 3804              		@ frame_needed = 0, uses_anonymous_args = 0
 3805              		@ link register save eliminated.
 3806              	.LVL539:
2481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR2;
 3807              		.loc 1 2481 0
 3808 0000 008F     		ldrh	r0, [r0, #56]
 3809              	.LVL540:
2482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3810              		.loc 1 2482 0
 3811 0002 80B2     		uxth	r0, r0
 3812 0004 7047     		bx	lr
 3813              		.cfi_endproc
 3814              	.LFE134:
 3816              		.section	.text.TIM_GetCapture3,"ax",%progbits
 3817              		.align	1
 3818              		.global	TIM_GetCapture3
 3819              		.thumb
 3820              		.thumb_func
 3822              	TIM_GetCapture3:
 3823              	.LFB135:
2490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3824              		.loc 1 2490 0
 3825              		.cfi_startproc
 3826              		@ args = 0, pretend = 0, frame = 0
 3827              		@ frame_needed = 0, uses_anonymous_args = 0
 3828              		@ link register save eliminated.
 3829              	.LVL541:
2494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR3;
 3830              		.loc 1 2494 0
 3831 0000 808F     		ldrh	r0, [r0, #60]
 3832              	.LVL542:
2495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3833              		.loc 1 2495 0
 3834 0002 80B2     		uxth	r0, r0
 3835 0004 7047     		bx	lr
 3836              		.cfi_endproc
 3837              	.LFE135:
 3839              		.section	.text.TIM_GetCapture4,"ax",%progbits
 3840              		.align	1
 3841              		.global	TIM_GetCapture4
 3842              		.thumb
 3843              		.thumb_func
 3845              	TIM_GetCapture4:
 3846              	.LFB136:
2503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3847              		.loc 1 2503 0
 3848              		.cfi_startproc
 3849              		@ args = 0, pretend = 0, frame = 0
 3850              		@ frame_needed = 0, uses_anonymous_args = 0
 3851              		@ link register save eliminated.
 3852              	.LVL543:
2507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CCR4;
 3853              		.loc 1 2507 0
 3854 0000 B0F84000 		ldrh	r0, [r0, #64]
 3855              	.LVL544:
2508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3856              		.loc 1 2508 0
 3857 0004 80B2     		uxth	r0, r0
 3858 0006 7047     		bx	lr
 3859              		.cfi_endproc
 3860              	.LFE136:
 3862              		.section	.text.TIM_GetCounter,"ax",%progbits
 3863              		.align	1
 3864              		.global	TIM_GetCounter
 3865              		.thumb
 3866              		.thumb_func
 3868              	TIM_GetCounter:
 3869              	.LFB137:
2516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3870              		.loc 1 2516 0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 0
 3873              		@ frame_needed = 0, uses_anonymous_args = 0
 3874              		@ link register save eliminated.
 3875              	.LVL545:
2520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->CNT;
 3876              		.loc 1 2520 0
 3877 0000 808C     		ldrh	r0, [r0, #36]
 3878              	.LVL546:
2521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3879              		.loc 1 2521 0
 3880 0002 80B2     		uxth	r0, r0
 3881 0004 7047     		bx	lr
 3882              		.cfi_endproc
 3883              	.LFE137:
 3885              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 3886              		.align	1
 3887              		.global	TIM_GetPrescaler
 3888              		.thumb
 3889              		.thumb_func
 3891              	TIM_GetPrescaler:
 3892              	.LFB138:
2529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3893              		.loc 1 2529 0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
 3897              		@ link register save eliminated.
 3898              	.LVL547:
2533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   return TIMx->PSC;
 3899              		.loc 1 2533 0
 3900 0000 008D     		ldrh	r0, [r0, #40]
 3901              	.LVL548:
2534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3902              		.loc 1 2534 0
 3903 0002 80B2     		uxth	r0, r0
 3904 0004 7047     		bx	lr
 3905              		.cfi_endproc
 3906              	.LFE138:
 3908              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 3909              		.align	1
 3910              		.global	TIM_GetFlagStatus
 3911              		.thumb
 3912              		.thumb_func
 3914              	TIM_GetFlagStatus:
 3915              	.LFB139:
2563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** { 
 3916              		.loc 1 2563 0
 3917              		.cfi_startproc
 3918              		@ args = 0, pretend = 0, frame = 0
 3919              		@ frame_needed = 0, uses_anonymous_args = 0
 3920              		@ link register save eliminated.
 3921              	.LVL549:
 3922              	.LVL550:
2569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 3923              		.loc 1 2569 0
 3924 0000 038A     		ldrh	r3, [r0, #16]
 3925              	.LVL551:
 3926 0002 1942     		tst	r1, r3
2578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3927              		.loc 1 2578 0
 3928 0004 0CBF     		ite	eq
 3929 0006 0020     		moveq	r0, #0
 3930 0008 0120     		movne	r0, #1
 3931              	.LVL552:
 3932 000a 7047     		bx	lr
 3933              		.cfi_endproc
 3934              	.LFE139:
 3936              		.section	.text.TIM_ClearFlag,"ax",%progbits
 3937              		.align	1
 3938              		.global	TIM_ClearFlag
 3939              		.thumb
 3940              		.thumb_func
 3942              	TIM_ClearFlag:
 3943              	.LFB140:
2607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {  
 3944              		.loc 1 2607 0
 3945              		.cfi_startproc
 3946              		@ args = 0, pretend = 0, frame = 0
 3947              		@ frame_needed = 0, uses_anonymous_args = 0
 3948              		@ link register save eliminated.
 3949              	.LVL553:
2613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 3950              		.loc 1 2613 0
 3951 0000 C943     		mvns	r1, r1
 3952              	.LVL554:
 3953 0002 8AB2     		uxth	r2, r1
 3954 0004 0282     		strh	r2, [r0, #16]	@ movhi
 3955 0006 7047     		bx	lr
 3956              		.cfi_endproc
 3957              	.LFE140:
 3959              		.section	.text.TIM_GetITStatus,"ax",%progbits
 3960              		.align	1
 3961              		.global	TIM_GetITStatus
 3962              		.thumb
 3963              		.thumb_func
 3965              	TIM_GetITStatus:
 3966              	.LFB141:
2639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 3967              		.loc 1 2639 0
 3968              		.cfi_startproc
 3969              		@ args = 0, pretend = 0, frame = 0
 3970              		@ frame_needed = 0, uses_anonymous_args = 0
 3971              		@ link register save eliminated.
 3972              	.LVL555:
 3973              	.LVL556:
2646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 3974              		.loc 1 2646 0
 3975 0000 038A     		ldrh	r3, [r0, #16]
 3976              	.LVL557:
2648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 3977              		.loc 1 2648 0
 3978 0002 8289     		ldrh	r2, [r0, #12]
 3979 0004 92B2     		uxth	r2, r2
 3980              	.LVL558:
2649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3981              		.loc 1 2649 0
 3982 0006 11EA0300 		ands	r0, r1, r3
 3983              	.LVL559:
 3984 000a 03D0     		beq	.L218
2649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3985              		.loc 1 2649 0 is_stmt 0 discriminator 1
 3986 000c 1142     		tst	r1, r2
2651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****     bitstatus = SET;
 3987              		.loc 1 2651 0 is_stmt 1 discriminator 1
 3988 000e 0CBF     		ite	eq
 3989 0010 0020     		moveq	r0, #0
 3990 0012 0120     		movne	r0, #1
 3991              	.L218:
 3992              	.LVL560:
2658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** }
 3993              		.loc 1 2658 0
 3994 0014 7047     		bx	lr
 3995              		.cfi_endproc
 3996              	.LFE141:
 3998              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 3999              		.align	1
 4000              		.global	TIM_ClearITPendingBit
 4001              		.thumb
 4002              		.thumb_func
 4004              	TIM_ClearITPendingBit:
 4005              	.LFB142:
2683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c **** {
 4006              		.loc 1 2683 0
 4007              		.cfi_startproc
 4008              		@ args = 0, pretend = 0, frame = 0
 4009              		@ frame_needed = 0, uses_anonymous_args = 0
 4010              		@ link register save eliminated.
 4011              	.LVL561:
2688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4012              		.loc 1 2688 0
 4013 0000 C943     		mvns	r1, r1
 4014              	.LVL562:
 4015 0002 8AB2     		uxth	r2, r1
 4016 0004 0282     		strh	r2, [r0, #16]	@ movhi
 4017 0006 7047     		bx	lr
 4018              		.cfi_endproc
 4019              	.LFE142:
 4021              		.text
 4022              	.Letext0:
 4023              		.file 2 "c:\\devz\\arm\\launchpad\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 4024              		.file 3 "./lib/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 4025              		.file 4 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 4026              		.file 5 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 4027              		.file 6 "./lib/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_tim.c
  R:\TEMP\cctIrd1u.s:19     .text.TI1_Config:00000000 $t
  R:\TEMP\cctIrd1u.s:23     .text.TI1_Config:00000000 TI1_Config
  R:\TEMP\cctIrd1u.s:107    .text.TI1_Config:00000064 $d
  R:\TEMP\cctIrd1u.s:112    .text.TI2_Config:00000000 $t
  R:\TEMP\cctIrd1u.s:116    .text.TI2_Config:00000000 TI2_Config
  R:\TEMP\cctIrd1u.s:207    .text.TI2_Config:00000074 $d
  R:\TEMP\cctIrd1u.s:212    .text.TIM_DeInit:00000000 $t
  R:\TEMP\cctIrd1u.s:217    .text.TIM_DeInit:00000000 TIM_DeInit
  R:\TEMP\cctIrd1u.s:497    .text.TIM_DeInit:0000016c $d
  R:\TEMP\cctIrd1u.s:517    .text.TIM_TimeBaseInit:00000000 $t
  R:\TEMP\cctIrd1u.s:522    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
  R:\TEMP\cctIrd1u.s:621    .text.TIM_TimeBaseInit:0000008c $d
  R:\TEMP\cctIrd1u.s:627    .text.TIM_OC1Init:00000000 $t
  R:\TEMP\cctIrd1u.s:632    .text.TIM_OC1Init:00000000 TIM_OC1Init
  R:\TEMP\cctIrd1u.s:746    .text.TIM_OC1Init:00000084 $d
  R:\TEMP\cctIrd1u.s:751    .text.TIM_OC2Init:00000000 $t
  R:\TEMP\cctIrd1u.s:756    .text.TIM_OC2Init:00000000 TIM_OC2Init
  R:\TEMP\cctIrd1u.s:871    .text.TIM_OC2Init:00000084 $d
  R:\TEMP\cctIrd1u.s:876    .text.TIM_OC3Init:00000000 $t
  R:\TEMP\cctIrd1u.s:881    .text.TIM_OC3Init:00000000 TIM_OC3Init
  R:\TEMP\cctIrd1u.s:994    .text.TIM_OC3Init:00000080 $d
  R:\TEMP\cctIrd1u.s:999    .text.TIM_OC4Init:00000000 $t
  R:\TEMP\cctIrd1u.s:1004   .text.TIM_OC4Init:00000000 TIM_OC4Init
  R:\TEMP\cctIrd1u.s:1096   .text.TIM_OC4Init:00000064 $d
  R:\TEMP\cctIrd1u.s:1101   .text.TIM_BDTRConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1106   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
  R:\TEMP\cctIrd1u.s:1136   .text.TIM_TimeBaseStructInit:00000000 $t
  R:\TEMP\cctIrd1u.s:1141   .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
  R:\TEMP\cctIrd1u.s:1166   .text.TIM_OCStructInit:00000000 $t
  R:\TEMP\cctIrd1u.s:1171   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
  R:\TEMP\cctIrd1u.s:1201   .text.TIM_ICStructInit:00000000 $t
  R:\TEMP\cctIrd1u.s:1206   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
  R:\TEMP\cctIrd1u.s:1231   .text.TIM_BDTRStructInit:00000000 $t
  R:\TEMP\cctIrd1u.s:1236   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
  R:\TEMP\cctIrd1u.s:1264   .text.TIM_Cmd:00000000 $t
  R:\TEMP\cctIrd1u.s:1269   .text.TIM_Cmd:00000000 TIM_Cmd
  R:\TEMP\cctIrd1u.s:1300   .text.TIM_CtrlPWMOutputs:00000000 $t
  R:\TEMP\cctIrd1u.s:1305   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
  R:\TEMP\cctIrd1u.s:1336   .text.TIM_ITConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1341   .text.TIM_ITConfig:00000000 TIM_ITConfig
  R:\TEMP\cctIrd1u.s:1370   .text.TIM_GenerateEvent:00000000 $t
  R:\TEMP\cctIrd1u.s:1375   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
  R:\TEMP\cctIrd1u.s:1390   .text.TIM_DMAConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1395   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
  R:\TEMP\cctIrd1u.s:1412   .text.TIM_DMACmd:00000000 $t
  R:\TEMP\cctIrd1u.s:1417   .text.TIM_DMACmd:00000000 TIM_DMACmd
  R:\TEMP\cctIrd1u.s:1446   .text.TIM_InternalClockConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1451   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
  R:\TEMP\cctIrd1u.s:1470   .text.TIM_ITRxExternalClockConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1475   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
  R:\TEMP\cctIrd1u.s:1513   .text.TIM_TIxExternalClockConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1518   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
  R:\TEMP\cctIrd1u.s:1579   .text.TIM_ETRConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1584   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
  R:\TEMP\cctIrd1u.s:1619   .text.TIM_ETRClockMode2Config:00000000 $t
  R:\TEMP\cctIrd1u.s:1624   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
  R:\TEMP\cctIrd1u.s:1650   .text.TIM_ETRClockMode1Config:00000000 $t
  R:\TEMP\cctIrd1u.s:1655   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
  R:\TEMP\cctIrd1u.s:1690   .text.TIM_PrescalerConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1695   .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
  R:\TEMP\cctIrd1u.s:1712   .text.TIM_CounterModeConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1717   .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
  R:\TEMP\cctIrd1u.s:1745   .text.TIM_SelectInputTrigger:00000000 $t
  R:\TEMP\cctIrd1u.s:1750   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
  R:\TEMP\cctIrd1u.s:1778   .text.TIM_EncoderInterfaceConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1783   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
  R:\TEMP\cctIrd1u.s:1850   .text.TIM_ForcedOC1Config:00000000 $t
  R:\TEMP\cctIrd1u.s:1855   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
  R:\TEMP\cctIrd1u.s:1883   .text.TIM_ForcedOC2Config:00000000 $t
  R:\TEMP\cctIrd1u.s:1888   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
  R:\TEMP\cctIrd1u.s:1918   .text.TIM_ForcedOC3Config:00000000 $t
  R:\TEMP\cctIrd1u.s:1923   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
  R:\TEMP\cctIrd1u.s:1951   .text.TIM_ForcedOC4Config:00000000 $t
  R:\TEMP\cctIrd1u.s:1956   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
  R:\TEMP\cctIrd1u.s:1986   .text.TIM_ARRPreloadConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:1991   .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
  R:\TEMP\cctIrd1u.s:2022   .text.TIM_SelectCOM:00000000 $t
  R:\TEMP\cctIrd1u.s:2027   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
  R:\TEMP\cctIrd1u.s:2058   .text.TIM_SelectCCDMA:00000000 $t
  R:\TEMP\cctIrd1u.s:2063   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
  R:\TEMP\cctIrd1u.s:2094   .text.TIM_CCPreloadControl:00000000 $t
  R:\TEMP\cctIrd1u.s:2099   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
  R:\TEMP\cctIrd1u.s:2130   .text.TIM_OC1PreloadConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2135   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
  R:\TEMP\cctIrd1u.s:2163   .text.TIM_OC2PreloadConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2168   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
  R:\TEMP\cctIrd1u.s:2198   .text.TIM_OC3PreloadConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2203   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
  R:\TEMP\cctIrd1u.s:2231   .text.TIM_OC4PreloadConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2236   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
  R:\TEMP\cctIrd1u.s:2266   .text.TIM_OC1FastConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2271   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
  R:\TEMP\cctIrd1u.s:2299   .text.TIM_OC2FastConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2304   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
  R:\TEMP\cctIrd1u.s:2334   .text.TIM_OC3FastConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2339   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
  R:\TEMP\cctIrd1u.s:2367   .text.TIM_OC4FastConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2372   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
  R:\TEMP\cctIrd1u.s:2402   .text.TIM_ClearOC1Ref:00000000 $t
  R:\TEMP\cctIrd1u.s:2407   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
  R:\TEMP\cctIrd1u.s:2435   .text.TIM_ClearOC2Ref:00000000 $t
  R:\TEMP\cctIrd1u.s:2440   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
  R:\TEMP\cctIrd1u.s:2468   .text.TIM_ClearOC3Ref:00000000 $t
  R:\TEMP\cctIrd1u.s:2473   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
  R:\TEMP\cctIrd1u.s:2501   .text.TIM_ClearOC4Ref:00000000 $t
  R:\TEMP\cctIrd1u.s:2506   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
  R:\TEMP\cctIrd1u.s:2534   .text.TIM_OC1PolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2539   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
  R:\TEMP\cctIrd1u.s:2567   .text.TIM_OC1NPolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2572   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
  R:\TEMP\cctIrd1u.s:2600   .text.TIM_OC2PolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2605   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
  R:\TEMP\cctIrd1u.s:2635   .text.TIM_OC2NPolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2640   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
  R:\TEMP\cctIrd1u.s:2670   .text.TIM_OC3PolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2675   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
  R:\TEMP\cctIrd1u.s:2705   .text.TIM_OC3NPolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2710   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
  R:\TEMP\cctIrd1u.s:2740   .text.TIM_OC4PolarityConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2745   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
  R:\TEMP\cctIrd1u.s:2775   .text.TIM_CCxCmd:00000000 $t
  R:\TEMP\cctIrd1u.s:2780   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
  R:\TEMP\cctIrd1u.s:2815   .text.TIM_CCxNCmd:00000000 $t
  R:\TEMP\cctIrd1u.s:2820   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
  R:\TEMP\cctIrd1u.s:2855   .text.TIM_SelectOCxM:00000000 $t
  R:\TEMP\cctIrd1u.s:2860   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
  R:\TEMP\cctIrd1u.s:2929   .text.TIM_UpdateDisableConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2934   .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
  R:\TEMP\cctIrd1u.s:2965   .text.TIM_UpdateRequestConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:2970   .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
  R:\TEMP\cctIrd1u.s:3001   .text.TIM_SelectHallSensor:00000000 $t
  R:\TEMP\cctIrd1u.s:3006   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
  R:\TEMP\cctIrd1u.s:3037   .text.TIM_SelectOnePulseMode:00000000 $t
  R:\TEMP\cctIrd1u.s:3042   .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
  R:\TEMP\cctIrd1u.s:3067   .text.TIM_SelectOutputTrigger:00000000 $t
  R:\TEMP\cctIrd1u.s:3072   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
  R:\TEMP\cctIrd1u.s:3097   .text.TIM_SelectSlaveMode:00000000 $t
  R:\TEMP\cctIrd1u.s:3102   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
  R:\TEMP\cctIrd1u.s:3127   .text.TIM_SelectMasterSlaveMode:00000000 $t
  R:\TEMP\cctIrd1u.s:3132   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
  R:\TEMP\cctIrd1u.s:3157   .text.TIM_SetCounter:00000000 $t
  R:\TEMP\cctIrd1u.s:3162   .text.TIM_SetCounter:00000000 TIM_SetCounter
  R:\TEMP\cctIrd1u.s:3177   .text.TIM_SetAutoreload:00000000 $t
  R:\TEMP\cctIrd1u.s:3182   .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
  R:\TEMP\cctIrd1u.s:3197   .text.TIM_SetCompare1:00000000 $t
  R:\TEMP\cctIrd1u.s:3202   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
  R:\TEMP\cctIrd1u.s:3217   .text.TIM_SetCompare2:00000000 $t
  R:\TEMP\cctIrd1u.s:3222   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
  R:\TEMP\cctIrd1u.s:3237   .text.TIM_SetCompare3:00000000 $t
  R:\TEMP\cctIrd1u.s:3242   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
  R:\TEMP\cctIrd1u.s:3257   .text.TIM_SetCompare4:00000000 $t
  R:\TEMP\cctIrd1u.s:3262   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
  R:\TEMP\cctIrd1u.s:3277   .text.TIM_SetIC1Prescaler:00000000 $t
  R:\TEMP\cctIrd1u.s:3282   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
  R:\TEMP\cctIrd1u.s:3307   .text.TIM_SetIC2Prescaler:00000000 $t
  R:\TEMP\cctIrd1u.s:3312   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
  R:\TEMP\cctIrd1u.s:3338   .text.TIM_PWMIConfig:00000000 $t
  R:\TEMP\cctIrd1u.s:3343   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
  R:\TEMP\cctIrd1u.s:3435   .text.TIM_SetIC3Prescaler:00000000 $t
  R:\TEMP\cctIrd1u.s:3440   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
  R:\TEMP\cctIrd1u.s:3465   .text.TIM_SetIC4Prescaler:00000000 $t
  R:\TEMP\cctIrd1u.s:3470   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
  R:\TEMP\cctIrd1u.s:3496   .text.TIM_ICInit:00000000 $t
  R:\TEMP\cctIrd1u.s:3501   .text.TIM_ICInit:00000000 TIM_ICInit
  R:\TEMP\cctIrd1u.s:3736   .text.TIM_ICInit:00000130 $d
  R:\TEMP\cctIrd1u.s:3741   .text.TIM_SetClockDivision:00000000 $t
  R:\TEMP\cctIrd1u.s:3746   .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
  R:\TEMP\cctIrd1u.s:3771   .text.TIM_GetCapture1:00000000 $t
  R:\TEMP\cctIrd1u.s:3776   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
  R:\TEMP\cctIrd1u.s:3794   .text.TIM_GetCapture2:00000000 $t
  R:\TEMP\cctIrd1u.s:3799   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
  R:\TEMP\cctIrd1u.s:3817   .text.TIM_GetCapture3:00000000 $t
  R:\TEMP\cctIrd1u.s:3822   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
  R:\TEMP\cctIrd1u.s:3840   .text.TIM_GetCapture4:00000000 $t
  R:\TEMP\cctIrd1u.s:3845   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
  R:\TEMP\cctIrd1u.s:3863   .text.TIM_GetCounter:00000000 $t
  R:\TEMP\cctIrd1u.s:3868   .text.TIM_GetCounter:00000000 TIM_GetCounter
  R:\TEMP\cctIrd1u.s:3886   .text.TIM_GetPrescaler:00000000 $t
  R:\TEMP\cctIrd1u.s:3891   .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
  R:\TEMP\cctIrd1u.s:3909   .text.TIM_GetFlagStatus:00000000 $t
  R:\TEMP\cctIrd1u.s:3914   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
  R:\TEMP\cctIrd1u.s:3937   .text.TIM_ClearFlag:00000000 $t
  R:\TEMP\cctIrd1u.s:3942   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
  R:\TEMP\cctIrd1u.s:3960   .text.TIM_GetITStatus:00000000 $t
  R:\TEMP\cctIrd1u.s:3965   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
  R:\TEMP\cctIrd1u.s:3999   .text.TIM_ClearITPendingBit:00000000 $t
  R:\TEMP\cctIrd1u.s:4004   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
