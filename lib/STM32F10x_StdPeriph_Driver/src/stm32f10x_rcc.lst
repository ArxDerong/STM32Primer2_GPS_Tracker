   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RCC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	RCC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	RCC_DeInit:
  25              	.LFB56:
  26              		.file 1 "lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.6.1
   6:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    05-March-2012
   7:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  13:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may not use this file except in compliance with the License.
  15:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may obtain a copy of the License at:
  16:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  17:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  19:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * See the License for the specific language governing permissions and
  23:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * limitations under the License.
  24:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  25:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  26:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  27:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  28:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  29:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  30:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  31:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  32:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  33:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  34:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  35:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  36:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  37:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  38:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  39:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  40:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  41:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  42:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  43:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  44:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  45:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  46:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  47:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  48:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  49:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  50:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  51:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  52:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  53:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  54:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  55:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  56:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  57:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  58:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  59:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  60:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  61:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  62:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  63:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  64:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  65:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  66:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  67:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  68:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  69:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  70:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  71:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  72:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  73:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  74:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  75:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  77:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  78:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  79:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  80:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  81:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  82:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  83:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  84:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  85:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  86:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  87:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  88:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  89:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  90:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  91:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  92:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  93:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  94:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  95:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  96:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  97:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  98:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  99:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
 101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
 102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  27              		.loc 1 224 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  32              		.loc 1 226 0
  33 0000 0D4B     		ldr	r3, .L2
  34 0002 1A68     		ldr	r2, [r3, #0]
  35 0004 42F00100 		orr	r0, r2, #1
  36 0008 1860     		str	r0, [r3, #0]
 227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  37              		.loc 1 230 0
  38 000a 5968     		ldr	r1, [r3, #4]
  39 000c 0B4A     		ldr	r2, .L2+4
  40 000e 0A40     		ands	r2, r2, r1
  41 0010 5A60     		str	r2, [r3, #4]
 231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  42              		.loc 1 236 0
  43 0012 1868     		ldr	r0, [r3, #0]
  44 0014 20F08471 		bic	r1, r0, #17301504
  45 0018 21F48032 		bic	r2, r1, #65536
  46 001c 1A60     		str	r2, [r3, #0]
 237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  47              		.loc 1 239 0
  48 001e 1868     		ldr	r0, [r3, #0]
  49 0020 20F48021 		bic	r1, r0, #262144
  50 0024 1960     		str	r1, [r3, #0]
 240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  51              		.loc 1 242 0
  52 0026 5A68     		ldr	r2, [r3, #4]
  53 0028 22F4FE00 		bic	r0, r2, #8323072
  54 002c 5860     		str	r0, [r3, #4]
 243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  55              		.loc 1 261 0
  56 002e 4FF41F01 		mov	r1, #10420224
  57 0032 9960     		str	r1, [r3, #8]
  58 0034 7047     		bx	lr
  59              	.L3:
  60 0036 00BF     		.align	2
  61              	.L2:
  62 0038 00100240 		.word	1073876992
  63 003c 0000FFF8 		.word	-117506048
  64              		.cfi_endproc
  65              	.LFE56:
  67              		.section	.text.RCC_HSEConfig,"ax",%progbits
  68              		.align	1
  69              		.global	RCC_HSEConfig
  70              		.thumb
  71              		.thumb_func
  73              	RCC_HSEConfig:
  74              	.LFB57:
 262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  75              		.loc 1 277 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LVL0:
 278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  81              		.loc 1 282 0
  82 0000 0B4B     		ldr	r3, .L10
  83 0002 1A68     		ldr	r2, [r3, #0]
  84 0004 22F48031 		bic	r1, r2, #65536
  85 0008 1960     		str	r1, [r3, #0]
 283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
  86              		.loc 1 284 0
  87 000a 1A68     		ldr	r2, [r3, #0]
  88 000c 22F48021 		bic	r1, r2, #262144
  89 0010 1960     		str	r1, [r3, #0]
 285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  90              		.loc 1 286 0
  91 0012 B0F5803F 		cmp	r0, #65536
  92 0016 06D0     		beq	.L6
  93 0018 B0F5802F 		cmp	r0, #262144
  94 001c 07D1     		bne	.L4
 287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
  95              		.loc 1 295 0
  96 001e 1868     		ldr	r0, [r3, #0]
  97              	.LVL1:
  98 0020 40F4A022 		orr	r2, r0, #327680
  99 0024 02E0     		b	.L8
 100              	.LVL2:
 101              	.L6:
 290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 102              		.loc 1 290 0
 103 0026 1968     		ldr	r1, [r3, #0]
 104 0028 41F48032 		orr	r2, r1, #65536
 105              	.LVL3:
 106              	.L8:
 107              		.loc 1 295 0
 108 002c 1A60     		str	r2, [r3, #0]
 109              	.L4:
 110 002e 7047     		bx	lr
 111              	.L11:
 112              		.align	2
 113              	.L10:
 114 0030 00100240 		.word	1073876992
 115              		.cfi_endproc
 116              	.LFE57:
 118              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 119              		.align	1
 120              		.global	RCC_AdjustHSICalibrationValue
 121              		.thumb
 122              		.thumb_func
 124              	RCC_AdjustHSICalibrationValue:
 125              	.LFB59:
 296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 126              		.loc 1 341 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL4:
 132              	.LVL5:
 342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 133              		.loc 1 345 0
 134 0000 034B     		ldr	r3, .L13
 135 0002 1A68     		ldr	r2, [r3, #0]
 136              	.LVL6:
 346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 137              		.loc 1 347 0
 138 0004 22F0F801 		bic	r1, r2, #248
 139              	.LVL7:
 348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 140              		.loc 1 349 0
 141 0008 41EAC000 		orr	r0, r1, r0, lsl #3
 142              	.LVL8:
 350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 143              		.loc 1 351 0
 144 000c 1860     		str	r0, [r3, #0]
 145 000e 7047     		bx	lr
 146              	.L14:
 147              		.align	2
 148              	.L13:
 149 0010 00100240 		.word	1073876992
 150              		.cfi_endproc
 151              	.LFE59:
 153              		.section	.text.RCC_HSICmd,"ax",%progbits
 154              		.align	1
 155              		.global	RCC_HSICmd
 156              		.thumb
 157              		.thumb_func
 159              	RCC_HSICmd:
 160              	.LFB60:
 352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 161              		.loc 1 361 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL9:
 362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 167              		.loc 1 364 0
 168 0000 014B     		ldr	r3, .L16
 169 0002 1860     		str	r0, [r3, #0]
 170 0004 7047     		bx	lr
 171              	.L17:
 172 0006 00BF     		.align	2
 173              	.L16:
 174 0008 00004242 		.word	1111621632
 175              		.cfi_endproc
 176              	.LFE60:
 178              		.section	.text.RCC_PLLConfig,"ax",%progbits
 179              		.align	1
 180              		.global	RCC_PLLConfig
 181              		.thumb
 182              		.thumb_func
 184              	RCC_PLLConfig:
 185              	.LFB61:
 365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 186              		.loc 1 385 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL10:
 192              	.LVL11:
 386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 193              		.loc 1 392 0
 194 0000 034B     		ldr	r3, .L19
 195 0002 5A68     		ldr	r2, [r3, #4]
 196              	.LVL12:
 393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 197              		.loc 1 394 0
 198 0004 22F47C12 		bic	r2, r2, #4128768
 199              	.LVL13:
 395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 200              		.loc 1 396 0
 201 0008 1043     		orrs	r0, r0, r2
 202              	.LVL14:
 203 000a 0143     		orrs	r1, r1, r0
 204              	.LVL15:
 397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 205              		.loc 1 398 0
 206 000c 5960     		str	r1, [r3, #4]
 207 000e 7047     		bx	lr
 208              	.L20:
 209              		.align	2
 210              	.L19:
 211 0010 00100240 		.word	1073876992
 212              		.cfi_endproc
 213              	.LFE61:
 215              		.section	.text.RCC_PLLCmd,"ax",%progbits
 216              		.align	1
 217              		.global	RCC_PLLCmd
 218              		.thumb
 219              		.thumb_func
 221              	RCC_PLLCmd:
 222              	.LFB62:
 399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 223              		.loc 1 408 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL16:
 409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 229              		.loc 1 412 0
 230 0000 014B     		ldr	r3, .L22
 231 0002 1860     		str	r0, [r3, #0]
 232 0004 7047     		bx	lr
 233              	.L23:
 234 0006 00BF     		.align	2
 235              	.L22:
 236 0008 60004242 		.word	1111621728
 237              		.cfi_endproc
 238              	.LFE62:
 240              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 241              		.align	1
 242              		.global	RCC_SYSCLKConfig
 243              		.thumb
 244              		.thumb_func
 246              	RCC_SYSCLKConfig:
 247              	.LFB63:
 413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 462:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 466:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 467:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 470:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 471:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 473:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 475:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 476:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 478:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 480:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 483:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 485:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 486:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 487:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 488:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 489:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 491:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 493:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 498:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 500:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 501:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 505:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 510:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 511:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 513:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 514:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 517:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 519:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 522:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 524:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 526:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 528:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 531:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 532:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 535:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 536:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 537:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 538:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 540:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 543:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 545:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 549:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 553:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 555:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 556:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 558:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 560:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 561:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 566:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 567:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 571:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 248              		.loc 1 571 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LVL17:
 254              	.LVL18:
 572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 575:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 255              		.loc 1 575 0
 256 0000 034B     		ldr	r3, .L25
 257 0002 5A68     		ldr	r2, [r3, #4]
 258              	.LVL19:
 576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 577:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 259              		.loc 1 577 0
 260 0004 22F00301 		bic	r1, r2, #3
 261              	.LVL20:
 578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 262              		.loc 1 579 0
 263 0008 0843     		orrs	r0, r0, r1
 264              	.LVL21:
 580:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 581:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 265              		.loc 1 581 0
 266 000a 5860     		str	r0, [r3, #4]
 267 000c 7047     		bx	lr
 268              	.L26:
 269 000e 00BF     		.align	2
 270              	.L25:
 271 0010 00100240 		.word	1073876992
 272              		.cfi_endproc
 273              	.LFE63:
 275              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 276              		.align	1
 277              		.global	RCC_GetSYSCLKSource
 278              		.thumb
 279              		.thumb_func
 281              	RCC_GetSYSCLKSource:
 282              	.LFB64:
 582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 583:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 584:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 585:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 586:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 587:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 588:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 590:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 591:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 592:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 593:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 283              		.loc 1 594 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 595:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 288              		.loc 1 595 0
 289 0000 024B     		ldr	r3, .L28
 290 0002 5868     		ldr	r0, [r3, #4]
 596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 291              		.loc 1 596 0
 292 0004 00F00C00 		and	r0, r0, #12
 293 0008 7047     		bx	lr
 294              	.L29:
 295 000a 00BF     		.align	2
 296              	.L28:
 297 000c 00100240 		.word	1073876992
 298              		.cfi_endproc
 299              	.LFE64:
 301              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 302              		.align	1
 303              		.global	RCC_HCLKConfig
 304              		.thumb
 305              		.thumb_func
 307              	RCC_HCLKConfig:
 308              	.LFB65:
 597:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 599:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 601:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 602:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 603:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 604:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 605:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 606:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 608:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 609:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 611:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 612:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 615:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 309              		.loc 1 615 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LVL22:
 315              	.LVL23:
 616:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 617:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 316              		.loc 1 619 0
 317 0000 034B     		ldr	r3, .L31
 318 0002 5A68     		ldr	r2, [r3, #4]
 319              	.LVL24:
 620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 320              		.loc 1 621 0
 321 0004 22F0F001 		bic	r1, r2, #240
 322              	.LVL25:
 622:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 323              		.loc 1 623 0
 324 0008 0843     		orrs	r0, r0, r1
 325              	.LVL26:
 624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 326              		.loc 1 625 0
 327 000a 5860     		str	r0, [r3, #4]
 328 000c 7047     		bx	lr
 329              	.L32:
 330 000e 00BF     		.align	2
 331              	.L31:
 332 0010 00100240 		.word	1073876992
 333              		.cfi_endproc
 334              	.LFE65:
 336              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 337              		.align	1
 338              		.global	RCC_PCLK1Config
 339              		.thumb
 340              		.thumb_func
 342              	RCC_PCLK1Config:
 343              	.LFB66:
 626:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 627:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 629:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 631:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 632:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 633:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 634:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 635:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 636:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 637:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 640:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 641:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 344              		.loc 1 641 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349              	.LVL27:
 350              	.LVL28:
 642:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 643:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 644:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 351              		.loc 1 645 0
 352 0000 034B     		ldr	r3, .L34
 353 0002 5A68     		ldr	r2, [r3, #4]
 354              	.LVL29:
 646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 355              		.loc 1 647 0
 356 0004 22F4E061 		bic	r1, r2, #1792
 357              	.LVL30:
 648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 358              		.loc 1 649 0
 359 0008 0843     		orrs	r0, r0, r1
 360              	.LVL31:
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 361              		.loc 1 651 0
 362 000a 5860     		str	r0, [r3, #4]
 363 000c 7047     		bx	lr
 364              	.L35:
 365 000e 00BF     		.align	2
 366              	.L34:
 367 0010 00100240 		.word	1073876992
 368              		.cfi_endproc
 369              	.LFE66:
 371              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 372              		.align	1
 373              		.global	RCC_PCLK2Config
 374              		.thumb
 375              		.thumb_func
 377              	RCC_PCLK2Config:
 378              	.LFB67:
 652:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 653:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 654:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 655:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 656:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 657:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 659:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 660:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 662:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 663:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 665:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 666:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 379              		.loc 1 667 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384              	.LVL32:
 385              	.LVL33:
 668:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 671:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 386              		.loc 1 671 0
 387 0000 034B     		ldr	r3, .L37
 388 0002 5A68     		ldr	r2, [r3, #4]
 389              	.LVL34:
 672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 673:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 390              		.loc 1 673 0
 391 0004 22F46051 		bic	r1, r2, #14336
 392              	.LVL35:
 674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 675:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 393              		.loc 1 675 0
 394 0008 41EAC000 		orr	r0, r1, r0, lsl #3
 395              	.LVL36:
 676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 677:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 396              		.loc 1 677 0
 397 000c 5860     		str	r0, [r3, #4]
 398 000e 7047     		bx	lr
 399              	.L38:
 400              		.align	2
 401              	.L37:
 402 0010 00100240 		.word	1073876992
 403              		.cfi_endproc
 404              	.LFE67:
 406              		.section	.text.RCC_ITConfig,"ax",%progbits
 407              		.align	1
 408              		.global	RCC_ITConfig
 409              		.thumb
 410              		.thumb_func
 412              	RCC_ITConfig:
 413              	.LFB68:
 678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 679:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 680:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 681:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 682:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 685:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 686:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 691:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 693:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 696:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 698:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 700:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 703:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 707:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 414              		.loc 1 707 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              	.LVL37:
 420 0000 044B     		ldr	r3, .L43
 708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 709:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 710:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 712:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 713:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 421              		.loc 1 714 0
 422 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 423              		.loc 1 711 0
 424 0004 09B1     		cbz	r1, .L40
 425              		.loc 1 714 0
 426 0006 1043     		orrs	r0, r0, r2
 427              	.LVL38:
 428 0008 01E0     		b	.L42
 429              	.LVL39:
 430              	.L40:
 715:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 716:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 717:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 718:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 431              		.loc 1 719 0
 432 000a 22EA0000 		bic	r0, r2, r0
 433              	.LVL40:
 434              	.L42:
 435 000e 1870     		strb	r0, [r3, #0]
 436 0010 7047     		bx	lr
 437              	.L44:
 438 0012 00BF     		.align	2
 439              	.L43:
 440 0014 09100240 		.word	1073877001
 441              		.cfi_endproc
 442              	.LFE68:
 444              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 445              		.align	1
 446              		.global	RCC_USBCLKConfig
 447              		.thumb
 448              		.thumb_func
 450              	RCC_USBCLKConfig:
 451              	.LFB69:
 720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 721:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 722:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 724:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 726:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 728:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 729:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 731:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 732:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 733:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 734:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 735:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 452              		.loc 1 735 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL41:
 736:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 737:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 738:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 739:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 458              		.loc 1 739 0
 459 0000 014B     		ldr	r3, .L46
 460 0002 1860     		str	r0, [r3, #0]
 461 0004 7047     		bx	lr
 462              	.L47:
 463 0006 00BF     		.align	2
 464              	.L46:
 465 0008 D8004242 		.word	1111621848
 466              		.cfi_endproc
 467              	.LFE69:
 469              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 470              		.align	1
 471              		.global	RCC_ADCCLKConfig
 472              		.thumb
 473              		.thumb_func
 475              	RCC_ADCCLKConfig:
 476              	.LFB70:
 740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 741:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 742:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 744:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 750:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 752:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 753:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 754:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 755:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 756:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 757:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 758:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 760:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 770:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 772:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 477              		.loc 1 773 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL42:
 483              	.LVL43:
 774:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 776:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 777:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 484              		.loc 1 777 0
 485 0000 034B     		ldr	r3, .L49
 486 0002 5A68     		ldr	r2, [r3, #4]
 487              	.LVL44:
 778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 779:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 488              		.loc 1 779 0
 489 0004 22F44041 		bic	r1, r2, #49152
 490              	.LVL45:
 780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 491              		.loc 1 781 0
 492 0008 0843     		orrs	r0, r0, r1
 493              	.LVL46:
 782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 494              		.loc 1 783 0
 495 000a 5860     		str	r0, [r3, #4]
 496 000c 7047     		bx	lr
 497              	.L50:
 498 000e 00BF     		.align	2
 499              	.L49:
 500 0010 00100240 		.word	1073876992
 501              		.cfi_endproc
 502              	.LFE70:
 504              		.section	.text.RCC_LSEConfig,"ax",%progbits
 505              		.align	1
 506              		.global	RCC_LSEConfig
 507              		.thumb
 508              		.thumb_func
 510              	RCC_LSEConfig:
 511              	.LFB71:
 784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 785:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 786:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 787:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 789:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 790:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 791:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 792:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 803:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 804:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 805:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 806:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 807:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 808:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 809:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 810:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 811:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 814:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 815:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 816:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 823:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 824:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 825:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 827:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 828:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 829:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 830:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 831:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 832:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 833:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 834:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 836:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 512              		.loc 1 836 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL47:
 837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 839:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 840:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 518              		.loc 1 841 0
 519 0000 064B     		ldr	r3, .L55
 520 0002 0022     		movs	r2, #0
 521 0004 1A70     		strb	r2, [r3, #0]
 842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 522              		.loc 1 843 0
 523 0006 1A70     		strb	r2, [r3, #0]
 844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 524              		.loc 1 845 0
 525 0008 0128     		cmp	r0, #1
 526 000a 04D0     		beq	.L53
 527 000c 0428     		cmp	r0, #4
 528 000e 04D1     		bne	.L51
 846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 847:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 848:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 851:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 852:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 853:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 854:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 529              		.loc 1 854 0
 530 0010 0520     		movs	r0, #5
 531              	.LVL48:
 532 0012 1870     		strb	r0, [r3, #0]
 855:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 533              		.loc 1 855 0
 534 0014 01E0     		b	.L51
 535              	.LVL49:
 536              	.L53:
 849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 537              		.loc 1 849 0
 538 0016 1870     		strb	r0, [r3, #0]
 850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 539              		.loc 1 850 0
 540 0018 7047     		bx	lr
 541              	.LVL50:
 542              	.L51:
 543 001a 7047     		bx	lr
 544              	.L56:
 545              		.align	2
 546              	.L55:
 547 001c 20100240 		.word	1073877024
 548              		.cfi_endproc
 549              	.LFE71:
 551              		.section	.text.RCC_LSICmd,"ax",%progbits
 552              		.align	1
 553              		.global	RCC_LSICmd
 554              		.thumb
 555              		.thumb_func
 557              	RCC_LSICmd:
 558              	.LFB72:
 856:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 857:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 858:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 860:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 861:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 862:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 863:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 865:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 868:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 559              		.loc 1 869 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564              	.LVL51:
 870:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 871:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 565              		.loc 1 872 0
 566 0000 014B     		ldr	r3, .L58
 567 0002 1860     		str	r0, [r3, #0]
 568 0004 7047     		bx	lr
 569              	.L59:
 570 0006 00BF     		.align	2
 571              	.L58:
 572 0008 80044242 		.word	1111622784
 573              		.cfi_endproc
 574              	.LFE72:
 576              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 577              		.align	1
 578              		.global	RCC_RTCCLKConfig
 579              		.thumb
 580              		.thumb_func
 582              	RCC_RTCCLKConfig:
 583              	.LFB73:
 873:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 874:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 875:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 876:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 877:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 878:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 880:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 881:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 882:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 883:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 884:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 885:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 886:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 584              		.loc 1 886 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL52:
 887:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 889:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 890:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 590              		.loc 1 890 0
 591 0000 024B     		ldr	r3, .L61
 592 0002 1A6A     		ldr	r2, [r3, #32]
 593 0004 1043     		orrs	r0, r0, r2
 594              	.LVL53:
 595 0006 1862     		str	r0, [r3, #32]
 596 0008 7047     		bx	lr
 597              	.L62:
 598 000a 00BF     		.align	2
 599              	.L61:
 600 000c 00100240 		.word	1073876992
 601              		.cfi_endproc
 602              	.LFE73:
 604              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 605              		.align	1
 606              		.global	RCC_RTCCLKCmd
 607              		.thumb
 608              		.thumb_func
 610              	RCC_RTCCLKCmd:
 611              	.LFB74:
 891:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 892:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 894:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 895:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 896:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 897:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 898:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 899:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 900:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 612              		.loc 1 900 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              	.LVL54:
 901:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 902:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 903:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 618              		.loc 1 903 0
 619 0000 014B     		ldr	r3, .L64
 620 0002 1860     		str	r0, [r3, #0]
 621 0004 7047     		bx	lr
 622              	.L65:
 623 0006 00BF     		.align	2
 624              	.L64:
 625 0008 3C044242 		.word	1111622716
 626              		.cfi_endproc
 627              	.LFE74:
 629              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 630              		.align	1
 631              		.global	RCC_GetClocksFreq
 632              		.thumb
 633              		.thumb_func
 635              	RCC_GetClocksFreq:
 636              	.LFB75:
 904:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 905:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 906:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 907:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 908:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 910:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 911:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 912:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 913:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 914:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 915:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 637              		.loc 1 915 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL55:
 642 0000 10B5     		push	{r4, lr}
 643              	.LCFI0:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 4, -8
 646              		.cfi_offset 14, -4
 647              	.LVL56:
 916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 917:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 918:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 919:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 920:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 921:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 922:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 923:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 924:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 925:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 926:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 927:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 648              		.loc 1 927 0
 649 0002 1F4B     		ldr	r3, .L76
 650 0004 5A68     		ldr	r2, [r3, #4]
 651              	.LVL57:
 652 0006 02F00C01 		and	r1, r2, #12
 653              	.LVL58:
 928:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 654              		.loc 1 929 0
 655 000a 0429     		cmp	r1, #4
 656 000c 03D0     		beq	.L69
 657 000e 0829     		cmp	r1, #8
 658 0010 04D0     		beq	.L70
 659 0012 1C4A     		ldr	r2, .L76+4
 660 0014 00E0     		b	.L74
 661              	.L69:
 930:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 931:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 932:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 933:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 934:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 935:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 662              		.loc 1 935 0
 663 0016 1C4A     		ldr	r2, .L76+8
 664              	.L74:
 665 0018 0260     		str	r2, [r0, #0]
 936:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 666              		.loc 1 936 0
 667 001a 0FE0     		b	.L71
 668              	.L70:
 937:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 939:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 669              		.loc 1 940 0
 670 001c 5C68     		ldr	r4, [r3, #4]
 671              	.LVL59:
 941:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 672              		.loc 1 941 0
 673 001e 5968     		ldr	r1, [r3, #4]
 674              	.LVL60:
 942:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 943:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 944:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 675              		.loc 1 944 0
 676 0020 C4F38342 		ubfx	r2, r4, #18, #4
 677              	.LVL61:
 678 0024 941C     		adds	r4, r2, #2
 679              	.LVL62:
 945:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 946:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 680              		.loc 1 946 0
 681 0026 C903     		lsls	r1, r1, #15
 682              	.LVL63:
 683 0028 01D4     		bmi	.L72
 947:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 948:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 684              		.loc 1 948 0
 685 002a 1849     		ldr	r1, .L76+12
 686 002c 04E0     		b	.L75
 687              	.L72:
 949:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 950:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 951:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 952:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 953:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 955:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 956:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 957:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 688              		.loc 1 958 0
 689 002e 5B68     		ldr	r3, [r3, #4]
 690 0030 9903     		lsls	r1, r3, #14
 959:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 960:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 691              		.loc 1 960 0
 692 0032 4CBF     		ite	mi
 693 0034 1649     		ldrmi	r1, .L76+16
 961:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 962:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 963:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 964:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 694              		.loc 1 964 0
 695 0036 1449     		ldrpl	r1, .L76+8
 696              	.L75:
 697 0038 4C43     		muls	r4, r1, r4
 698              	.LVL64:
 699 003a 0460     		str	r4, [r0, #0]
 700              	.LVL65:
 701              	.L71:
 965:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 966:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 967:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 968:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 969:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 970:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 971:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 972:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 973:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 974:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 975:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 976:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 977:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 978:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 979:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 981:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 982:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 983:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 984:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 985:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 986:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 987:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 988:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 989:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 990:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 991:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 993:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 994:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 995:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 996:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 997:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 998:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 999:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
1000:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
1001:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
1002:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
1003:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
1004:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1005:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1006:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1007:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1008:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1010:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1011:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1012:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1013:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1014:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 702              		.loc 1 1014 0
 703 003c 104B     		ldr	r3, .L76
 704 003e 5C68     		ldr	r4, [r3, #4]
 705              	.LVL66:
1015:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 706              		.loc 1 1015 0
 707 0040 C4F30312 		ubfx	r2, r4, #4, #4
 708              	.LVL67:
1016:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 709              		.loc 1 1016 0
 710 0044 1349     		ldr	r1, .L76+20
 711 0046 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 712              	.LVL68:
1017:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1018:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 713              		.loc 1 1018 0
 714 0048 0268     		ldr	r2, [r0, #0]
 715              	.LVL69:
 716 004a 22FA04F2 		lsr	r2, r2, r4
 717 004e 4260     		str	r2, [r0, #4]
1019:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1020:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 718              		.loc 1 1020 0
 719 0050 5C68     		ldr	r4, [r3, #4]
 720              	.LVL70:
1021:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 721              		.loc 1 1021 0
 722 0052 C4F30224 		ubfx	r4, r4, #8, #3
 723              	.LVL71:
1022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 724              		.loc 1 1022 0
 725 0056 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 726              	.LVL72:
1023:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1024:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 727              		.loc 1 1024 0
 728 0058 22FA04F4 		lsr	r4, r2, r4
 729              	.LVL73:
 730 005c 8460     		str	r4, [r0, #8]
1025:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1026:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 731              		.loc 1 1026 0
 732 005e 5C68     		ldr	r4, [r3, #4]
 733              	.LVL74:
1027:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 734              		.loc 1 1027 0
 735 0060 C4F3C224 		ubfx	r4, r4, #11, #3
 736              	.LVL75:
1028:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 737              		.loc 1 1028 0
 738 0064 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 739              	.LVL76:
1029:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1030:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 740              		.loc 1 1030 0
 741 0066 22FA01F2 		lsr	r2, r2, r1
 742 006a C260     		str	r2, [r0, #12]
1031:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1032:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 743              		.loc 1 1032 0
 744 006c 5B68     		ldr	r3, [r3, #4]
 745              	.LVL77:
1033:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 746              		.loc 1 1033 0
 747 006e C3F38133 		ubfx	r3, r3, #14, #2
 748              	.LVL78:
1034:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 749              		.loc 1 1034 0
 750 0072 0949     		ldr	r1, .L76+24
 751              	.LVL79:
 752 0074 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 753              	.LVL80:
1035:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1036:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 754              		.loc 1 1036 0
 755 0076 B2FBF3F2 		udiv	r2, r2, r3
 756 007a 0261     		str	r2, [r0, #16]
 757 007c 10BD     		pop	{r4, pc}
 758              	.L77:
 759 007e 00BF     		.align	2
 760              	.L76:
 761 0080 00100240 		.word	1073876992
 762 0084 00127A00 		.word	8000000
 763 0088 001BB700 		.word	12000000
 764 008c 00093D00 		.word	4000000
 765 0090 808D5B00 		.word	6000000
 766 0094 00000000 		.word	.LANCHOR0
 767 0098 00000000 		.word	.LANCHOR1
 768              		.cfi_endproc
 769              	.LFE75:
 771              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 772              		.align	1
 773              		.global	RCC_AHBPeriphClockCmd
 774              		.thumb
 775              		.thumb_func
 777              	RCC_AHBPeriphClockCmd:
 778              	.LFB76:
1037:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1038:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1039:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1040:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1041:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1042:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1043:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1044:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1045:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1046:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1047:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1048:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1049:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1050:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1051:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1053:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1054:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1055:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1056:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1057:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1058:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1059:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1060:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1061:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1062:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1063:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1064:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1065:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1066:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1068:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1071:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 779              		.loc 1 1071 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784              	.LVL81:
 785 0000 044B     		ldr	r3, .L82
1072:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1073:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1074:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1075:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1076:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1077:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1078:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 786              		.loc 1 1078 0
 787 0002 5A69     		ldr	r2, [r3, #20]
1076:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 788              		.loc 1 1076 0
 789 0004 09B1     		cbz	r1, .L79
 790              		.loc 1 1078 0
 791 0006 1043     		orrs	r0, r0, r2
 792              	.LVL82:
 793 0008 01E0     		b	.L81
 794              	.LVL83:
 795              	.L79:
1079:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1080:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1081:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1082:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 796              		.loc 1 1082 0
 797 000a 22EA0000 		bic	r0, r2, r0
 798              	.LVL84:
 799              	.L81:
 800 000e 5861     		str	r0, [r3, #20]
 801 0010 7047     		bx	lr
 802              	.L83:
 803 0012 00BF     		.align	2
 804              	.L82:
 805 0014 00100240 		.word	1073876992
 806              		.cfi_endproc
 807              	.LFE76:
 809              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 810              		.align	1
 811              		.global	RCC_APB2PeriphClockCmd
 812              		.thumb
 813              		.thumb_func
 815              	RCC_APB2PeriphClockCmd:
 816              	.LFB77:
1083:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1084:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1085:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1086:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1087:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1088:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1089:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1090:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1091:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1092:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1093:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1094:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1095:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1096:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1097:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1098:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1099:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 817              		.loc 1 1102 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL85:
 823 0000 044B     		ldr	r3, .L88
1103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 824              		.loc 1 1108 0
 825 0002 9A69     		ldr	r2, [r3, #24]
1106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 826              		.loc 1 1106 0
 827 0004 09B1     		cbz	r1, .L85
 828              		.loc 1 1108 0
 829 0006 1043     		orrs	r0, r0, r2
 830              	.LVL86:
 831 0008 01E0     		b	.L87
 832              	.LVL87:
 833              	.L85:
1109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 834              		.loc 1 1112 0
 835 000a 22EA0000 		bic	r0, r2, r0
 836              	.LVL88:
 837              	.L87:
 838 000e 9861     		str	r0, [r3, #24]
 839 0010 7047     		bx	lr
 840              	.L89:
 841 0012 00BF     		.align	2
 842              	.L88:
 843 0014 00100240 		.word	1073876992
 844              		.cfi_endproc
 845              	.LFE77:
 847              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 848              		.align	1
 849              		.global	RCC_APB1PeriphClockCmd
 850              		.thumb
 851              		.thumb_func
 853              	RCC_APB1PeriphClockCmd:
 854              	.LFB78:
1113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 855              		.loc 1 1133 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860              	.LVL89:
 861 0000 044B     		ldr	r3, .L94
1134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 862              		.loc 1 1139 0
 863 0002 DA69     		ldr	r2, [r3, #28]
1137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 864              		.loc 1 1137 0
 865 0004 09B1     		cbz	r1, .L91
 866              		.loc 1 1139 0
 867 0006 1043     		orrs	r0, r0, r2
 868              	.LVL90:
 869 0008 01E0     		b	.L93
 870              	.LVL91:
 871              	.L91:
1140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 872              		.loc 1 1143 0
 873 000a 22EA0000 		bic	r0, r2, r0
 874              	.LVL92:
 875              	.L93:
 876 000e D861     		str	r0, [r3, #28]
 877 0010 7047     		bx	lr
 878              	.L95:
 879 0012 00BF     		.align	2
 880              	.L94:
 881 0014 00100240 		.word	1073876992
 882              		.cfi_endproc
 883              	.LFE78:
 885              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 886              		.align	1
 887              		.global	RCC_APB2PeriphResetCmd
 888              		.thumb
 889              		.thumb_func
 891              	RCC_APB2PeriphResetCmd:
 892              	.LFB79:
1144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 893              		.loc 1 1192 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898              	.LVL93:
 899 0000 044B     		ldr	r3, .L100
1193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 900              		.loc 1 1198 0
 901 0002 DA68     		ldr	r2, [r3, #12]
1196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 902              		.loc 1 1196 0
 903 0004 09B1     		cbz	r1, .L97
 904              		.loc 1 1198 0
 905 0006 1043     		orrs	r0, r0, r2
 906              	.LVL94:
 907 0008 01E0     		b	.L99
 908              	.LVL95:
 909              	.L97:
1199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 910              		.loc 1 1202 0
 911 000a 22EA0000 		bic	r0, r2, r0
 912              	.LVL96:
 913              	.L99:
 914 000e D860     		str	r0, [r3, #12]
 915 0010 7047     		bx	lr
 916              	.L101:
 917 0012 00BF     		.align	2
 918              	.L100:
 919 0014 00100240 		.word	1073876992
 920              		.cfi_endproc
 921              	.LFE79:
 923              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 924              		.align	1
 925              		.global	RCC_APB1PeriphResetCmd
 926              		.thumb
 927              		.thumb_func
 929              	RCC_APB1PeriphResetCmd:
 930              	.LFB80:
1203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 931              		.loc 1 1223 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936              	.LVL97:
 937 0000 044B     		ldr	r3, .L106
1224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 938              		.loc 1 1229 0
 939 0002 1A69     		ldr	r2, [r3, #16]
1227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 940              		.loc 1 1227 0
 941 0004 09B1     		cbz	r1, .L103
 942              		.loc 1 1229 0
 943 0006 1043     		orrs	r0, r0, r2
 944              	.LVL98:
 945 0008 01E0     		b	.L105
 946              	.LVL99:
 947              	.L103:
1230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 948              		.loc 1 1233 0
 949 000a 22EA0000 		bic	r0, r2, r0
 950              	.LVL100:
 951              	.L105:
 952 000e 1861     		str	r0, [r3, #16]
 953 0010 7047     		bx	lr
 954              	.L107:
 955 0012 00BF     		.align	2
 956              	.L106:
 957 0014 00100240 		.word	1073876992
 958              		.cfi_endproc
 959              	.LFE80:
 961              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 962              		.align	1
 963              		.global	RCC_BackupResetCmd
 964              		.thumb
 965              		.thumb_func
 967              	RCC_BackupResetCmd:
 968              	.LFB81:
1234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 969              		.loc 1 1244 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974              	.LVL101:
1245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 975              		.loc 1 1247 0
 976 0000 014B     		ldr	r3, .L109
 977 0002 1860     		str	r0, [r3, #0]
 978 0004 7047     		bx	lr
 979              	.L110:
 980 0006 00BF     		.align	2
 981              	.L109:
 982 0008 40044242 		.word	1111622720
 983              		.cfi_endproc
 984              	.LFE81:
 986              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 987              		.align	1
 988              		.global	RCC_ClockSecuritySystemCmd
 989              		.thumb
 990              		.thumb_func
 992              	RCC_ClockSecuritySystemCmd:
 993              	.LFB82:
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 994              		.loc 1 1257 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999              	.LVL102:
1258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1000              		.loc 1 1260 0
 1001 0000 014B     		ldr	r3, .L112
 1002 0002 1860     		str	r0, [r3, #0]
 1003 0004 7047     		bx	lr
 1004              	.L113:
 1005 0006 00BF     		.align	2
 1006              	.L112:
 1007 0008 4C004242 		.word	1111621708
 1008              		.cfi_endproc
 1009              	.LFE82:
 1011              		.section	.text.RCC_MCOConfig,"ax",%progbits
 1012              		.align	1
 1013              		.global	RCC_MCOConfig
 1014              		.thumb
 1015              		.thumb_func
 1017              	RCC_MCOConfig:
 1018              	.LFB83:
1261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1019              		.loc 1 1289 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024              	.LVL103:
1290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1025              		.loc 1 1294 0
 1026 0000 014B     		ldr	r3, .L115
 1027 0002 1870     		strb	r0, [r3, #0]
 1028 0004 7047     		bx	lr
 1029              	.L116:
 1030 0006 00BF     		.align	2
 1031              	.L115:
 1032 0008 07100240 		.word	1073876999
 1033              		.cfi_endproc
 1034              	.LFE83:
 1036              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1037              		.align	1
 1038              		.global	RCC_GetFlagStatus
 1039              		.thumb
 1040              		.thumb_func
 1042              	RCC_GetFlagStatus:
 1043              	.LFB84:
1295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1044              		.loc 1 1333 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              		@ link register save eliminated.
 1049              	.LVL104:
 1050              	.LVL105:
1334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1051              		.loc 1 1341 0
 1052 0000 4309     		lsrs	r3, r0, #5
 1053              	.LVL106:
1342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1054              		.loc 1 1342 0
 1055 0002 012B     		cmp	r3, #1
 1056 0004 074A     		ldr	r2, .L121
 1057 0006 01D1     		bne	.L118
1343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1058              		.loc 1 1344 0
 1059 0008 1368     		ldr	r3, [r2, #0]
 1060              	.LVL107:
 1061 000a 03E0     		b	.L119
 1062              	.LVL108:
 1063              	.L118:
1345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1064              		.loc 1 1346 0
 1065 000c 022B     		cmp	r3, #2
1347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1066              		.loc 1 1348 0
 1067 000e 0CBF     		ite	eq
 1068 0010 136A     		ldreq	r3, [r2, #32]
 1069              	.LVL109:
1349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1070              		.loc 1 1352 0
 1071 0012 536A     		ldrne	r3, [r2, #36]
 1072              	.LVL110:
 1073              	.L119:
1353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
1357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1074              		.loc 1 1357 0
 1075 0014 00F01F00 		and	r0, r0, #31
 1076              	.LVL111:
 1077 0018 23FA00F1 		lsr	r1, r3, r0
1358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
1368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1078              		.loc 1 1368 0
 1079 001c 01F00100 		and	r0, r1, #1
 1080 0020 7047     		bx	lr
 1081              	.L122:
 1082 0022 00BF     		.align	2
 1083              	.L121:
 1084 0024 00100240 		.word	1073876992
 1085              		.cfi_endproc
 1086              	.LFE84:
 1088              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 1089              		.align	1
 1090              		.global	RCC_WaitForHSEStartUp
 1091              		.thumb
 1092              		.thumb_func
 1094              	RCC_WaitForHSEStartUp:
 1095              	.LFB58:
 311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1096              		.loc 1 311 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100 0000 07B5     		push	{r0, r1, r2, lr}
 1101              	.LCFI1:
 1102              		.cfi_def_cfa_offset 16
 1103              		.cfi_offset 0, -16
 1104              		.cfi_offset 1, -12
 1105              		.cfi_offset 2, -8
 1106              		.cfi_offset 14, -4
 312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1107              		.loc 1 312 0
 1108 0002 0023     		movs	r3, #0
 1109 0004 0193     		str	r3, [sp, #4]
 1110              	.LVL112:
 1111              	.L125:
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1112              		.loc 1 319 0 discriminator 1
 1113 0006 3120     		movs	r0, #49
 1114 0008 FFF7FEFF 		bl	RCC_GetFlagStatus
 1115              	.LVL113:
 320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1116              		.loc 1 320 0 discriminator 1
 1117 000c 0199     		ldr	r1, [sp, #4]
 1118 000e 4A1C     		adds	r2, r1, #1
 1119              	.LVL114:
 1120 0010 0192     		str	r2, [sp, #4]
 1121              	.LVL115:
 321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 1122              		.loc 1 321 0 discriminator 1
 1123 0012 019B     		ldr	r3, [sp, #4]
 1124 0014 B3F5A06F 		cmp	r3, #1280
 1125 0018 01D0     		beq	.L124
 1126 001a 0028     		cmp	r0, #0
 1127 001c F3D0     		beq	.L125
 1128              	.L124:
 323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 1129              		.loc 1 323 0
 1130 001e 3120     		movs	r0, #49
 1131              	.LVL116:
 1132 0020 FFF7FEFF 		bl	RCC_GetFlagStatus
 1133              	.LVL117:
 332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 1134              		.loc 1 332 0
 1135 0024 0030     		adds	r0, r0, #0
 1136              	.LVL118:
 1137 0026 18BF     		it	ne
 1138 0028 0120     		movne	r0, #1
 1139 002a 0EBD     		pop	{r1, r2, r3, pc}
 1140              		.cfi_endproc
 1141              	.LFE58:
 1143              		.section	.text.RCC_ClearFlag,"ax",%progbits
 1144              		.align	1
 1145              		.global	RCC_ClearFlag
 1146              		.thumb
 1147              		.thumb_func
 1149              	RCC_ClearFlag:
 1150              	.LFB85:
1369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1151              		.loc 1 1378 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155              		@ link register save eliminated.
1379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1156              		.loc 1 1380 0
 1157 0000 024B     		ldr	r3, .L134
 1158 0002 5A6A     		ldr	r2, [r3, #36]
 1159 0004 42F08070 		orr	r0, r2, #16777216
 1160 0008 5862     		str	r0, [r3, #36]
 1161 000a 7047     		bx	lr
 1162              	.L135:
 1163              		.align	2
 1164              	.L134:
 1165 000c 00100240 		.word	1073876992
 1166              		.cfi_endproc
 1167              	.LFE85:
 1169              		.section	.text.RCC_GetITStatus,"ax",%progbits
 1170              		.align	1
 1171              		.global	RCC_GetITStatus
 1172              		.thumb
 1173              		.thumb_func
 1175              	RCC_GetITStatus:
 1176              	.LFB86:
1381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1177              		.loc 1 1409 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182              	.LVL119:
 1183              	.LVL120:
1410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1184              		.loc 1 1415 0
 1185 0000 034B     		ldr	r3, .L137
 1186 0002 9968     		ldr	r1, [r3, #8]
 1187              	.LVL121:
 1188 0004 0842     		tst	r0, r1
1416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
1426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1189              		.loc 1 1426 0
 1190 0006 0CBF     		ite	eq
 1191 0008 0020     		moveq	r0, #0
 1192 000a 0120     		movne	r0, #1
 1193              	.LVL122:
 1194 000c 7047     		bx	lr
 1195              	.L138:
 1196 000e 00BF     		.align	2
 1197              	.L137:
 1198 0010 00100240 		.word	1073876992
 1199              		.cfi_endproc
 1200              	.LFE86:
 1202              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 1203              		.align	1
 1204              		.global	RCC_ClearITPendingBit
 1205              		.thumb
 1206              		.thumb_func
 1208              	RCC_ClearITPendingBit:
 1209              	.LFB87:
1427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1210              		.loc 1 1455 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215              	.LVL123:
1456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1216              		.loc 1 1461 0
 1217 0000 014B     		ldr	r3, .L140
 1218 0002 1870     		strb	r0, [r3, #0]
 1219 0004 7047     		bx	lr
 1220              	.L141:
 1221 0006 00BF     		.align	2
 1222              	.L140:
 1223 0008 0A100240 		.word	1073877002
 1224              		.cfi_endproc
 1225              	.LFE87:
 1227              		.section	.data.ADCPrescTable,"aw",%progbits
 1228              		.set	.LANCHOR1,. + 0
 1231              	ADCPrescTable:
 1232 0000 02       		.byte	2
 1233 0001 04       		.byte	4
 1234 0002 06       		.byte	6
 1235 0003 08       		.byte	8
 1236              		.section	.data.APBAHBPrescTable,"aw",%progbits
 1237              		.set	.LANCHOR0,. + 0
 1240              	APBAHBPrescTable:
 1241 0000 00       		.byte	0
 1242 0001 00       		.byte	0
 1243 0002 00       		.byte	0
 1244 0003 00       		.byte	0
 1245 0004 01       		.byte	1
 1246 0005 02       		.byte	2
 1247 0006 03       		.byte	3
 1248 0007 04       		.byte	4
 1249 0008 01       		.byte	1
 1250 0009 02       		.byte	2
 1251 000a 03       		.byte	3
 1252 000b 04       		.byte	4
 1253 000c 06       		.byte	6
 1254 000d 07       		.byte	7
 1255 000e 08       		.byte	8
 1256 000f 09       		.byte	9
 1257              		.text
 1258              	.Letext0:
 1259              		.file 2 "c:\\devz\\arm\\bleeding-edge\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 1260              		.file 3 "./lib/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 1261              		.file 4 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 1262              		.file 5 "./lib/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
  R:\TEMP\ccV2xpbh.s:19     .text.RCC_DeInit:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:24     .text.RCC_DeInit:0000000000000000 RCC_DeInit
  R:\TEMP\ccV2xpbh.s:62     .text.RCC_DeInit:0000000000000038 $d
  R:\TEMP\ccV2xpbh.s:68     .text.RCC_HSEConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:73     .text.RCC_HSEConfig:0000000000000000 RCC_HSEConfig
  R:\TEMP\ccV2xpbh.s:114    .text.RCC_HSEConfig:0000000000000030 $d
  R:\TEMP\ccV2xpbh.s:119    .text.RCC_AdjustHSICalibrationValue:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:124    .text.RCC_AdjustHSICalibrationValue:0000000000000000 RCC_AdjustHSICalibrationValue
  R:\TEMP\ccV2xpbh.s:149    .text.RCC_AdjustHSICalibrationValue:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:154    .text.RCC_HSICmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:159    .text.RCC_HSICmd:0000000000000000 RCC_HSICmd
  R:\TEMP\ccV2xpbh.s:174    .text.RCC_HSICmd:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:179    .text.RCC_PLLConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:184    .text.RCC_PLLConfig:0000000000000000 RCC_PLLConfig
  R:\TEMP\ccV2xpbh.s:211    .text.RCC_PLLConfig:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:216    .text.RCC_PLLCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:221    .text.RCC_PLLCmd:0000000000000000 RCC_PLLCmd
  R:\TEMP\ccV2xpbh.s:236    .text.RCC_PLLCmd:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:241    .text.RCC_SYSCLKConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:246    .text.RCC_SYSCLKConfig:0000000000000000 RCC_SYSCLKConfig
  R:\TEMP\ccV2xpbh.s:271    .text.RCC_SYSCLKConfig:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:276    .text.RCC_GetSYSCLKSource:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:281    .text.RCC_GetSYSCLKSource:0000000000000000 RCC_GetSYSCLKSource
  R:\TEMP\ccV2xpbh.s:297    .text.RCC_GetSYSCLKSource:000000000000000c $d
  R:\TEMP\ccV2xpbh.s:302    .text.RCC_HCLKConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:307    .text.RCC_HCLKConfig:0000000000000000 RCC_HCLKConfig
  R:\TEMP\ccV2xpbh.s:332    .text.RCC_HCLKConfig:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:337    .text.RCC_PCLK1Config:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:342    .text.RCC_PCLK1Config:0000000000000000 RCC_PCLK1Config
  R:\TEMP\ccV2xpbh.s:367    .text.RCC_PCLK1Config:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:372    .text.RCC_PCLK2Config:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:377    .text.RCC_PCLK2Config:0000000000000000 RCC_PCLK2Config
  R:\TEMP\ccV2xpbh.s:402    .text.RCC_PCLK2Config:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:407    .text.RCC_ITConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:412    .text.RCC_ITConfig:0000000000000000 RCC_ITConfig
  R:\TEMP\ccV2xpbh.s:440    .text.RCC_ITConfig:0000000000000014 $d
  R:\TEMP\ccV2xpbh.s:445    .text.RCC_USBCLKConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:450    .text.RCC_USBCLKConfig:0000000000000000 RCC_USBCLKConfig
  R:\TEMP\ccV2xpbh.s:465    .text.RCC_USBCLKConfig:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:470    .text.RCC_ADCCLKConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:475    .text.RCC_ADCCLKConfig:0000000000000000 RCC_ADCCLKConfig
  R:\TEMP\ccV2xpbh.s:500    .text.RCC_ADCCLKConfig:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:505    .text.RCC_LSEConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:510    .text.RCC_LSEConfig:0000000000000000 RCC_LSEConfig
  R:\TEMP\ccV2xpbh.s:547    .text.RCC_LSEConfig:000000000000001c $d
  R:\TEMP\ccV2xpbh.s:552    .text.RCC_LSICmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:557    .text.RCC_LSICmd:0000000000000000 RCC_LSICmd
  R:\TEMP\ccV2xpbh.s:572    .text.RCC_LSICmd:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:577    .text.RCC_RTCCLKConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:582    .text.RCC_RTCCLKConfig:0000000000000000 RCC_RTCCLKConfig
  R:\TEMP\ccV2xpbh.s:600    .text.RCC_RTCCLKConfig:000000000000000c $d
  R:\TEMP\ccV2xpbh.s:605    .text.RCC_RTCCLKCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:610    .text.RCC_RTCCLKCmd:0000000000000000 RCC_RTCCLKCmd
  R:\TEMP\ccV2xpbh.s:625    .text.RCC_RTCCLKCmd:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:630    .text.RCC_GetClocksFreq:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:635    .text.RCC_GetClocksFreq:0000000000000000 RCC_GetClocksFreq
  R:\TEMP\ccV2xpbh.s:761    .text.RCC_GetClocksFreq:0000000000000080 $d
  R:\TEMP\ccV2xpbh.s:772    .text.RCC_AHBPeriphClockCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:777    .text.RCC_AHBPeriphClockCmd:0000000000000000 RCC_AHBPeriphClockCmd
  R:\TEMP\ccV2xpbh.s:805    .text.RCC_AHBPeriphClockCmd:0000000000000014 $d
  R:\TEMP\ccV2xpbh.s:810    .text.RCC_APB2PeriphClockCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:815    .text.RCC_APB2PeriphClockCmd:0000000000000000 RCC_APB2PeriphClockCmd
  R:\TEMP\ccV2xpbh.s:843    .text.RCC_APB2PeriphClockCmd:0000000000000014 $d
  R:\TEMP\ccV2xpbh.s:848    .text.RCC_APB1PeriphClockCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:853    .text.RCC_APB1PeriphClockCmd:0000000000000000 RCC_APB1PeriphClockCmd
  R:\TEMP\ccV2xpbh.s:881    .text.RCC_APB1PeriphClockCmd:0000000000000014 $d
  R:\TEMP\ccV2xpbh.s:886    .text.RCC_APB2PeriphResetCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:891    .text.RCC_APB2PeriphResetCmd:0000000000000000 RCC_APB2PeriphResetCmd
  R:\TEMP\ccV2xpbh.s:919    .text.RCC_APB2PeriphResetCmd:0000000000000014 $d
  R:\TEMP\ccV2xpbh.s:924    .text.RCC_APB1PeriphResetCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:929    .text.RCC_APB1PeriphResetCmd:0000000000000000 RCC_APB1PeriphResetCmd
  R:\TEMP\ccV2xpbh.s:957    .text.RCC_APB1PeriphResetCmd:0000000000000014 $d
  R:\TEMP\ccV2xpbh.s:962    .text.RCC_BackupResetCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:967    .text.RCC_BackupResetCmd:0000000000000000 RCC_BackupResetCmd
  R:\TEMP\ccV2xpbh.s:982    .text.RCC_BackupResetCmd:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:987    .text.RCC_ClockSecuritySystemCmd:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:992    .text.RCC_ClockSecuritySystemCmd:0000000000000000 RCC_ClockSecuritySystemCmd
  R:\TEMP\ccV2xpbh.s:1007   .text.RCC_ClockSecuritySystemCmd:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:1012   .text.RCC_MCOConfig:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:1017   .text.RCC_MCOConfig:0000000000000000 RCC_MCOConfig
  R:\TEMP\ccV2xpbh.s:1032   .text.RCC_MCOConfig:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:1037   .text.RCC_GetFlagStatus:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:1042   .text.RCC_GetFlagStatus:0000000000000000 RCC_GetFlagStatus
  R:\TEMP\ccV2xpbh.s:1084   .text.RCC_GetFlagStatus:0000000000000024 $d
  R:\TEMP\ccV2xpbh.s:1089   .text.RCC_WaitForHSEStartUp:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:1094   .text.RCC_WaitForHSEStartUp:0000000000000000 RCC_WaitForHSEStartUp
  R:\TEMP\ccV2xpbh.s:1144   .text.RCC_ClearFlag:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:1149   .text.RCC_ClearFlag:0000000000000000 RCC_ClearFlag
  R:\TEMP\ccV2xpbh.s:1165   .text.RCC_ClearFlag:000000000000000c $d
  R:\TEMP\ccV2xpbh.s:1170   .text.RCC_GetITStatus:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:1175   .text.RCC_GetITStatus:0000000000000000 RCC_GetITStatus
  R:\TEMP\ccV2xpbh.s:1198   .text.RCC_GetITStatus:0000000000000010 $d
  R:\TEMP\ccV2xpbh.s:1203   .text.RCC_ClearITPendingBit:0000000000000000 $t
  R:\TEMP\ccV2xpbh.s:1208   .text.RCC_ClearITPendingBit:0000000000000000 RCC_ClearITPendingBit
  R:\TEMP\ccV2xpbh.s:1223   .text.RCC_ClearITPendingBit:0000000000000008 $d
  R:\TEMP\ccV2xpbh.s:1231   .data.ADCPrescTable:0000000000000000 ADCPrescTable
  R:\TEMP\ccV2xpbh.s:1240   .data.APBAHBPrescTable:0000000000000000 APBAHBPrescTable
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
