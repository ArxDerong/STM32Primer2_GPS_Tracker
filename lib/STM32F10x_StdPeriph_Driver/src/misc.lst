   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"misc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  19              		.align	1
  20              		.global	NVIC_PriorityGroupConfig
  21              		.thumb
  22              		.thumb_func
  24              	NVIC_PriorityGroupConfig:
  25              	.LFB56:
  26              		.file 1 "lib/STM32F10x_StdPeriph_Driver/src/misc.c"
   1:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
   2:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @version V3.6.1
   6:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @date    05-March-2012
   7:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  10:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @attention
  11:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *
  12:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  13:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *
  14:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  15:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * You may not use this file except in compliance with the License.
  16:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * You may obtain a copy of the License at:
  17:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *
  18:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  19:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *
  20:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * Unless required by applicable law or agreed to in writing, software 
  21:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  22:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * See the License for the specific language governing permissions and
  24:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * limitations under the License.
  25:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *
  26:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  27:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  28:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  29:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  30:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  31:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  32:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  34:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  35:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  36:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  37:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  38:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  39:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  40:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  41:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_TypesDefinitions
  42:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  43:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  44:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  45:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
  46:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @}
  47:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */ 
  48:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  49:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Defines
  50:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  51:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  52:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  53:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  54:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
  55:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @}
  56:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  57:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  58:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Macros
  59:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  60:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  61:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  62:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
  63:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @}
  64:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  65:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  66:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Variables
  67:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  68:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  69:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  70:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
  71:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @}
  72:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  73:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  74:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_FunctionPrototypes
  75:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  76:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  77:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  78:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
  79:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @}
  80:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  81:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  82:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  83:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @{
  84:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
  85:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
  86:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
  87:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  88:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  89:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
  90:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  91:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
  92:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
  93:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
  94:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
  95:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
  96:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
  97:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
  98:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
  99:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 100:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @retval None
 101:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
 102:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 103:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** {
  27              		.loc 1 103 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 104:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 105:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 106:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   
 107:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 108:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  33              		.loc 1 108 0
  34 0000 40F0BF60 		orr	r0, r0, #100139008
  35              	.LVL1:
  36 0004 40F40031 		orr	r1, r0, #131072
  37 0008 014B     		ldr	r3, .L2
  38 000a D960     		str	r1, [r3, #12]
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e 00BF     		.align	2
  42              	.L2:
  43 0010 00ED00E0 		.word	-536810240
  44              		.cfi_endproc
  45              	.LFE56:
  47              		.section	.text.NVIC_Init,"ax",%progbits
  48              		.align	1
  49              		.global	NVIC_Init
  50              		.thumb
  51              		.thumb_func
  53              	NVIC_Init:
  54              	.LFB57:
 109:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** }
 110:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
 111:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
 112:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 113:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 114:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 115:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 116:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @retval None
 117:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
 118:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 119:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** {
  55              		.loc 1 119 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0000 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65              	.LVL3:
 120:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 121:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   
 122:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 123:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 124:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 125:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 126:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     
 127:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  66              		.loc 1 127 0
  67 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  68 0004 03B3     		cbz	r3, .L5
 128:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   {
 129:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 130:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  69              		.loc 1 130 0
  70 0006 164C     		ldr	r4, .L9
  71 0008 E168     		ldr	r1, [r4, #12]
  72 000a CB43     		mvns	r3, r1
  73 000c C3F30224 		ubfx	r4, r3, #8, #3
  74              	.LVL4:
 131:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
  75              		.loc 1 131 0
  76 0010 C4F10402 		rsb	r2, r4, #4
  77              	.LVL5:
 132:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 133:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
 134:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  78              		.loc 1 134 0
  79 0014 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
  80 0016 01FA02F1 		lsl	r1, r1, r2
  81              	.LVL6:
 132:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
  82              		.loc 1 132 0
  83 001a 0F22     		movs	r2, #15
  84              	.LVL7:
  85 001c 22FA04F2 		lsr	r2, r2, r4
  86              	.LVL8:
 135:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
  87              		.loc 1 135 0
  88 0020 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
  89              	.LVL9:
  90 0022 2240     		ands	r2, r2, r4
  91              	.LVL10:
  92 0024 0A43     		orrs	r2, r2, r1
  93              	.LVL11:
 136:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 137:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****         
 138:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
  94              		.loc 1 138 0
  95 0026 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
  96              	.LVL12:
 136:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
  97              		.loc 1 136 0
  98 0028 1101     		lsls	r1, r2, #4
  99              	.LVL13:
 100              		.loc 1 138 0
 101 002a CAB2     		uxtb	r2, r1
 102 002c 03F16043 		add	r3, r3, #-536870912
 103 0030 03F56141 		add	r1, r3, #57600
 104              	.LVL14:
 105 0034 81F80023 		strb	r2, [r1, #768]
 139:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     
 140:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 141:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 106              		.loc 1 141 0
 107 0038 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 108              	.LVL15:
 109 003a 4109     		lsrs	r1, r0, #5
 142:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 110              		.loc 1 142 0
 111 003c 00F01F03 		and	r3, r0, #31
 112 0040 0122     		movs	r2, #1
 113 0042 02FA03F0 		lsl	r0, r2, r3
 114 0046 07E0     		b	.L7
 115              	.LVL16:
 116              	.L5:
 143:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   }
 144:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   else
 145:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   {
 146:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 147:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 117              		.loc 1 147 0
 118 0048 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 119              	.LVL17:
 120 004a 4109     		lsrs	r1, r0, #5
 148:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 121              		.loc 1 148 0
 122 004c 00F01F03 		and	r3, r0, #31
 123 0050 0122     		movs	r2, #1
 124 0052 02FA03F0 		lsl	r0, r2, r3
 147:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 125              		.loc 1 147 0
 126 0056 2031     		adds	r1, r1, #32
 127              	.LVL18:
 128              	.L7:
 129 0058 024B     		ldr	r3, .L9+4
 130 005a 43F82100 		str	r0, [r3, r1, lsl #2]
 131 005e 10BD     		pop	{r4, pc}
 132              	.L10:
 133              		.align	2
 134              	.L9:
 135 0060 00ED00E0 		.word	-536810240
 136 0064 00E100E0 		.word	-536813312
 137              		.cfi_endproc
 138              	.LFE57:
 140              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 141              		.align	1
 142              		.global	NVIC_SetVectorTable
 143              		.thumb
 144              		.thumb_func
 146              	NVIC_SetVectorTable:
 147              	.LFB58:
 149:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   }
 150:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** }
 151:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
 152:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
 153:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 154:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 155:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 156:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM
 157:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH
 158:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple 
 159:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *         of 0x200.
 160:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @retval None
 161:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
 162:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 163:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** { 
 148              		.loc 1 163 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL19:
 164:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 165:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 166:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 167:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****    
 168:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 154              		.loc 1 168 0
 155 0000 21F06041 		bic	r1, r1, #-536870912
 156              	.LVL20:
 157 0004 21F07F02 		bic	r2, r1, #127
 158 0008 1043     		orrs	r0, r0, r2
 159              	.LVL21:
 160 000a 014B     		ldr	r3, .L12
 161 000c 9860     		str	r0, [r3, #8]
 162 000e 7047     		bx	lr
 163              	.L13:
 164              		.align	2
 165              	.L12:
 166 0010 00ED00E0 		.word	-536810240
 167              		.cfi_endproc
 168              	.LFE58:
 170              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 171              		.align	1
 172              		.global	NVIC_SystemLPConfig
 173              		.thumb
 174              		.thumb_func
 176              	NVIC_SystemLPConfig:
 177              	.LFB59:
 169:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** }
 170:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
 171:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
 172:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 173:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 174:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 175:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND
 176:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP
 177:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT
 178:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 179:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @retval None
 180:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
 181:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 182:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** {
 178              		.loc 1 182 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL22:
 184 0000 044B     		ldr	r3, .L18
 183:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 184:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 185:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 186:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   
 187:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 188:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   {
 189:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 185              		.loc 1 189 0
 186 0002 1A69     		ldr	r2, [r3, #16]
 187:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 187              		.loc 1 187 0
 188 0004 09B1     		cbz	r1, .L15
 189              		.loc 1 189 0
 190 0006 1043     		orrs	r0, r0, r2
 191              	.LVL23:
 192 0008 01E0     		b	.L17
 193              	.LVL24:
 194              	.L15:
 190:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   }
 191:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   else
 192:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   {
 193:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 195              		.loc 1 193 0
 196 000a 22EA0000 		bic	r0, r2, r0
 197              	.LVL25:
 198              	.L17:
 199 000e 1861     		str	r0, [r3, #16]
 200 0010 7047     		bx	lr
 201              	.L19:
 202 0012 00BF     		.align	2
 203              	.L18:
 204 0014 00ED00E0 		.word	-536810240
 205              		.cfi_endproc
 206              	.LFE59:
 208              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 209              		.align	1
 210              		.global	SysTick_CLKSourceConfig
 211              		.thumb
 212              		.thumb_func
 214              	SysTick_CLKSourceConfig:
 215              	.LFB60:
 194:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   }
 195:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** }
 196:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** 
 197:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** /**
 198:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 199:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 200:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 201:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 202:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 203:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   * @retval None
 204:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   */
 205:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 206:lib/STM32F10x_StdPeriph_Driver/src/misc.c **** {
 216              		.loc 1 206 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221              	.LVL26:
 207:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 208:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 209:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 222              		.loc 1 209 0
 223 0000 0428     		cmp	r0, #4
 224 0002 044B     		ldr	r3, .L24
 210:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   {
 211:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 225              		.loc 1 211 0
 226 0004 1A68     		ldr	r2, [r3, #0]
 227 0006 0CBF     		ite	eq
 228 0008 42F00402 		orreq	r2, r2, #4
 212:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   }
 213:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   else
 214:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****   {
 215:lib/STM32F10x_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 229              		.loc 1 215 0
 230 000c 22F00402 		bicne	r2, r2, #4
 231 0010 1A60     		str	r2, [r3, #0]
 232 0012 7047     		bx	lr
 233              	.L25:
 234              		.align	2
 235              	.L24:
 236 0014 10E000E0 		.word	-536813552
 237              		.cfi_endproc
 238              	.LFE60:
 240              		.text
 241              	.Letext0:
 242              		.file 2 "c:\\devz\\arm\\launchpad\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 243              		.file 3 "./lib/CMSIS/Include/core_cm3.h"
 244              		.file 4 "./lib/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 245              		.file 5 "./lib/STM32F10x_StdPeriph_Driver/inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
  R:\TEMP\ccnzApkT.s:19     .text.NVIC_PriorityGroupConfig:00000000 $t
  R:\TEMP\ccnzApkT.s:24     .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
  R:\TEMP\ccnzApkT.s:43     .text.NVIC_PriorityGroupConfig:00000010 $d
  R:\TEMP\ccnzApkT.s:48     .text.NVIC_Init:00000000 $t
  R:\TEMP\ccnzApkT.s:53     .text.NVIC_Init:00000000 NVIC_Init
  R:\TEMP\ccnzApkT.s:135    .text.NVIC_Init:00000060 $d
  R:\TEMP\ccnzApkT.s:141    .text.NVIC_SetVectorTable:00000000 $t
  R:\TEMP\ccnzApkT.s:146    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
  R:\TEMP\ccnzApkT.s:166    .text.NVIC_SetVectorTable:00000010 $d
  R:\TEMP\ccnzApkT.s:171    .text.NVIC_SystemLPConfig:00000000 $t
  R:\TEMP\ccnzApkT.s:176    .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
  R:\TEMP\ccnzApkT.s:204    .text.NVIC_SystemLPConfig:00000014 $d
  R:\TEMP\ccnzApkT.s:209    .text.SysTick_CLKSourceConfig:00000000 $t
  R:\TEMP\ccnzApkT.s:214    .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
  R:\TEMP\ccnzApkT.s:236    .text.SysTick_CLKSourceConfig:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
