   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ff_rtc_if.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.rtc_gettime,"ax",%progbits
  19              		.align	1
  20              		.global	rtc_gettime
  21              		.thumb
  22              		.thumb_func
  24              	rtc_gettime:
  25              	.LFB56:
  26              		.file 1 "lib/ff/ff_rtc_if.c"
   1:lib/ff/ff_rtc_if.c **** /********************************************************************************/
   2:lib/ff/ff_rtc_if.c **** /*!
   3:lib/ff/ff_rtc_if.c **** 	@file			ff_rtc_if.c
   4:lib/ff/ff_rtc_if.c **** 	@author         Nemui Trinomius (http://nemuisan.blog.bai.ne.jp)
   5:lib/ff/ff_rtc_if.c ****     @version        1.00
   6:lib/ff/ff_rtc_if.c ****     @date           2012.08.27
   7:lib/ff/ff_rtc_if.c **** 	@brief          FatFs Realtime Clock Section.					@n
   8:lib/ff/ff_rtc_if.c **** 					Hardware Abstraction Layer.
   9:lib/ff/ff_rtc_if.c **** 
  10:lib/ff/ff_rtc_if.c ****     @section HISTORY
  11:lib/ff/ff_rtc_if.c **** 		2012.08.27	V1.00 Start Here.
  12:lib/ff/ff_rtc_if.c **** 
  13:lib/ff/ff_rtc_if.c ****     @section LICENSE
  14:lib/ff/ff_rtc_if.c **** 		BSD License. See Copyright.txt
  15:lib/ff/ff_rtc_if.c **** */
  16:lib/ff/ff_rtc_if.c **** /********************************************************************************/
  17:lib/ff/ff_rtc_if.c **** 
  18:lib/ff/ff_rtc_if.c **** /* Includes ------------------------------------------------------------------*/
  19:lib/ff/ff_rtc_if.c **** #include "ff_rtc_if.h"
  20:lib/ff/ff_rtc_if.c **** 
  21:lib/ff/ff_rtc_if.c **** /* Defines -------------------------------------------------------------------*/
  22:lib/ff/ff_rtc_if.c **** #define USE_STM32RTC
  23:lib/ff/ff_rtc_if.c **** 
  24:lib/ff/ff_rtc_if.c **** /* Variables -----------------------------------------------------------------*/
  25:lib/ff/ff_rtc_if.c **** 
  26:lib/ff/ff_rtc_if.c **** /* Constants -----------------------------------------------------------------*/
  27:lib/ff/ff_rtc_if.c **** 
  28:lib/ff/ff_rtc_if.c **** /* Function prototypes -------------------------------------------------------*/
  29:lib/ff/ff_rtc_if.c **** 
  30:lib/ff/ff_rtc_if.c **** /* Functions -----------------------------------------------------------------*/
  31:lib/ff/ff_rtc_if.c **** 
  32:lib/ff/ff_rtc_if.c **** /**************************************************************************/
  33:lib/ff/ff_rtc_if.c **** /*! 
  34:lib/ff/ff_rtc_if.c ****     @brief  FatFs Realtime Clock Section.
  35:lib/ff/ff_rtc_if.c **** 	@param  RTC : rtc structure
  36:lib/ff/ff_rtc_if.c ****     @retval : 1
  37:lib/ff/ff_rtc_if.c **** */
  38:lib/ff/ff_rtc_if.c **** /**************************************************************************/
  39:lib/ff/ff_rtc_if.c **** int rtc_gettime(FF_RTC *ff_rtc)
  40:lib/ff/ff_rtc_if.c **** {
  27              		.loc 1 40 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8BB0     		sub	sp, sp, #44
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
  43 0004 0746     		mov	r7, r0
  41:lib/ff/ff_rtc_if.c **** 
  42:lib/ff/ff_rtc_if.c **** #ifdef USE_STM32RTC
  43:lib/ff/ff_rtc_if.c **** 	/* See rtc_support.h */
  44:lib/ff/ff_rtc_if.c **** 	rtc = Time_GetCalendarTime();
  44              		.loc 1 44 0
  45 0006 0E4E     		ldr	r6, .L2
  46 0008 6846     		mov	r0, sp
  47              	.LVL1:
  48 000a FFF7FEFF 		bl	Time_GetCalendarTime
  49              	.LVL2:
  50 000e 3446     		mov	r4, r6
  51 0010 6D46     		mov	r5, sp
  52 0012 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  53 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  54 0016 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  55 0018 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  56 001a 2B68     		ldr	r3, [r5, #0]
  57 001c 2360     		str	r3, [r4, #0]
  45:lib/ff/ff_rtc_if.c **** 
  46:lib/ff/ff_rtc_if.c **** 	ff_rtc->sec   = ts_sec;
  58              		.loc 1 46 0
  59 001e 3068     		ldr	r0, [r6, #0]
  60 0020 F871     		strb	r0, [r7, #7]
  47:lib/ff/ff_rtc_if.c **** 	ff_rtc->min   = ts_min;
  61              		.loc 1 47 0
  62 0022 7168     		ldr	r1, [r6, #4]
  63 0024 B971     		strb	r1, [r7, #6]
  48:lib/ff/ff_rtc_if.c **** 	ff_rtc->hour  = ts_hour;
  64              		.loc 1 48 0
  65 0026 B268     		ldr	r2, [r6, #8]
  66 0028 7A71     		strb	r2, [r7, #5]
  49:lib/ff/ff_rtc_if.c **** 	ff_rtc->mday  = ts_mday;
  67              		.loc 1 49 0
  68 002a F368     		ldr	r3, [r6, #12]
  69 002c FB70     		strb	r3, [r7, #3]
  50:lib/ff/ff_rtc_if.c **** 	ff_rtc->month = ts_mon+1;
  70              		.loc 1 50 0
  71 002e 3069     		ldr	r0, [r6, #16]
  72 0030 411C     		adds	r1, r0, #1
  73 0032 B970     		strb	r1, [r7, #2]
  51:lib/ff/ff_rtc_if.c **** 	ff_rtc->year  = ts_year;
  74              		.loc 1 51 0
  75 0034 7269     		ldr	r2, [r6, #20]
  76 0036 3A80     		strh	r2, [r7, #0]	@ movhi
  52:lib/ff/ff_rtc_if.c **** 
  53:lib/ff/ff_rtc_if.c **** #else
  54:lib/ff/ff_rtc_if.c **** 	/* 2011/11/13 22:23:24 */
  55:lib/ff/ff_rtc_if.c **** 	ff_rtc->sec   = 24;
  56:lib/ff/ff_rtc_if.c **** 	ff_rtc->min   = 23;
  57:lib/ff/ff_rtc_if.c **** 	ff_rtc->hour  = 22;
  58:lib/ff/ff_rtc_if.c **** 	ff_rtc->mday  = 13;
  59:lib/ff/ff_rtc_if.c **** 	ff_rtc->month = 11;
  60:lib/ff/ff_rtc_if.c **** 	ff_rtc->year  = 2011;
  61:lib/ff/ff_rtc_if.c **** #endif
  62:lib/ff/ff_rtc_if.c **** 
  63:lib/ff/ff_rtc_if.c **** 	return 1;
  64:lib/ff/ff_rtc_if.c **** }
  77              		.loc 1 64 0
  78 0038 0120     		movs	r0, #1
  79 003a 0BB0     		add	sp, sp, #44
  80 003c F0BD     		pop	{r4, r5, r6, r7, pc}
  81              	.L3:
  82 003e 00BF     		.align	2
  83              	.L2:
  84 0040 00000000 		.word	rtc
  85              		.cfi_endproc
  86              	.LFE56:
  88              		.section	.text.rtc_settime,"ax",%progbits
  89              		.align	1
  90              		.global	rtc_settime
  91              		.thumb
  92              		.thumb_func
  94              	rtc_settime:
  95              	.LFB57:
  65:lib/ff/ff_rtc_if.c **** 
  66:lib/ff/ff_rtc_if.c **** /**************************************************************************/
  67:lib/ff/ff_rtc_if.c **** /*! 
  68:lib/ff/ff_rtc_if.c ****     @brief  FatFs Realtime Clock Section.
  69:lib/ff/ff_rtc_if.c **** 	@param  RTC : rtc structure
  70:lib/ff/ff_rtc_if.c ****     @retval : 1
  71:lib/ff/ff_rtc_if.c **** */
  72:lib/ff/ff_rtc_if.c **** /**************************************************************************/
  73:lib/ff/ff_rtc_if.c **** int rtc_settime(const FF_RTC *ff_rtc)
  74:lib/ff/ff_rtc_if.c **** {
  96              		.loc 1 74 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL3:
 101 0000 70B5     		push	{r4, r5, r6, lr}
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 16
 104              		.cfi_offset 4, -16
 105              		.cfi_offset 5, -12
 106              		.cfi_offset 6, -8
 107              		.cfi_offset 14, -4
 108 0002 86B0     		sub	sp, sp, #24
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 40
  75:lib/ff/ff_rtc_if.c **** 
  76:lib/ff/ff_rtc_if.c **** #ifdef USE_STM32RTC
  77:lib/ff/ff_rtc_if.c **** 	/* See rtc_support.h */
  78:lib/ff/ff_rtc_if.c **** 	ts_sec	= ff_rtc->sec;
 111              		.loc 1 78 0
 112 0004 0D4C     		ldr	r4, .L5
 113 0006 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 114 0008 2360     		str	r3, [r4, #0]
  79:lib/ff/ff_rtc_if.c **** 	ts_min  = ff_rtc->min;
 115              		.loc 1 79 0
 116 000a 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 117 000c 6160     		str	r1, [r4, #4]
  80:lib/ff/ff_rtc_if.c **** 	ts_hour = ff_rtc->hour;
 118              		.loc 1 80 0
 119 000e 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 120 0010 A260     		str	r2, [r4, #8]
  81:lib/ff/ff_rtc_if.c **** 	ts_mday = ff_rtc->mday;
 121              		.loc 1 81 0
 122 0012 C578     		ldrb	r5, [r0, #3]	@ zero_extendqisi2
 123 0014 E560     		str	r5, [r4, #12]
  82:lib/ff/ff_rtc_if.c **** 	ts_mon  = ff_rtc->month-1;
 124              		.loc 1 82 0
 125 0016 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
 126 0018 731E     		subs	r3, r6, #1
 127 001a 2361     		str	r3, [r4, #16]
  83:lib/ff/ff_rtc_if.c **** 	ts_year = ff_rtc->year;
 128              		.loc 1 83 0
 129 001c 0088     		ldrh	r0, [r0, #0]
 130              	.LVL4:
 131 001e 6061     		str	r0, [r4, #20]
  84:lib/ff/ff_rtc_if.c **** 
  85:lib/ff/ff_rtc_if.c **** 	Time_SetCalendarTime(rtc);
 132              		.loc 1 85 0
 133 0020 6D46     		mov	r5, sp
 134 0022 04F11006 		add	r6, r4, #16
 135 0026 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 136 0028 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 137 002a 3168     		ldr	r1, [r6, #0]
 138 002c 2960     		str	r1, [r5, #0]
 139 002e 94E80F00 		ldmia	r4, {r0, r1, r2, r3}
 140 0032 FFF7FEFF 		bl	Time_SetCalendarTime
 141              	.LVL5:
  86:lib/ff/ff_rtc_if.c **** #else
  87:lib/ff/ff_rtc_if.c **** 	/* 2011/11/13 22:23:24 */
  88:lib/ff/ff_rtc_if.c **** 	/* Do nothing */
  89:lib/ff/ff_rtc_if.c **** #endif
  90:lib/ff/ff_rtc_if.c **** 
  91:lib/ff/ff_rtc_if.c **** 	return 1;
  92:lib/ff/ff_rtc_if.c **** }
 142              		.loc 1 92 0
 143 0036 0120     		movs	r0, #1
 144 0038 06B0     		add	sp, sp, #24
 145 003a 70BD     		pop	{r4, r5, r6, pc}
 146              	.L6:
 147              		.align	2
 148              	.L5:
 149 003c 00000000 		.word	rtc
 150              		.cfi_endproc
 151              	.LFE57:
 153              		.text
 154              	.Letext0:
 155              		.file 2 "c:\\devz\\arm\\bleeding-edge\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 156              		.file 3 "c:\\devz\\arm\\bleeding-edge\\bin\\../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-ea
 157              		.file 4 "lib/ff/ff_rtc_if.h"
 158              		.file 5 "./lib/CMSIS/Include/core_cm3.h"
 159              		.file 6 "./inc/rtc_support.h"
DEFINED SYMBOLS
<<<<<<< HEAD
                            *ABS*:0000000000000000 ff_rtc_if.c
  R:\TEMP\ccYiFwjy.s:19     .text.rtc_gettime:0000000000000000 $t
  R:\TEMP\ccYiFwjy.s:24     .text.rtc_gettime:0000000000000000 rtc_gettime
  R:\TEMP\ccYiFwjy.s:84     .text.rtc_gettime:0000000000000040 $d
  R:\TEMP\ccYiFwjy.s:89     .text.rtc_settime:0000000000000000 $t
  R:\TEMP\ccYiFwjy.s:94     .text.rtc_settime:0000000000000000 rtc_settime
  R:\TEMP\ccYiFwjy.s:149    .text.rtc_settime:000000000000003c $d
                     .debug_frame:0000000000000010 $d
=======
                            *ABS*:00000000 ff_rtc_if.c
  R:\TEMP\ccy5byTO.s:19     .text.rtc_gettime:00000000 $t
  R:\TEMP\ccy5byTO.s:24     .text.rtc_gettime:00000000 rtc_gettime
  R:\TEMP\ccy5byTO.s:84     .text.rtc_gettime:00000040 $d
  R:\TEMP\ccy5byTO.s:89     .text.rtc_settime:00000000 $t
  R:\TEMP\ccy5byTO.s:94     .text.rtc_settime:00000000 rtc_settime
  R:\TEMP\ccy5byTO.s:149    .text.rtc_settime:0000003c $d
                     .debug_frame:00000010 $d
>>>>>>> 7820716ed17a15e922f343f0b27ed105efa46fbb

UNDEFINED SYMBOLS
Time_GetCalendarTime
rtc
Time_SetCalendarTime
