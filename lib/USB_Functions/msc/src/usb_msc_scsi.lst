   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usb_msc_scsi.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SCSI_Inquiry_Cmd,"ax",%progbits
  19              		.align	1
  20              		.global	SCSI_Inquiry_Cmd
  21              		.thumb
  22              		.thumb_func
  24              	SCSI_Inquiry_Cmd:
  25              	.LFB57:
  26              		.file 1 "lib/USB_Functions/msc/src/usb_msc_scsi.c"
   1:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /********************************************************************************/
   2:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*!
   3:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 	@file			usb_msc_scsi.c
   4:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 	@author         Nemui Trinomius (http://nemuisan.blog.bai.ne.jp)
   5:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @version        1.00
   6:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @date           2012.01.30
   7:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 	@brief          All processing related to the SCSI commands.
   8:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 					Based On STMicro's Sample Thanks!
   9:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  10:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @section HISTORY
  11:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 		2012.01.30	V1.00	Start Here.
  12:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  13:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @section LICENSE
  14:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 		BSD License. See Copyright.txt
  15:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
  16:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /********************************************************************************/
  17:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  18:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /* Includes ------------------------------------------------------------------*/
  19:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "hw_config.h"
  20:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "usb_msc_scsi.h"
  21:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "usb_msc_mass_mal.h"
  22:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "usb_msc_bot.h"
  23:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "usb_regs.h"
  24:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "usb_msc_memory.h"
  25:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "platform_config.h"
  26:lib/USB_Functions/msc/src/usb_msc_scsi.c **** #include "usb_lib.h"
  27:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  28:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /* Defines -------------------------------------------------------------------*/
  29:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  30:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /* Variables -----------------------------------------------------------------*/
  31:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern uint8_t Bulk_Data_Buff[BULK_MAX_PACKET_SIZE];  /* data buffer*/
  32:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern uint8_t Bot_State;
  33:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern Bulk_Only_CBW CBW;
  34:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern Bulk_Only_CSW CSW;
  35:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern uint32_t Mass_Memory_Size[2];
  36:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern uint32_t Mass_Block_Size[2];
  37:lib/USB_Functions/msc/src/usb_msc_scsi.c **** extern uint32_t Mass_Block_Count[2];
  38:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  39:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /* Constants -----------------------------------------------------------------*/
  40:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  41:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /* Function prototypes -------------------------------------------------------*/
  42:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  43:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /* Functions -----------------------------------------------------------------*/
  44:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  45:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
  46:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
  47:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI Inquiry Command routine.
  48:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
  49:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
  50:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Inquiry_Cmd(uint8_t lun)
  51:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
  27              		.loc 1 51 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  52:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   uint8_t* Inquiry_Data;
  53:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   uint16_t Inquiry_Data_Length;
  54:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  55:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (CBW.CB[1] & 0x01)/*Evpd is set*/
  33              		.loc 1 55 0
  34 0000 064B     		ldr	r3, .L6
  35 0002 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
  36 0004 D207     		lsls	r2, r2, #31
  37 0006 05D4     		bmi	.L3
  38              	.LVL1:
  56:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
  57:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Inquiry_Data = Page00_Inquiry_Data;
  58:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Inquiry_Data_Length = 5;
  59:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
  60:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else
  61:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
  62:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  63:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if ( lun == 0)
  64:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
  65:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Inquiry_Data = Standard_Inquiry_Data;
  66:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
  67:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     else
  68:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {	/* Invalid state! Nemuisan said */
  69:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Inquiry_Data = Standard_Inquiry_Data;
  70:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
  71:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  72:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if (CBW.CB[4] <= STANDARD_INQUIRY_DATA_LEN)
  39              		.loc 1 72 0
  40 0008 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
  73:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Inquiry_Data_Length = CBW.CB[4];
  41              		.loc 1 73 0
  42 000a 2429     		cmp	r1, #36
  43 000c 28BF     		it	cs
  44 000e 2421     		movcs	r1, #36
  45 0010 0348     		ldr	r0, .L6+4
  46              	.LVL2:
  47 0012 01E0     		b	.L2
  48              	.LVL3:
  49              	.L3:
  58:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
  50              		.loc 1 58 0
  51 0014 0521     		movs	r1, #5
  57:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Inquiry_Data_Length = 5;
  52              		.loc 1 57 0
  53 0016 0348     		ldr	r0, .L6+8
  54              	.LVL4:
  55              	.L2:
  74:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     else
  75:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Inquiry_Data_Length = STANDARD_INQUIRY_DATA_LEN;
  76:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  77:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
  78:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(Inquiry_Data, Inquiry_Data_Length);
  79:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
  56              		.loc 1 79 0
  78:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
  57              		.loc 1 78 0
  58 0018 FFF7FEBF 		b	Transfer_Data_Request
  59              	.LVL5:
  60              	.L7:
  61              		.align	2
  62              	.L6:
  63 001c 00000000 		.word	CBW
  64 0020 00000000 		.word	Standard_Inquiry_Data
  65 0024 00000000 		.word	Page00_Inquiry_Data
  66              		.cfi_endproc
  67              	.LFE57:
  69              		.section	.text.SCSI_ReadFormatCapacity_Cmd,"ax",%progbits
  70              		.align	1
  71              		.global	SCSI_ReadFormatCapacity_Cmd
  72              		.thumb
  73              		.thumb_func
  75              	SCSI_ReadFormatCapacity_Cmd:
  76              	.LFB58:
  80:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  81:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
  82:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
  83:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI ReadFormatCapacity Command routine.
  84:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
  85:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
  86:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_ReadFormatCapacity_Cmd(uint8_t lun)
  87:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
  77              		.loc 1 87 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL6:
  82 0000 10B5     		push	{r4, lr}
  83              	.LCFI0:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
  87 0002 0446     		mov	r4, r0
  88:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
  89:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (MAL_GetStatus(lun) != 0 )
  88              		.loc 1 89 0
  89 0004 FFF7FEFF 		bl	MAL_GetStatus
  90              	.LVL7:
  91 0008 68B1     		cbz	r0, .L9
  92              	.LVL8:
  93              	.LBB28:
  94              	.LBB29:
  90:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
  91:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
  92:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
  93:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
  94:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
  95:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
  96:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[4] = (uint8_t)(Mass_Block_Count[lun] >> 24);
  97:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[5] = (uint8_t)(Mass_Block_Count[lun] >> 16);
  98:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[6] = (uint8_t)(Mass_Block_Count[lun] >>  8);
  99:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[7] = (uint8_t)(Mass_Block_Count[lun]);
 100:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 101:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[9] = (uint8_t)(Mass_Block_Size[lun] >>  16);
 102:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[10] = (uint8_t)(Mass_Block_Size[lun] >>  8);
 103:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[11] = (uint8_t)(Mass_Block_Size[lun]);
 104:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(ReadFormatCapacity_Data, READ_FORMAT_CAPACITY_DATA_LEN);
 105:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 106:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 107:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 108:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 109:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI ReadCapacity10 Command routine.
 110:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 111:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 112:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_ReadCapacity10_Cmd(uint8_t lun)
 113:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 114:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 115:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (MAL_GetStatus(lun))
 116:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 117:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
 118:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
 119:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 120:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 121:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 122:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 123:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[0] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 24);
 124:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[1] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 16);
 125:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[2] = (uint8_t)((Mass_Block_Count[lun] - 1) >>  8);
 126:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[3] = (uint8_t)(Mass_Block_Count[lun] - 1);
 127:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 128:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[4] = (uint8_t)(Mass_Block_Size[lun] >>  24);
 129:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[5] = (uint8_t)(Mass_Block_Size[lun] >>  16);
 130:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[6] = (uint8_t)(Mass_Block_Size[lun] >>  8);
 131:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[7] = (uint8_t)(Mass_Block_Size[lun]);
 132:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(ReadCapacity10_Data, READ_CAPACITY10_DATA_LEN);
 133:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 134:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 135:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 136:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 137:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI ModeSense6 Command routine.
 138:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 139:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 140:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_ModeSense6_Cmd (uint8_t lun)
 141:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 142:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(Mode_Sense6_data, MODE_SENSE6_DATA_LEN);
 143:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 144:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 145:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 146:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 147:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI ModeSense10 Command routine.
 148:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 149:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 150:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_ModeSense10_Cmd (uint8_t lun)
 151:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 152:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(Mode_Sense10_data, MODE_SENSE10_DATA_LEN);
 153:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 154:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 155:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 156:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 157:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI RequestSense Command routine.
 158:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 159:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 160:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_RequestSense_Cmd (uint8_t lun)
 161:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 162:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   uint8_t Request_Sense_data_Length;
 163:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 164:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (CBW.CB[4] <= REQUEST_SENSE_DATA_LEN)
 165:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 166:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Request_Sense_data_Length = CBW.CB[4];
 167:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 168:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else
 169:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 170:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Request_Sense_data_Length = REQUEST_SENSE_DATA_LEN;
 171:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 172:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(Scsi_Sense_Data, Request_Sense_data_Length);
 173:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 174:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 175:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 176:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 177:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  Set Scsi Sense Data routine..
 178:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 179:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 180:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void Set_Scsi_Sense_Data(uint8_t lun, uint8_t Sens_Key, uint8_t Asc)
 181:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[2] = Sens_Key;
  95              		.loc 1 182 0
  96 000a 1348     		ldr	r0, .L10
  97 000c 0223     		movs	r3, #2
  98 000e 8370     		strb	r3, [r0, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
  99              		.loc 1 183 0
 100 0010 3A22     		movs	r2, #58
 101 0012 0273     		strb	r2, [r0, #12]
 102              	.LBE29:
 103              	.LBE28:
  92:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 104              		.loc 1 92 0
 105 0014 0120     		movs	r0, #1
 106 0016 0146     		mov	r1, r0
 107 0018 FFF7FEFF 		bl	Set_CSW
 108              	.LVL9:
  93:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 109              		.loc 1 93 0
 110 001c 0020     		movs	r0, #0
 105:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 111              		.loc 1 105 0
 112 001e BDE81040 		pop	{r4, lr}
  93:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 113              		.loc 1 93 0
 114 0022 FFF7FEBF 		b	Bot_Abort
 115              	.LVL10:
 116              	.L9:
  96:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[5] = (uint8_t)(Mass_Block_Count[lun] >> 16);
 117              		.loc 1 96 0
 118 0026 0D4B     		ldr	r3, .L10+4
 119 0028 53F82410 		ldr	r1, [r3, r4, lsl #2]
 120 002c 0C48     		ldr	r0, .L10+8
 121 002e 0A0E     		lsrs	r2, r1, #24
 122 0030 0271     		strb	r2, [r0, #4]
  97:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[6] = (uint8_t)(Mass_Block_Count[lun] >>  8);
 123              		.loc 1 97 0
 124 0032 0B0C     		lsrs	r3, r1, #16
 125 0034 4371     		strb	r3, [r0, #5]
  98:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[7] = (uint8_t)(Mass_Block_Count[lun]);
 126              		.loc 1 98 0
 127 0036 0A0A     		lsrs	r2, r1, #8
 128 0038 8271     		strb	r2, [r0, #6]
  99:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 129              		.loc 1 99 0
 130 003a C171     		strb	r1, [r0, #7]
 101:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[10] = (uint8_t)(Mass_Block_Size[lun] >>  8);
 131              		.loc 1 101 0
 132 003c 0949     		ldr	r1, .L10+12
 133 003e 51F82430 		ldr	r3, [r1, r4, lsl #2]
 134 0042 1A0C     		lsrs	r2, r3, #16
 135 0044 4272     		strb	r2, [r0, #9]
 102:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadFormatCapacity_Data[11] = (uint8_t)(Mass_Block_Size[lun]);
 136              		.loc 1 102 0
 137 0046 190A     		lsrs	r1, r3, #8
 138 0048 8172     		strb	r1, [r0, #10]
 103:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(ReadFormatCapacity_Data, READ_FORMAT_CAPACITY_DATA_LEN);
 139              		.loc 1 103 0
 140 004a C372     		strb	r3, [r0, #11]
 104:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 141              		.loc 1 104 0
 142 004c 0C21     		movs	r1, #12
 105:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 143              		.loc 1 105 0
 144 004e BDE81040 		pop	{r4, lr}
 104:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 145              		.loc 1 104 0
 146 0052 FFF7FEBF 		b	Transfer_Data_Request
 147              	.LVL11:
 148              	.L11:
 149 0056 00BF     		.align	2
 150              	.L10:
 151 0058 00000000 		.word	Scsi_Sense_Data
 152 005c 00000000 		.word	Mass_Block_Count
 153 0060 00000000 		.word	ReadFormatCapacity_Data
 154 0064 00000000 		.word	Mass_Block_Size
 155              		.cfi_endproc
 156              	.LFE58:
 158              		.section	.text.SCSI_ReadCapacity10_Cmd,"ax",%progbits
 159              		.align	1
 160              		.global	SCSI_ReadCapacity10_Cmd
 161              		.thumb
 162              		.thumb_func
 164              	SCSI_ReadCapacity10_Cmd:
 165              	.LFB59:
 113:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 166              		.loc 1 113 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              	.LVL12:
 171 0000 10B5     		push	{r4, lr}
 172              	.LCFI1:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 176 0002 0446     		mov	r4, r0
 115:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 177              		.loc 1 115 0
 178 0004 FFF7FEFF 		bl	MAL_GetStatus
 179              	.LVL13:
 180 0008 68B1     		cbz	r0, .L13
 181              	.LVL14:
 182              	.LBB30:
 183              	.LBB31:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 184              		.loc 1 182 0
 185 000a 1448     		ldr	r0, .L14
 186 000c 0223     		movs	r3, #2
 187 000e 8370     		strb	r3, [r0, #2]
 188              		.loc 1 183 0
 189 0010 3A21     		movs	r1, #58
 190 0012 0173     		strb	r1, [r0, #12]
 191              	.LBE31:
 192              	.LBE30:
 118:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 193              		.loc 1 118 0
 194 0014 0120     		movs	r0, #1
 195 0016 0146     		mov	r1, r0
 196 0018 FFF7FEFF 		bl	Set_CSW
 197              	.LVL15:
 119:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 198              		.loc 1 119 0
 199 001c 0020     		movs	r0, #0
 133:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 200              		.loc 1 133 0
 201 001e BDE81040 		pop	{r4, lr}
 119:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 202              		.loc 1 119 0
 203 0022 FFF7FEBF 		b	Bot_Abort
 204              	.LVL16:
 205              	.L13:
 123:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[1] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 16);
 206              		.loc 1 123 0
 207 0026 0E4B     		ldr	r3, .L14+4
 208 0028 53F82400 		ldr	r0, [r3, r4, lsl #2]
 209 002c 411E     		subs	r1, r0, #1
 210 002e 0D48     		ldr	r0, .L14+8
 211 0030 0A0E     		lsrs	r2, r1, #24
 212 0032 0270     		strb	r2, [r0, #0]
 124:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[2] = (uint8_t)((Mass_Block_Count[lun] - 1) >>  8);
 213              		.loc 1 124 0
 214 0034 0B0C     		lsrs	r3, r1, #16
 215 0036 4370     		strb	r3, [r0, #1]
 125:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[3] = (uint8_t)(Mass_Block_Count[lun] - 1);
 216              		.loc 1 125 0
 217 0038 0A0A     		lsrs	r2, r1, #8
 218 003a 8270     		strb	r2, [r0, #2]
 126:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 219              		.loc 1 126 0
 220 003c C170     		strb	r1, [r0, #3]
 128:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[5] = (uint8_t)(Mass_Block_Size[lun] >>  16);
 221              		.loc 1 128 0
 222 003e 0A49     		ldr	r1, .L14+12
 223 0040 51F82430 		ldr	r3, [r1, r4, lsl #2]
 224 0044 1A0E     		lsrs	r2, r3, #24
 225 0046 0271     		strb	r2, [r0, #4]
 129:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[6] = (uint8_t)(Mass_Block_Size[lun] >>  8);
 226              		.loc 1 129 0
 227 0048 190C     		lsrs	r1, r3, #16
 228 004a 4171     		strb	r1, [r0, #5]
 130:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   ReadCapacity10_Data[7] = (uint8_t)(Mass_Block_Size[lun]);
 229              		.loc 1 130 0
 230 004c 1A0A     		lsrs	r2, r3, #8
 231 004e 8271     		strb	r2, [r0, #6]
 131:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(ReadCapacity10_Data, READ_CAPACITY10_DATA_LEN);
 232              		.loc 1 131 0
 233 0050 C371     		strb	r3, [r0, #7]
 132:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 234              		.loc 1 132 0
 235 0052 0821     		movs	r1, #8
 133:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 236              		.loc 1 133 0
 237 0054 BDE81040 		pop	{r4, lr}
 132:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 238              		.loc 1 132 0
 239 0058 FFF7FEBF 		b	Transfer_Data_Request
 240              	.LVL17:
 241              	.L15:
 242              		.align	2
 243              	.L14:
 244 005c 00000000 		.word	Scsi_Sense_Data
 245 0060 00000000 		.word	Mass_Block_Count
 246 0064 00000000 		.word	ReadCapacity10_Data
 247 0068 00000000 		.word	Mass_Block_Size
 248              		.cfi_endproc
 249              	.LFE59:
 251              		.section	.text.SCSI_ModeSense6_Cmd,"ax",%progbits
 252              		.align	1
 253              		.global	SCSI_ModeSense6_Cmd
 254              		.thumb
 255              		.thumb_func
 257              	SCSI_ModeSense6_Cmd:
 258              	.LFB60:
 141:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(Mode_Sense6_data, MODE_SENSE6_DATA_LEN);
 259              		.loc 1 141 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL18:
 142:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 265              		.loc 1 142 0
 266 0000 0148     		ldr	r0, .L17
 267              	.LVL19:
 268 0002 0421     		movs	r1, #4
 143:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 269              		.loc 1 143 0
 142:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 270              		.loc 1 142 0
 271 0004 FFF7FEBF 		b	Transfer_Data_Request
 272              	.LVL20:
 273              	.L18:
 274              		.align	2
 275              	.L17:
 276 0008 00000000 		.word	Mode_Sense6_data
 277              		.cfi_endproc
 278              	.LFE60:
 280              		.section	.text.SCSI_ModeSense10_Cmd,"ax",%progbits
 281              		.align	1
 282              		.global	SCSI_ModeSense10_Cmd
 283              		.thumb
 284              		.thumb_func
 286              	SCSI_ModeSense10_Cmd:
 287              	.LFB61:
 151:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Transfer_Data_Request(Mode_Sense10_data, MODE_SENSE10_DATA_LEN);
 288              		.loc 1 151 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293              	.LVL21:
 152:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 294              		.loc 1 152 0
 295 0000 0148     		ldr	r0, .L20
 296              	.LVL22:
 297 0002 0821     		movs	r1, #8
 153:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 298              		.loc 1 153 0
 152:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 299              		.loc 1 152 0
 300 0004 FFF7FEBF 		b	Transfer_Data_Request
 301              	.LVL23:
 302              	.L21:
 303              		.align	2
 304              	.L20:
 305 0008 00000000 		.word	Mode_Sense10_data
 306              		.cfi_endproc
 307              	.LFE61:
 309              		.section	.text.SCSI_RequestSense_Cmd,"ax",%progbits
 310              		.align	1
 311              		.global	SCSI_RequestSense_Cmd
 312              		.thumb
 313              		.thumb_func
 315              	SCSI_RequestSense_Cmd:
 316              	.LFB62:
 161:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   uint8_t Request_Sense_data_Length;
 317              		.loc 1 161 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322              	.LVL24:
 164:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 323              		.loc 1 164 0
 324 0000 034B     		ldr	r3, .L23
 325 0002 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 326              	.LVL25:
 172:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 327              		.loc 1 172 0
 328 0004 0348     		ldr	r0, .L23+4
 329              	.LVL26:
 330 0006 1229     		cmp	r1, #18
 331 0008 28BF     		it	cs
 332 000a 1221     		movcs	r1, #18
 333              	.LVL27:
 173:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 334              		.loc 1 173 0
 172:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 335              		.loc 1 172 0
 336 000c FFF7FEBF 		b	Transfer_Data_Request
 337              	.LVL28:
 338              	.L24:
 339              		.align	2
 340              	.L23:
 341 0010 00000000 		.word	CBW
 342 0014 00000000 		.word	Scsi_Sense_Data
 343              		.cfi_endproc
 344              	.LFE62:
 346              		.section	.text.Set_Scsi_Sense_Data,"ax",%progbits
 347              		.align	1
 348              		.global	Set_Scsi_Sense_Data
 349              		.thumb
 350              		.thumb_func
 352              	Set_Scsi_Sense_Data:
 353              	.LFB63:
 181:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[2] = Sens_Key;
 354              		.loc 1 181 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LVL29:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 360              		.loc 1 182 0
 361 0000 014B     		ldr	r3, .L26
 362 0002 9970     		strb	r1, [r3, #2]
 363              		.loc 1 183 0
 364 0004 1A73     		strb	r2, [r3, #12]
 365 0006 7047     		bx	lr
 366              	.L27:
 367              		.align	2
 368              	.L26:
 369 0008 00000000 		.word	Scsi_Sense_Data
 370              		.cfi_endproc
 371              	.LFE63:
 373              		.section	.text.SCSI_Start_Stop_Unit_Cmd,"ax",%progbits
 374              		.align	1
 375              		.global	SCSI_Start_Stop_Unit_Cmd
 376              		.thumb
 377              		.thumb_func
 379              	SCSI_Start_Stop_Unit_Cmd:
 380              	.LFB64:
 184:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 185:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 186:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 187:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 188:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI Start_Stop_Unit Command routine.
 189:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 190:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 191:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Start_Stop_Unit_Cmd(uint8_t lun)
 192:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 381              		.loc 1 192 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386              	.LVL30:
 193:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
 387              		.loc 1 193 0
 388 0000 0020     		movs	r0, #0
 389              	.LVL31:
 390 0002 0121     		movs	r1, #1
 194:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 391              		.loc 1 194 0
 193:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
 392              		.loc 1 193 0
 393 0004 FFF7FEBF 		b	Set_CSW
 394              	.LVL32:
 395              		.cfi_endproc
 396              	.LFE64:
 398              		.section	.text.SCSI_Verify10_Cmd,"ax",%progbits
 399              		.align	1
 400              		.global	SCSI_Verify10_Cmd
 401              		.thumb
 402              		.thumb_func
 404              	SCSI_Verify10_Cmd:
 405              	.LFB67:
 195:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 196:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 197:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 198:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI Read10 Command routine.
 199:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 200:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 201:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Read10_Cmd(uint8_t lun , uint32_t LBA , uint32_t BlockNbr)
 202:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 203:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 204:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (Bot_State == BOT_IDLE)
 205:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 206:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if (!(SCSI_Address_Management(CBW.bLUN, SCSI_READ10, LBA, BlockNbr)))/*address out of range*/
 207:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 208:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       return;
 209:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 210:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 211:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if ((CBW.bmFlags & 0x80) != 0)
 212:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 213:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_State = BOT_DATA_IN;
 214:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Read_Memory(lun, LBA , BlockNbr);
 215:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 216:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     else
 217:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 218:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(BOTH_DIR);
 219:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
 220:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
 221:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 222:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 223:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 224:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else if (Bot_State == BOT_DATA_IN)
 225:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 226:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Read_Memory(lun , LBA , BlockNbr);
 227:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 228:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 229:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 230:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 231:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 232:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI Write10 Command routine.
 233:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 234:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 235:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Write10_Cmd(uint8_t lun , uint32_t LBA , uint32_t BlockNbr)
 236:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 237:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 238:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (Bot_State == BOT_IDLE)
 239:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 240:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if (!(SCSI_Address_Management(CBW.bLUN, SCSI_WRITE10 , LBA, BlockNbr)))/*address out of range*/
 241:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 242:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       return;
 243:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 244:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 245:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if ((CBW.bmFlags & 0x80) == 0)
 246:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 247:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_State = BOT_DATA_OUT;
 248:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     #ifndef STM32F10X_CL
 249:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       SetEPRxStatus(ENDP2, EP_RX_VALID);
 250:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     #endif /* STM32F10X_CL */
 251:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 252:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     else
 253:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 254:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(DIR_IN);
 255:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
 256:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
 257:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 258:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 259:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 260:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else if (Bot_State == BOT_DATA_OUT)
 261:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 262:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Write_Memory(lun , LBA , BlockNbr);
 263:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 264:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 265:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 266:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 267:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 268:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  SCSI Verify10 Command routine.
 269:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 270:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 271:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Verify10_Cmd(uint8_t lun)
 272:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 406              		.loc 1 272 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              	.LVL33:
 411 0000 08B5     		push	{r3, lr}
 412              	.LCFI2:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 3, -8
 415              		.cfi_offset 14, -4
 273:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if ((CBW.dDataLength == 0) && !(CBW.CB[1] & BLKVFY))/* BLKVFY not set*/
 416              		.loc 1 273 0
 417 0002 0C4B     		ldr	r3, .L32
 418 0004 9A68     		ldr	r2, [r3, #8]
 419 0006 32B9     		cbnz	r2, .L30
 420              		.loc 1 273 0 is_stmt 0 discriminator 1
 421 0008 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 422              	.LVL34:
 423 000a 00F00401 		and	r1, r0, #4
 424 000e C8B2     		uxtb	r0, r1
 425 0010 08B9     		cbnz	r0, .L30
 274:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 275:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
 426              		.loc 1 275 0 is_stmt 1
 427 0012 0121     		movs	r1, #1
 428 0014 09E0     		b	.L31
 429              	.L30:
 276:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 277:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else
 278:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 279:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(BOTH_DIR);
 430              		.loc 1 279 0
 431 0016 0220     		movs	r0, #2
 432 0018 FFF7FEFF 		bl	Bot_Abort
 433              	.LVL35:
 434              	.LBB32:
 435              	.LBB33:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 436              		.loc 1 182 0
 437 001c 064B     		ldr	r3, .L32+4
 438 001e 0522     		movs	r2, #5
 439 0020 9A70     		strb	r2, [r3, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 440              		.loc 1 183 0
 441 0022 2420     		movs	r0, #36
 442 0024 1873     		strb	r0, [r3, #12]
 443              	.LBE33:
 444              	.LBE32:
 280:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
 281:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
 445              		.loc 1 281 0
 446 0026 0120     		movs	r0, #1
 447 0028 0021     		movs	r1, #0
 448              	.LVL36:
 449              	.L31:
 282:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 283:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 450              		.loc 1 283 0
 451 002a BDE80840 		pop	{r3, lr}
 281:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 452              		.loc 1 281 0
 453 002e FFF7FEBF 		b	Set_CSW
 454              	.LVL37:
 455              	.L33:
 456 0032 00BF     		.align	2
 457              	.L32:
 458 0034 00000000 		.word	CBW
 459 0038 00000000 		.word	Scsi_Sense_Data
 460              		.cfi_endproc
 461              	.LFE67:
 463              		.section	.text.SCSI_Valid_Cmd,"ax",%progbits
 464              		.align	1
 465              		.global	SCSI_Valid_Cmd
 466              		.thumb
 467              		.thumb_func
 469              	SCSI_Valid_Cmd:
 470              	.LFB68:
 284:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 285:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 286:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 287:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  Valid Commands routine.
 288:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 289:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 290:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Valid_Cmd(uint8_t lun)
 291:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 471              		.loc 1 291 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              	.LVL38:
 476 0000 08B5     		push	{r3, lr}
 477              	.LCFI3:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 3, -8
 480              		.cfi_offset 14, -4
 292:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (CBW.dDataLength != 0)
 481              		.loc 1 292 0
 482 0002 094B     		ldr	r3, .L37
 483 0004 9868     		ldr	r0, [r3, #8]
 484              	.LVL39:
 485 0006 50B1     		cbz	r0, .L35
 293:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 294:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(BOTH_DIR);
 486              		.loc 1 294 0
 487 0008 0220     		movs	r0, #2
 488 000a FFF7FEFF 		bl	Bot_Abort
 489              	.LVL40:
 490              	.LBB34:
 491              	.LBB35:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 492              		.loc 1 182 0
 493 000e 0748     		ldr	r0, .L37+4
 494 0010 0522     		movs	r2, #5
 495 0012 8270     		strb	r2, [r0, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 496              		.loc 1 183 0
 497 0014 2021     		movs	r1, #32
 498 0016 0173     		strb	r1, [r0, #12]
 499              	.LBE35:
 500              	.LBE34:
 295:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
 296:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
 501              		.loc 1 296 0
 502 0018 0120     		movs	r0, #1
 503 001a 0021     		movs	r1, #0
 504 001c 00E0     		b	.L36
 505              	.LVL41:
 506              	.L35:
 297:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 298:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else
 299:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
 507              		.loc 1 299 0
 508 001e 0121     		movs	r1, #1
 509              	.L36:
 300:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 510              		.loc 1 300 0
 511 0020 BDE80840 		pop	{r3, lr}
 299:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 512              		.loc 1 299 0
 513 0024 FFF7FEBF 		b	Set_CSW
 514              	.LVL42:
 515              	.L38:
 516              		.align	2
 517              	.L37:
 518 0028 00000000 		.word	CBW
 519 002c 00000000 		.word	Scsi_Sense_Data
 520              		.cfi_endproc
 521              	.LFE68:
 523              		.section	.text.SCSI_TestUnitReady_Cmd,"ax",%progbits
 524              		.align	1
 525              		.global	SCSI_TestUnitReady_Cmd
 526              		.thumb
 527              		.thumb_func
 529              	SCSI_TestUnitReady_Cmd:
 530              	.LFB69:
 301:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 302:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 303:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 304:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  Valid Commands routine.
 305:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 306:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 307:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_TestUnitReady_Cmd(uint8_t lun)
 308:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 531              		.loc 1 308 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              	.LVL43:
 536 0000 08B5     		push	{r3, lr}
 537              	.LCFI4:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 3, -8
 540              		.cfi_offset 14, -4
 309:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (MAL_GetStatus(lun))
 541              		.loc 1 309 0
 542 0002 FFF7FEFF 		bl	MAL_GetStatus
 543              	.LVL44:
 544 0006 68B1     		cbz	r0, .L40
 545              	.LVL45:
 546              	.LBB36:
 547              	.LBB37:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 548              		.loc 1 182 0
 549 0008 094B     		ldr	r3, .L41
 550 000a 0222     		movs	r2, #2
 551 000c 9A70     		strb	r2, [r3, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 552              		.loc 1 183 0
 553 000e 3A20     		movs	r0, #58
 554 0010 1873     		strb	r0, [r3, #12]
 555              	.LBE37:
 556              	.LBE36:
 310:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 311:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
 312:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
 557              		.loc 1 312 0
 558 0012 0120     		movs	r0, #1
 559 0014 0146     		mov	r1, r0
 560 0016 FFF7FEFF 		bl	Set_CSW
 561              	.LVL46:
 313:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 562              		.loc 1 313 0
 563 001a 0020     		movs	r0, #0
 314:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 315:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 316:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else
 317:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 318:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
 319:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 320:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 564              		.loc 1 320 0
 565 001c BDE80840 		pop	{r3, lr}
 313:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 566              		.loc 1 313 0
 567 0020 FFF7FEBF 		b	Bot_Abort
 568              	.LVL47:
 569              	.L40:
 318:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 570              		.loc 1 318 0
 571 0024 0121     		movs	r1, #1
 572              		.loc 1 320 0
 573 0026 BDE80840 		pop	{r3, lr}
 318:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 574              		.loc 1 318 0
 575 002a FFF7FEBF 		b	Set_CSW
 576              	.LVL48:
 577              	.L42:
 578 002e 00BF     		.align	2
 579              	.L41:
 580 0030 00000000 		.word	Scsi_Sense_Data
 581              		.cfi_endproc
 582              	.LFE69:
 584              		.section	.text.SCSI_Format_Cmd,"ax",%progbits
 585              		.align	1
 586              		.global	SCSI_Format_Cmd
 587              		.thumb
 588              		.thumb_func
 590              	SCSI_Format_Cmd:
 591              	.LFB70:
 321:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 322:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 323:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 324:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  Format Commands routine.
 325:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 326:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 327:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Format_Cmd(uint8_t lun)
 328:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 592              		.loc 1 328 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              	.LVL49:
 597 0000 08B5     		push	{r3, lr}
 598              	.LCFI5:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 3, -8
 601              		.cfi_offset 14, -4
 329:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (MAL_GetStatus(lun))
 602              		.loc 1 329 0
 603 0002 FFF7FEFF 		bl	MAL_GetStatus
 604              	.LVL50:
 605 0006 68B1     		cbz	r0, .L43
 606              	.LVL51:
 607              	.LBB38:
 608              	.LBB39:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 609              		.loc 1 182 0
 610 0008 074B     		ldr	r3, .L45
 611 000a 0222     		movs	r2, #2
 612 000c 9A70     		strb	r2, [r3, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 613              		.loc 1 183 0
 614 000e 3A20     		movs	r0, #58
 615 0010 1873     		strb	r0, [r3, #12]
 616              	.LBE39:
 617              	.LBE38:
 330:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 331:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
 332:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
 618              		.loc 1 332 0
 619 0012 0120     		movs	r0, #1
 620 0014 0146     		mov	r1, r0
 621 0016 FFF7FEFF 		bl	Set_CSW
 622              	.LVL52:
 333:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 623              		.loc 1 333 0
 624 001a 0020     		movs	r0, #0
 334:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return;
 335:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 336:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 337:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 625              		.loc 1 337 0
 626 001c BDE80840 		pop	{r3, lr}
 333:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 627              		.loc 1 333 0
 628 0020 FFF7FEBF 		b	Bot_Abort
 629              	.LVL53:
 630              	.L43:
 631 0024 08BD     		pop	{r3, pc}
 632              	.L46:
 633 0026 00BF     		.align	2
 634              	.L45:
 635 0028 00000000 		.word	Scsi_Sense_Data
 636              		.cfi_endproc
 637              	.LFE70:
 639              		.section	.text.SCSI_Invalid_Cmd,"ax",%progbits
 640              		.align	1
 641              		.global	SCSI_Invalid_Cmd
 642              		.thumb
 643              		.thumb_func
 645              	SCSI_Invalid_Cmd:
 646              	.LFB71:
 338:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 339:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 340:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 341:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  Invalid Commands routine.
 342:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 343:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 344:lib/USB_Functions/msc/src/usb_msc_scsi.c **** void SCSI_Invalid_Cmd(uint8_t lun)
 345:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 647              		.loc 1 345 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              	.LVL54:
 652 0000 08B5     		push	{r3, lr}
 653              	.LCFI6:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 3, -8
 656              		.cfi_offset 14, -4
 346:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (CBW.dDataLength == 0)
 657              		.loc 1 346 0
 658 0002 0B4B     		ldr	r3, .L52
 659 0004 9A68     		ldr	r2, [r3, #8]
 660 0006 0AB9     		cbnz	r2, .L48
 661              	.LVL55:
 662              	.L50:
 347:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 348:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 663              		.loc 1 348 0
 664 0008 0020     		movs	r0, #0
 665 000a 04E0     		b	.L51
 666              	.LVL56:
 667              	.L48:
 349:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 350:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   else
 351:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 352:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if ((CBW.bmFlags & 0x80) != 0)
 668              		.loc 1 352 0
 669 000c 93F90C00 		ldrsb	r0, [r3, #12]
 670              	.LVL57:
 671 0010 0028     		cmp	r0, #0
 672 0012 F9DB     		blt	.L50
 353:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 354:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(DIR_IN);
 355:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 356:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     else
 357:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 358:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(BOTH_DIR);
 673              		.loc 1 358 0
 674 0014 0220     		movs	r0, #2
 675              	.L51:
 676 0016 FFF7FEFF 		bl	Bot_Abort
 677              	.LVL58:
 678              	.LBB40:
 679              	.LBB41:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 680              		.loc 1 182 0
 681 001a 0649     		ldr	r1, .L52+4
 682 001c 0523     		movs	r3, #5
 683 001e 8B70     		strb	r3, [r1, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 684              		.loc 1 183 0
 685 0020 2022     		movs	r2, #32
 686 0022 0A73     		strb	r2, [r1, #12]
 687              	.LBE41:
 688              	.LBE40:
 359:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 360:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 361:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
 362:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
 689              		.loc 1 362 0
 690 0024 0120     		movs	r0, #1
 691 0026 0021     		movs	r1, #0
 363:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 692              		.loc 1 363 0
 693 0028 BDE80840 		pop	{r3, lr}
 362:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 694              		.loc 1 362 0
 695 002c FFF7FEBF 		b	Set_CSW
 696              	.LVL59:
 697              	.L53:
 698              		.align	2
 699              	.L52:
 700 0030 00000000 		.word	CBW
 701 0034 00000000 		.word	Scsi_Sense_Data
 702              		.cfi_endproc
 703              	.LFE71:
 705              		.section	.text.SCSI_Address_Management,"ax",%progbits
 706              		.align	1
 707              		.global	SCSI_Address_Management
 708              		.thumb
 709              		.thumb_func
 711              	SCSI_Address_Management:
 712              	.LFB72:
 364:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 365:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 366:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /*! 
 367:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     @brief  Test the received address.
 368:lib/USB_Functions/msc/src/usb_msc_scsi.c **** */
 369:lib/USB_Functions/msc/src/usb_msc_scsi.c **** /**************************************************************************/
 370:lib/USB_Functions/msc/src/usb_msc_scsi.c **** bool SCSI_Address_Management(uint8_t lun , uint8_t Cmd , uint32_t LBA , uint32_t BlockNbr)
 371:lib/USB_Functions/msc/src/usb_msc_scsi.c **** {
 713              		.loc 1 371 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              	.LVL60:
 718 0000 10B5     		push	{r4, lr}
 719              	.LCFI7:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 4, -8
 722              		.cfi_offset 14, -4
 372:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 373:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if ((LBA + BlockNbr) > Mass_Block_Count[lun] )
 723              		.loc 1 373 0
 724 0002 9A18     		adds	r2, r3, r2
 725              	.LVL61:
 726 0004 164C     		ldr	r4, .L63
 727 0006 54F82040 		ldr	r4, [r4, r0, lsl #2]
 728 000a A242     		cmp	r2, r4
 729 000c 0CD9     		bls	.L55
 374:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 375:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if (Cmd == SCSI_WRITE10)
 730              		.loc 1 375 0
 731 000e 2A29     		cmp	r1, #42
 732 0010 02D1     		bne	.L56
 376:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 377:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(BOTH_DIR);
 733              		.loc 1 377 0
 734 0012 0220     		movs	r0, #2
 735              	.LVL62:
 736 0014 FFF7FEFF 		bl	Bot_Abort
 737              	.LVL63:
 738              	.L56:
 378:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 379:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Bot_Abort(DIR_IN);
 739              		.loc 1 379 0
 740 0018 0020     		movs	r0, #0
 741 001a FFF7FEFF 		bl	Bot_Abort
 742              	.LVL64:
 743              	.LBB50:
 744              	.LBB51:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 745              		.loc 1 182 0
 746 001e 114B     		ldr	r3, .L63+4
 747 0020 0520     		movs	r0, #5
 748 0022 9870     		strb	r0, [r3, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 749              		.loc 1 183 0
 750 0024 2122     		movs	r2, #33
 751 0026 12E0     		b	.L62
 752              	.LVL65:
 753              	.L55:
 754              	.LBE51:
 755              	.LBE50:
 380:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(lun, ILLEGAL_REQUEST, ADDRESS_OUT_OF_RANGE);
 381:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
 382:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return (FALSE);
 383:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 384:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 385:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 386:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   if (CBW.dDataLength != BlockNbr * Mass_Block_Size[lun])
 756              		.loc 1 386 0
 757 0028 0F4A     		ldr	r2, .L63+8
 758 002a 52F82000 		ldr	r0, [r2, r0, lsl #2]
 759              	.LVL66:
 760 002e 4343     		muls	r3, r0, r3
 761              	.LVL67:
 762 0030 0E4A     		ldr	r2, .L63+12
 763 0032 9068     		ldr	r0, [r2, #8]
 764 0034 9842     		cmp	r0, r3
 765 0036 11D0     		beq	.L60
 766              	.LVL68:
 767              	.LBB52:
 768              	.LBB53:
 387:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 388:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     if (Cmd == SCSI_WRITE10)
 769              		.loc 1 388 0
 770 0038 2A29     		cmp	r1, #42
 771 003a 01D1     		bne	.L58
 389:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 390:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(BOTH_DIR);
 772              		.loc 1 390 0
 773 003c 0220     		movs	r0, #2
 774 003e 00E0     		b	.L61
 775              	.L58:
 391:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 392:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     else
 393:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 394:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Bot_Abort(DIR_IN);
 776              		.loc 1 394 0
 777 0040 0020     		movs	r0, #0
 778              	.L61:
 779 0042 FFF7FEFF 		bl	Bot_Abort
 780              	.LVL69:
 781              	.LBB54:
 782              	.LBB55:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 783              		.loc 1 182 0
 784 0046 074B     		ldr	r3, .L63+4
 785 0048 0521     		movs	r1, #5
 786 004a 9970     		strb	r1, [r3, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 787              		.loc 1 183 0
 788 004c 2422     		movs	r2, #36
 789              	.LVL70:
 790              	.L62:
 791 004e 1A73     		strb	r2, [r3, #12]
 792              	.LBE55:
 793              	.LBE54:
 395:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 396:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
 397:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
 794              		.loc 1 397 0
 795 0050 0120     		movs	r0, #1
 796 0052 0021     		movs	r1, #0
 797 0054 FFF7FEFF 		bl	Set_CSW
 798              	.LVL71:
 799 0058 0020     		movs	r0, #0
 800 005a 10BD     		pop	{r4, pc}
 801              	.LVL72:
 802              	.L60:
 803              	.LBE53:
 804              	.LBE52:
 398:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     return (FALSE);
 399:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 400:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   return (TRUE);
 805              		.loc 1 400 0
 806 005c 0120     		movs	r0, #1
 401:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 807              		.loc 1 401 0
 808 005e 10BD     		pop	{r4, pc}
 809              	.L64:
 810              		.align	2
 811              	.L63:
 812 0060 00000000 		.word	Mass_Block_Count
 813 0064 00000000 		.word	Scsi_Sense_Data
 814 0068 00000000 		.word	Mass_Block_Size
 815 006c 00000000 		.word	CBW
 816              		.cfi_endproc
 817              	.LFE72:
 819              		.section	.text.SCSI_Write10_Cmd,"ax",%progbits
 820              		.align	1
 821              		.global	SCSI_Write10_Cmd
 822              		.thumb
 823              		.thumb_func
 825              	SCSI_Write10_Cmd:
 826              	.LFB66:
 236:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 827              		.loc 1 236 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL73:
 832 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 833              	.LCFI8:
 834              		.cfi_def_cfa_offset 24
 835              		.cfi_offset 3, -24
 836              		.cfi_offset 4, -20
 837              		.cfi_offset 5, -16
 838              		.cfi_offset 6, -12
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 0F46     		mov	r7, r1
 842 0004 1346     		mov	r3, r2
 238:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 843              		.loc 1 238 0
 844 0006 174D     		ldr	r5, .L71
 845 0008 2C78     		ldrb	r4, [r5, #0]	@ zero_extendqisi2
 846 000a 002C     		cmp	r4, #0
 847 000c 22D1     		bne	.L66
 240:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 848              		.loc 1 240 0
 849 000e 164E     		ldr	r6, .L71+4
 850 0010 707B     		ldrb	r0, [r6, #13]	@ zero_extendqisi2
 851              	.LVL74:
 852 0012 2A21     		movs	r1, #42
 853              	.LVL75:
 854 0014 3A46     		mov	r2, r7
 855              	.LVL76:
 856 0016 FFF7FEFF 		bl	SCSI_Address_Management
 857              	.LVL77:
 858 001a 0028     		cmp	r0, #0
 859 001c 20D0     		beq	.L65
 245:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 860              		.loc 1 245 0
 861 001e 96F90C30 		ldrsb	r3, [r6, #12]
 862 0022 002B     		cmp	r3, #0
 863 0024 08DB     		blt	.L69
 247:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     #ifndef STM32F10X_CL
 864              		.loc 1 247 0
 865 0026 0123     		movs	r3, #1
 866 0028 2B70     		strb	r3, [r5, #0]
 249:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     #endif /* STM32F10X_CL */
 867              		.loc 1 249 0
 868 002a 0220     		movs	r0, #2
 869 002c 4FF44051 		mov	r1, #12288
 264:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 870              		.loc 1 264 0
 871 0030 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 249:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     #endif /* STM32F10X_CL */
 872              		.loc 1 249 0
 873 0034 FFF7FEBF 		b	SetEPRxStatus
 874              	.LVL78:
 875              	.L69:
 254:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
 876              		.loc 1 254 0
 877 0038 2046     		mov	r0, r4
 878 003a FFF7FEFF 		bl	Bot_Abort
 879              	.LVL79:
 880              	.LBB56:
 881              	.LBB57:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 882              		.loc 1 182 0
 883 003e 0B48     		ldr	r0, .L71+8
 884 0040 0522     		movs	r2, #5
 885 0042 8270     		strb	r2, [r0, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 886              		.loc 1 183 0
 887 0044 2421     		movs	r1, #36
 888 0046 0173     		strb	r1, [r0, #12]
 889              	.LBE57:
 890              	.LBE56:
 256:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 891              		.loc 1 256 0
 892 0048 0120     		movs	r0, #1
 893 004a 2146     		mov	r1, r4
 264:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 894              		.loc 1 264 0
 895 004c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 256:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 896              		.loc 1 256 0
 897 0050 FFF7FEBF 		b	Set_CSW
 898              	.LVL80:
 899              	.L66:
 260:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 900              		.loc 1 260 0
 901 0054 012C     		cmp	r4, #1
 902 0056 03D1     		bne	.L65
 264:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 903              		.loc 1 264 0
 904 0058 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 262:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 905              		.loc 1 262 0
 906 005c FFF7FEBF 		b	Write_Memory
 907              	.LVL81:
 908              	.L65:
 909 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 910              	.L72:
 911 0062 00BF     		.align	2
 912              	.L71:
 913 0064 00000000 		.word	Bot_State
 914 0068 00000000 		.word	CBW
 915 006c 00000000 		.word	Scsi_Sense_Data
 916              		.cfi_endproc
 917              	.LFE66:
 919              		.section	.text.SCSI_Read10_Cmd,"ax",%progbits
 920              		.align	1
 921              		.global	SCSI_Read10_Cmd
 922              		.thumb
 923              		.thumb_func
 925              	SCSI_Read10_Cmd:
 926              	.LFB65:
 202:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 927              		.loc 1 202 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              	.LVL82:
 932 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 933              	.LCFI9:
 934              		.cfi_def_cfa_offset 24
 935              		.cfi_offset 4, -24
 936              		.cfi_offset 5, -20
 937              		.cfi_offset 6, -16
 938              		.cfi_offset 7, -12
 939              		.cfi_offset 8, -8
 940              		.cfi_offset 14, -4
 941 0004 8046     		mov	r8, r0
 942 0006 0D46     		mov	r5, r1
 943 0008 1446     		mov	r4, r2
 204:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 944              		.loc 1 204 0
 945 000a 164E     		ldr	r6, .L80
 946 000c 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 947 000e 03BB     		cbnz	r3, .L74
 206:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 948              		.loc 1 206 0
 949 0010 154F     		ldr	r7, .L80+4
 950 0012 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 951              	.LVL83:
 952 0014 2821     		movs	r1, #40
 953              	.LVL84:
 954 0016 2A46     		mov	r2, r5
 955              	.LVL85:
 956 0018 2346     		mov	r3, r4
 957 001a FFF7FEFF 		bl	SCSI_Address_Management
 958              	.LVL86:
 959 001e 0028     		cmp	r0, #0
 960 0020 1DD0     		beq	.L73
 211:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     {
 961              		.loc 1 211 0
 962 0022 97F90C00 		ldrsb	r0, [r7, #12]
 963 0026 0028     		cmp	r0, #0
 964 0028 05DA     		bge	.L77
 213:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Read_Memory(lun, LBA , BlockNbr);
 965              		.loc 1 213 0
 966 002a 0220     		movs	r0, #2
 967 002c 3070     		strb	r0, [r6, #0]
 214:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 968              		.loc 1 214 0
 969 002e 4046     		mov	r0, r8
 970 0030 2946     		mov	r1, r5
 971 0032 2246     		mov	r2, r4
 972 0034 0FE0     		b	.L79
 973              	.L77:
 218:lib/USB_Functions/msc/src/usb_msc_scsi.c ****       Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
 974              		.loc 1 218 0
 975 0036 0220     		movs	r0, #2
 976 0038 FFF7FEFF 		bl	Bot_Abort
 977              	.LVL87:
 978              	.LBB58:
 979              	.LBB59:
 182:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   Scsi_Sense_Data[12] = Asc;
 980              		.loc 1 182 0
 981 003c 0B49     		ldr	r1, .L80+8
 982 003e 0522     		movs	r2, #5
 983 0040 8A70     		strb	r2, [r1, #2]
 183:lib/USB_Functions/msc/src/usb_msc_scsi.c **** }
 984              		.loc 1 183 0
 985 0042 2423     		movs	r3, #36
 986 0044 0B73     		strb	r3, [r1, #12]
 987              	.LBE59:
 988              	.LBE58:
 220:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 989              		.loc 1 220 0
 990 0046 0120     		movs	r0, #1
 991 0048 0146     		mov	r1, r0
 228:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 992              		.loc 1 228 0
 993 004a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 220:lib/USB_Functions/msc/src/usb_msc_scsi.c ****     }
 994              		.loc 1 220 0
 995 004e FFF7FEBF 		b	Set_CSW
 996              	.LVL88:
 997              	.L74:
 224:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   {
 998              		.loc 1 224 0
 999 0052 022B     		cmp	r3, #2
 1000 0054 03D1     		bne	.L73
 1001              	.LVL89:
 1002              	.L79:
 228:lib/USB_Functions/msc/src/usb_msc_scsi.c **** 
 1003              		.loc 1 228 0
 1004 0056 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 226:lib/USB_Functions/msc/src/usb_msc_scsi.c ****   }
 1005              		.loc 1 226 0
 1006 005a FFF7FEBF 		b	Read_Memory
 1007              	.LVL90:
 1008              	.L73:
 1009 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1010              	.L81:
 1011 0062 00BF     		.align	2
 1012              	.L80:
 1013 0064 00000000 		.word	Bot_State
 1014 0068 00000000 		.word	CBW
 1015 006c 00000000 		.word	Scsi_Sense_Data
 1016              		.cfi_endproc
 1017              	.LFE65:
 1019              		.text
 1020              	.Letext0:
 1021              		.file 2 "c:\\devz\\arm\\bleeding-edge\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 1022              		.file 3 "./lib/USB_Functions/msc/inc/usb_msc_bot.h"
 1023              		.file 4 "./lib/CMSIS/Include/core_cm3.h"
 1024              		.file 5 "./inc/systick.h"
 1025              		.file 6 "./lib/USB_Functions/msc/inc/usb_msc_scsi.h"
 1026              		.file 7 "./lib/USB_Functions/msc/inc/usb_msc_mass_mal.h"
 1027              		.file 8 "./lib/STM32_USB-FS-Device_Driver/inc/usb_regs.h"
 1028              		.file 9 "./lib/USB_Functions/msc/inc/usb_msc_memory.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_msc_scsi.c
  R:\TEMP\cc0cRMY9.s:19     .text.SCSI_Inquiry_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:24     .text.SCSI_Inquiry_Cmd:0000000000000000 SCSI_Inquiry_Cmd
  R:\TEMP\cc0cRMY9.s:63     .text.SCSI_Inquiry_Cmd:000000000000001c $d
  R:\TEMP\cc0cRMY9.s:70     .text.SCSI_ReadFormatCapacity_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:75     .text.SCSI_ReadFormatCapacity_Cmd:0000000000000000 SCSI_ReadFormatCapacity_Cmd
  R:\TEMP\cc0cRMY9.s:151    .text.SCSI_ReadFormatCapacity_Cmd:0000000000000058 $d
  R:\TEMP\cc0cRMY9.s:159    .text.SCSI_ReadCapacity10_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:164    .text.SCSI_ReadCapacity10_Cmd:0000000000000000 SCSI_ReadCapacity10_Cmd
  R:\TEMP\cc0cRMY9.s:244    .text.SCSI_ReadCapacity10_Cmd:000000000000005c $d
  R:\TEMP\cc0cRMY9.s:252    .text.SCSI_ModeSense6_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:257    .text.SCSI_ModeSense6_Cmd:0000000000000000 SCSI_ModeSense6_Cmd
  R:\TEMP\cc0cRMY9.s:276    .text.SCSI_ModeSense6_Cmd:0000000000000008 $d
  R:\TEMP\cc0cRMY9.s:281    .text.SCSI_ModeSense10_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:286    .text.SCSI_ModeSense10_Cmd:0000000000000000 SCSI_ModeSense10_Cmd
  R:\TEMP\cc0cRMY9.s:305    .text.SCSI_ModeSense10_Cmd:0000000000000008 $d
  R:\TEMP\cc0cRMY9.s:310    .text.SCSI_RequestSense_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:315    .text.SCSI_RequestSense_Cmd:0000000000000000 SCSI_RequestSense_Cmd
  R:\TEMP\cc0cRMY9.s:341    .text.SCSI_RequestSense_Cmd:0000000000000010 $d
  R:\TEMP\cc0cRMY9.s:347    .text.Set_Scsi_Sense_Data:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:352    .text.Set_Scsi_Sense_Data:0000000000000000 Set_Scsi_Sense_Data
  R:\TEMP\cc0cRMY9.s:369    .text.Set_Scsi_Sense_Data:0000000000000008 $d
  R:\TEMP\cc0cRMY9.s:374    .text.SCSI_Start_Stop_Unit_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:379    .text.SCSI_Start_Stop_Unit_Cmd:0000000000000000 SCSI_Start_Stop_Unit_Cmd
  R:\TEMP\cc0cRMY9.s:399    .text.SCSI_Verify10_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:404    .text.SCSI_Verify10_Cmd:0000000000000000 SCSI_Verify10_Cmd
  R:\TEMP\cc0cRMY9.s:458    .text.SCSI_Verify10_Cmd:0000000000000034 $d
  R:\TEMP\cc0cRMY9.s:464    .text.SCSI_Valid_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:469    .text.SCSI_Valid_Cmd:0000000000000000 SCSI_Valid_Cmd
  R:\TEMP\cc0cRMY9.s:518    .text.SCSI_Valid_Cmd:0000000000000028 $d
  R:\TEMP\cc0cRMY9.s:524    .text.SCSI_TestUnitReady_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:529    .text.SCSI_TestUnitReady_Cmd:0000000000000000 SCSI_TestUnitReady_Cmd
  R:\TEMP\cc0cRMY9.s:580    .text.SCSI_TestUnitReady_Cmd:0000000000000030 $d
  R:\TEMP\cc0cRMY9.s:585    .text.SCSI_Format_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:590    .text.SCSI_Format_Cmd:0000000000000000 SCSI_Format_Cmd
  R:\TEMP\cc0cRMY9.s:635    .text.SCSI_Format_Cmd:0000000000000028 $d
  R:\TEMP\cc0cRMY9.s:640    .text.SCSI_Invalid_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:645    .text.SCSI_Invalid_Cmd:0000000000000000 SCSI_Invalid_Cmd
  R:\TEMP\cc0cRMY9.s:700    .text.SCSI_Invalid_Cmd:0000000000000030 $d
  R:\TEMP\cc0cRMY9.s:706    .text.SCSI_Address_Management:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:711    .text.SCSI_Address_Management:0000000000000000 SCSI_Address_Management
  R:\TEMP\cc0cRMY9.s:812    .text.SCSI_Address_Management:0000000000000060 $d
  R:\TEMP\cc0cRMY9.s:820    .text.SCSI_Write10_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:825    .text.SCSI_Write10_Cmd:0000000000000000 SCSI_Write10_Cmd
  R:\TEMP\cc0cRMY9.s:913    .text.SCSI_Write10_Cmd:0000000000000064 $d
  R:\TEMP\cc0cRMY9.s:920    .text.SCSI_Read10_Cmd:0000000000000000 $t
  R:\TEMP\cc0cRMY9.s:925    .text.SCSI_Read10_Cmd:0000000000000000 SCSI_Read10_Cmd
  R:\TEMP\cc0cRMY9.s:1013   .text.SCSI_Read10_Cmd:0000000000000064 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Transfer_Data_Request
CBW
Standard_Inquiry_Data
Page00_Inquiry_Data
MAL_GetStatus
Set_CSW
Bot_Abort
Scsi_Sense_Data
Mass_Block_Count
ReadFormatCapacity_Data
Mass_Block_Size
ReadCapacity10_Data
Mode_Sense6_data
Mode_Sense10_data
SetEPRxStatus
Write_Memory
Bot_State
Read_Memory
