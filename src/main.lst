   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.startup.main,"ax",%progbits
  19              		.align	1
  20              		.global	main
  21              		.thumb
  22              		.thumb_func
  24              	main:
  25              	.LFB57:
  26              		.file 1 "src/main.c"
   1:src/main.c    **** /********************************************************************************/
   2:src/main.c    **** /*!
   3:src/main.c    **** 	@file			main.c
   4:src/main.c    **** 	@author         Nemui Trinomius (http://nemuisan.blog.bai.ne.jp)
   5:src/main.c    ****     @version        13.50
   6:src/main.c    ****     @date           2013.07.01
   7:src/main.c    **** 	@brief          STM32 Primer2 GPS Tr@cker.
   8:src/main.c    **** 
   9:src/main.c    ****     @section HISTORY
  10:src/main.c    **** 		2013.07.01	V13.50	See Whatnew.txt
  11:src/main.c    **** 
  12:src/main.c    ****     @section LICENSE
  13:src/main.c    **** 		BSD License. See Copyright.txt
  14:src/main.c    **** */
  15:src/main.c    **** /********************************************************************************/
  16:src/main.c    **** 
  17:src/main.c    **** /* Includes ------------------------------------------------------------------*/
  18:src/main.c    **** #include "hw_config.h"
  19:src/main.c    **** 
  20:src/main.c    **** /* Defines -------------------------------------------------------------------*/
  21:src/main.c    **** 
  22:src/main.c    **** /* Variables -----------------------------------------------------------------*/
  23:src/main.c    **** volatile int TaskStat = GPS_LOGGING;
  24:src/main.c    **** 
  25:src/main.c    **** /* Constants -----------------------------------------------------------------*/
  26:src/main.c    **** 
  27:src/main.c    **** /* Function prototypes -------------------------------------------------------*/
  28:src/main.c    **** void (*xTask)(void);
  29:src/main.c    **** 
  30:src/main.c    **** /* Functions -----------------------------------------------------------------*/
  31:src/main.c    **** 
  32:src/main.c    **** /**************************************************************************/
  33:src/main.c    **** /*! 
  34:src/main.c    ****     @brief  Main Program.
  35:src/main.c    **** 	@param  None.
  36:src/main.c    ****     @retval None.
  37:src/main.c    **** */
  38:src/main.c    **** /**************************************************************************/
  39:src/main.c    **** int main(void)
  40:src/main.c    **** {
  27              		.loc 1 40 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 13B5     		push	{r0, r1, r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 0, -16
  35              		.cfi_offset 1, -12
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  41:src/main.c    **** 	volatile int vcnt=0;
  38              		.loc 1 41 0
  39 0002 0023     		movs	r3, #0
  40 0004 0093     		str	r3, [sp, #0]
  41              	.LVL0:
  42:src/main.c    **** 	volatile int mscnt=0;
  42              		.loc 1 42 0
  43 0006 0193     		str	r3, [sp, #4]
  44              	.LVL1:
  43:src/main.c    **** 
  44:src/main.c    **** 	/* Set Basis System For STM32 Primer2 */
  45:src/main.c    **** 	Set_System();
  45              		.loc 1 45 0
  46 0008 FFF7FEFF 		bl	Set_System
  47              	.LVL2:
  46:src/main.c    **** 
  47:src/main.c    **** 	/* Set SysTickCounter for _delay_ms(); */
  48:src/main.c    **** 	SysTickInit(INTERVAL);
  48              		.loc 1 48 0
  49 000c 4FF47A70 		mov	r0, #1000
  50 0010 FFF7FEFF 		bl	SysTickInit
  51              	.LVL3:
  52              	.L2:
  49:src/main.c    **** 
  50:src/main.c    **** 	/* Select GPS-LOGGER/USB-MSC/USB-CDC Mode */
  51:src/main.c    **** 	for(; mscnt<3; mscnt++){
  53              		.loc 1 51 0 discriminator 1
  54 0014 0198     		ldr	r0, [sp, #4]
  55 0016 0228     		cmp	r0, #2
  56 0018 17DC     		bgt	.L4
  57              	.L5:
  52:src/main.c    **** 		_delay_ms(1000);
  58              		.loc 1 52 0
  59 001a 4FF47A70 		mov	r0, #1000
  60 001e FFF7FEFF 		bl	_delay_ms
  61              	.LVL4:
  53:src/main.c    **** 		if(!(GPIO_ReadInputDataBit(GPIOE, KEY_R) | GPIO_ReadInputDataBit(GPIOE, KEY_L))){
  62              		.loc 1 53 0
  63 0022 3048     		ldr	r0, .L14
  64 0024 2021     		movs	r1, #32
  65 0026 FFF7FEFF 		bl	GPIO_ReadInputDataBit
  66              	.LVL5:
  67 002a 0446     		mov	r4, r0
  68 002c 2D48     		ldr	r0, .L14
  69 002e 4021     		movs	r1, #64
  70 0030 FFF7FEFF 		bl	GPIO_ReadInputDataBit
  71              	.LVL6:
  72 0034 2043     		orrs	r0, r0, r4
  73 0036 10F0FF0F 		tst	r0, #255
  74 003a 02D1     		bne	.L3
  54:src/main.c    **** 			vcnt = 1;
  75              		.loc 1 54 0
  76 003c 0123     		movs	r3, #1
  77 003e 0093     		str	r3, [sp, #0]
  55:src/main.c    **** 			break;
  78              		.loc 1 55 0
  79 0040 03E0     		b	.L4
  80              	.L3:
  51:src/main.c    **** 		_delay_ms(1000);
  81              		.loc 1 51 0
  82 0042 0199     		ldr	r1, [sp, #4]
  83 0044 4A1C     		adds	r2, r1, #1
  84              	.LVL7:
  85 0046 0192     		str	r2, [sp, #4]
  86              	.LVL8:
  87 0048 E4E7     		b	.L2
  88              	.L4:
  56:src/main.c    **** 		}
  57:src/main.c    **** 	}
  58:src/main.c    **** 	
  59:src/main.c    **** 	
  60:src/main.c    **** 	/* Install Main GPS tracker Function */
  61:src/main.c    **** 	if(vcnt){
  89              		.loc 1 61 0
  90 004a 0098     		ldr	r0, [sp, #0]
  91 004c 28B1     		cbz	r0, .L6
  62:src/main.c    **** 		xTask 				= gps_task;
  92              		.loc 1 62 0
  93 004e 2648     		ldr	r0, .L14+4
  94 0050 264A     		ldr	r2, .L14+8
  95 0052 1060     		str	r0, [r2, #0]
  63:src/main.c    **** 		xUART_IRQ			= conio_IRQ;
  96              		.loc 1 63 0
  97 0054 264A     		ldr	r2, .L14+12
  98 0056 274B     		ldr	r3, .L14+16
  99 0058 3FE0     		b	.L12
 100              	.LVL9:
 101              	.L6:
  64:src/main.c    **** 	}
  65:src/main.c    **** 	/* Install USB-CDC VirtualCOM Function */
  66:src/main.c    **** 	else if(GPIO_ReadInputDataBit(GPIOE, KEY_L)){
 102              		.loc 1 66 0
 103 005a 2248     		ldr	r0, .L14
 104 005c 4021     		movs	r1, #64
 105 005e FFF7FEFF 		bl	GPIO_ReadInputDataBit
 106              	.LVL10:
 107 0062 224C     		ldr	r4, .L14+8
 108 0064 C8B1     		cbz	r0, .L8
  67:src/main.c    **** 		TaskStat 			= STM32_VCOM;
 109              		.loc 1 67 0
 110 0066 0220     		movs	r0, #2
 111 0068 234B     		ldr	r3, .L14+20
 112 006a 1860     		str	r0, [r3, #0]
  68:src/main.c    **** 		xTask 				= cdc_task;
 113              		.loc 1 68 0
 114 006c 234A     		ldr	r2, .L14+24
 115 006e 2260     		str	r2, [r4, #0]
  69:src/main.c    **** 		xUART_IRQ			= CDC_IRQ;
 116              		.loc 1 69 0
 117 0070 234C     		ldr	r4, .L14+28
 118 0072 2049     		ldr	r1, .L14+16
 119 0074 0C60     		str	r4, [r1, #0]
  70:src/main.c    **** 		xEP1_IN_Callback  	= CDC_EP1_IN_Callback;
 120              		.loc 1 70 0
 121 0076 2348     		ldr	r0, .L14+32
 122 0078 234B     		ldr	r3, .L14+36
 123 007a 1860     		str	r0, [r3, #0]
  71:src/main.c    **** 		xEP2_OUT_Callback 	= NOP_Process;
 124              		.loc 1 71 0
 125 007c 234A     		ldr	r2, .L14+40
 126 007e 244C     		ldr	r4, .L14+44
 127 0080 2260     		str	r2, [r4, #0]
  72:src/main.c    **** 		xEP3_OUT_Callback 	= CDC_EP3_OUT_Callback;
 128              		.loc 1 72 0
 129 0082 2449     		ldr	r1, .L14+48
 130 0084 2448     		ldr	r0, .L14+52
 131 0086 0160     		str	r1, [r0, #0]
  73:src/main.c    **** 		xSOF_Callback     	= CDC_SOF_Callback;
 132              		.loc 1 73 0
 133 0088 244A     		ldr	r2, .L14+56
 134 008a 254B     		ldr	r3, .L14+60
 135 008c 1A60     		str	r2, [r3, #0]
  74:src/main.c    **** 		xUSB_Istr	      	= CDC_USB_Istr;
 136              		.loc 1 74 0
 137 008e 254C     		ldr	r4, .L14+64
 138 0090 2549     		ldr	r1, .L14+68
 139 0092 0C60     		str	r4, [r1, #0]
  75:src/main.c    **** 		CDC_SetStructure();
 140              		.loc 1 75 0
 141 0094 FFF7FEFF 		bl	CDC_SetStructure
 142              	.LVL11:
 143 0098 20E0     		b	.L11
 144              	.L8:
  76:src/main.c    **** 	}
  77:src/main.c    **** 	/* Install USB-MSC Function */
  78:src/main.c    **** 	else if(GPIO_ReadInputDataBit(GPIOE, KEY_R)){
 145              		.loc 1 78 0
 146 009a 1248     		ldr	r0, .L14
 147 009c 2021     		movs	r1, #32
 148 009e FFF7FEFF 		bl	GPIO_ReadInputDataBit
 149              	.LVL12:
 150 00a2 144B     		ldr	r3, .L14+16
 151 00a4 124A     		ldr	r2, .L14+12
 152 00a6 B0B1     		cbz	r0, .L9
  79:src/main.c    **** 		TaskStat 			= STM32_MSC;
 153              		.loc 1 79 0
 154 00a8 0120     		movs	r0, #1
 155 00aa 1349     		ldr	r1, .L14+20
 156 00ac 0860     		str	r0, [r1, #0]
  80:src/main.c    **** 		xTask 				= msc_task;
 157              		.loc 1 80 0
 158 00ae 1F48     		ldr	r0, .L14+72
 159 00b0 2060     		str	r0, [r4, #0]
  81:src/main.c    **** 		xUART_IRQ			= conio_IRQ;
 160              		.loc 1 81 0
 161 00b2 1A60     		str	r2, [r3, #0]
  82:src/main.c    **** 		xEP1_IN_Callback  	= MSC_EP1_IN_Callback;
 162              		.loc 1 82 0
 163 00b4 1E4C     		ldr	r4, .L14+76
 164 00b6 144B     		ldr	r3, .L14+36
 165 00b8 1C60     		str	r4, [r3, #0]
  83:src/main.c    **** 		xEP2_OUT_Callback 	= MSC_EP2_OUT_Callback;
 166              		.loc 1 83 0
 167 00ba 1E4A     		ldr	r2, .L14+80
 168 00bc 1449     		ldr	r1, .L14+44
 169 00be 0A60     		str	r2, [r1, #0]
  84:src/main.c    **** 		xEP3_OUT_Callback 	= NOP_Process;
 170              		.loc 1 84 0
 171 00c0 1248     		ldr	r0, .L14+40
 172 00c2 154C     		ldr	r4, .L14+52
 173 00c4 2060     		str	r0, [r4, #0]
  85:src/main.c    **** 		xSOF_Callback     	= NOP_Process;
 174              		.loc 1 85 0
 175 00c6 164B     		ldr	r3, .L14+60
 176 00c8 1860     		str	r0, [r3, #0]
  86:src/main.c    **** 		xUSB_Istr	      	= MSC_USB_Istr;
 177              		.loc 1 86 0
 178 00ca 1B4A     		ldr	r2, .L14+84
 179 00cc 1649     		ldr	r1, .L14+68
 180 00ce 0A60     		str	r2, [r1, #0]
  87:src/main.c    **** 		MSC_SetStructure();
 181              		.loc 1 87 0
 182 00d0 FFF7FEFF 		bl	MSC_SetStructure
 183              	.LVL13:
 184 00d4 02E0     		b	.L11
 185              	.L9:
  88:src/main.c    **** 	}
  89:src/main.c    **** 	
  90:src/main.c    **** 	else{ /* Fool Proof */
  91:src/main.c    **** 		xTask 				= gps_task;
 186              		.loc 1 91 0
 187 00d6 0449     		ldr	r1, .L14+4
 188 00d8 2160     		str	r1, [r4, #0]
 189              	.L12:
  92:src/main.c    **** 		xUART_IRQ			= conio_IRQ;
 190              		.loc 1 92 0
 191 00da 1A60     		str	r2, [r3, #0]
 192              	.L11:
  93:src/main.c    **** 	}
  94:src/main.c    **** 
  95:src/main.c    **** 	/* Main Loop */
  96:src/main.c    **** 	while (1)
  97:src/main.c    **** 	{
  98:src/main.c    **** 		xTask();
 193              		.loc 1 98 0 discriminator 1
 194 00dc 034B     		ldr	r3, .L14+8
 195 00de 1C68     		ldr	r4, [r3, #0]
 196 00e0 A047     		blx	r4
 197              	.LVL14:
 198 00e2 FBE7     		b	.L11
 199              	.L15:
 200              		.align	2
 201              	.L14:
 202 00e4 00180140 		.word	1073813504
 203 00e8 00000000 		.word	gps_task
 204 00ec 00000000 		.word	.LANCHOR0
 205 00f0 00000000 		.word	conio_IRQ
 206 00f4 00000000 		.word	xUART_IRQ
 207 00f8 00000000 		.word	.LANCHOR1
 208 00fc 00000000 		.word	cdc_task
 209 0100 00000000 		.word	CDC_IRQ
 210 0104 00000000 		.word	CDC_EP1_IN_Callback
 211 0108 00000000 		.word	xEP1_IN_Callback
 212 010c 00000000 		.word	NOP_Process
 213 0110 00000000 		.word	xEP2_OUT_Callback
 214 0114 00000000 		.word	CDC_EP3_OUT_Callback
 215 0118 00000000 		.word	xEP3_OUT_Callback
 216 011c 00000000 		.word	CDC_SOF_Callback
 217 0120 00000000 		.word	xSOF_Callback
 218 0124 00000000 		.word	CDC_USB_Istr
 219 0128 00000000 		.word	xUSB_Istr
 220 012c 00000000 		.word	msc_task
 221 0130 00000000 		.word	Mass_Storage_In
 222 0134 00000000 		.word	Mass_Storage_Out
 223 0138 00000000 		.word	MSC_USB_Istr
 224              		.cfi_endproc
 225              	.LFE57:
 227              		.global	xTask
 228              		.global	TaskStat
 229              		.section	.bss.xTask,"aw",%nobits
 230              		.align	2
 231              		.set	.LANCHOR0,. + 0
 234              	xTask:
 235 0000 00000000 		.space	4
 236              		.section	.bss.TaskStat,"aw",%nobits
 237              		.align	2
 238              		.set	.LANCHOR1,. + 0
 241              	TaskStat:
 242 0000 00000000 		.space	4
 243              		.text
 244              	.Letext0:
 245              		.file 2 "c:\\devz\\arm\\bleeding-edge\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 246              		.file 3 "./lib/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 247              		.file 4 "./lib/CMSIS/Include/core_cm3.h"
 248              		.file 5 "./inc/systick.h"
 249              		.file 6 "./inc/cdc_support.h"
 250              		.file 7 "./lib/USB_Functions/usb_conf.h"
 251              		.file 8 "./lib/USB_Functions/usb_istr.h"
 252              		.file 9 "./inc/hw_config.h"
 253              		.file 10 "./lib/USB_Functions/cdc/inc/usb_cdc_prop.h"
 254              		.file 11 "./lib/USB_Functions/msc/inc/usb_msc_prop.h"
 255              		.file 12 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
  R:\TEMP\ccK8mqoG.s:19     .text.startup.main:0000000000000000 $t
  R:\TEMP\ccK8mqoG.s:24     .text.startup.main:0000000000000000 main
  R:\TEMP\ccK8mqoG.s:202    .text.startup.main:00000000000000e4 $d
  R:\TEMP\ccK8mqoG.s:234    .bss.xTask:0000000000000000 xTask
  R:\TEMP\ccK8mqoG.s:241    .bss.TaskStat:0000000000000000 TaskStat
  R:\TEMP\ccK8mqoG.s:230    .bss.xTask:0000000000000000 $d
  R:\TEMP\ccK8mqoG.s:237    .bss.TaskStat:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Set_System
SysTickInit
_delay_ms
GPIO_ReadInputDataBit
CDC_SetStructure
MSC_SetStructure
gps_task
conio_IRQ
xUART_IRQ
cdc_task
CDC_IRQ
CDC_EP1_IN_Callback
xEP1_IN_Callback
NOP_Process
xEP2_OUT_Callback
CDC_EP3_OUT_Callback
xEP3_OUT_Callback
CDC_SOF_Callback
xSOF_Callback
CDC_USB_Istr
xUSB_Istr
msc_task
Mass_Storage_In
Mass_Storage_Out
MSC_USB_Istr
