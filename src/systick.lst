   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"systick.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SysTickInit,"ax",%progbits
  19              		.align	1
  20              		.global	SysTickInit
  21              		.thumb
  22              		.thumb_func
  24              	SysTickInit:
  25              	.LFB57:
  26              		.file 1 "src/systick.c"
   1:src/systick.c **** /********************************************************************************/
   2:src/systick.c **** /*!
   3:src/systick.c **** 	@file			systick.c
   4:src/systick.c **** 	@author         Nemui Trinomius (http://nemuisan.blog.bai.ne.jp)
   5:src/systick.c ****     @version        3.00
   6:src/systick.c ****     @date           2011.03.10
   7:src/systick.c **** 	@brief          delay mSec-order routine using systick timer			@n
   8:src/systick.c **** 					delay uSec-order routine using Timer5;
   9:src/systick.c **** 
  10:src/systick.c ****     @section HISTORY
  11:src/systick.c **** 		2010.03.05	V1.00	Restart Here.
  12:src/systick.c **** 		2011.01.20	V2.00	Using Timer5 for _delay_us(); instead of __NOP();.
  13:src/systick.c **** 		2011.03.10	V3.00	C++ Ready.
  14:src/systick.c **** 
  15:src/systick.c ****     @section LICENSE
  16:src/systick.c **** 		BSD License. See Copyright.txt
  17:src/systick.c **** */
  18:src/systick.c **** /********************************************************************************/
  19:src/systick.c **** 
  20:src/systick.c **** /* Includes ------------------------------------------------------------------*/
  21:src/systick.c **** #include "systick.h"
  22:src/systick.c **** 
  23:src/systick.c **** /* Defines -------------------------------------------------------------------*/
  24:src/systick.c **** 
  25:src/systick.c **** /* Variables -----------------------------------------------------------------*/
  26:src/systick.c **** __IO uint32_t TimingDelay;
  27:src/systick.c **** 
  28:src/systick.c **** /* Constants -----------------------------------------------------------------*/
  29:src/systick.c **** 
  30:src/systick.c **** /* Function prototypes -------------------------------------------------------*/
  31:src/systick.c **** 
  32:src/systick.c **** /* Functions -----------------------------------------------------------------*/
  33:src/systick.c **** 
  34:src/systick.c **** /**************************************************************************/
  35:src/systick.c **** /*! 
  36:src/systick.c ****     @brief	SysTickTimer Initialize(every 1mSec)
  37:src/systick.c **** 	@param	interval: Set Systick timer interval ratio.
  38:src/systick.c ****     @retval	none
  39:src/systick.c **** */
  40:src/systick.c **** /**************************************************************************/
  41:src/systick.c **** void SysTickInit(__IO uint32_t interval)
  42:src/systick.c **** {
  27              		.loc 1 42 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
  41 0004 0190     		str	r0, [sp, #4]
  43:src/systick.c **** 	/* Making MilliSecond-Order Timer */
  44:src/systick.c **** 	/* Select Clock Source  */
  45:src/systick.c **** 	SysTick_CLKSourceConfig( SysTick_CLKSource_HCLK );
  42              		.loc 1 45 0
  43 0006 0420     		movs	r0, #4
  44              	.LVL1:
  45 0008 FFF7FEFF 		bl	SysTick_CLKSourceConfig
  46              	.LVL2:
  46:src/systick.c **** 
  47:src/systick.c **** 	/* Setup SysTick Timer for 1 msec interrupts  */
  48:src/systick.c **** 	if (SysTick_Config(SystemCoreClock / interval))
  47              		.loc 1 48 0
  48 000c 019A     		ldr	r2, [sp, #4]
  49              	.LVL3:
  50 000e 194D     		ldr	r5, .L6
  51              	.LVL4:
  52 0010 2B68     		ldr	r3, [r5, #0]
  53 0012 B3FBF2F0 		udiv	r0, r3, r2
  54              	.LVL5:
  55              	.LBB18:
  56              	.LBB19:
  57              		.file 2 "./lib/CMSIS/Include/core_cm3.h"
   1:./lib/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/Include/core_cm3.h ****  * @version  V3.20
   5:./lib/CMSIS/Include/core_cm3.h ****  * @date     25. February 2013
   6:./lib/CMSIS/Include/core_cm3.h ****  *
   7:./lib/CMSIS/Include/core_cm3.h ****  * @note
   8:./lib/CMSIS/Include/core_cm3.h ****  *
   9:./lib/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  10:./lib/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:./lib/CMSIS/Include/core_cm3.h **** 
  12:./lib/CMSIS/Include/core_cm3.h ****    All rights reserved.
  13:./lib/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  14:./lib/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  15:./lib/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  16:./lib/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  17:./lib/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  18:./lib/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  19:./lib/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  20:./lib/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:./lib/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  22:./lib/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  23:./lib/CMSIS/Include/core_cm3.h ****    *
  24:./lib/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:./lib/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:./lib/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:./lib/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:./lib/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:./lib/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:./lib/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:./lib/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:./lib/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:./lib/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:./lib/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:./lib/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
  36:./lib/CMSIS/Include/core_cm3.h **** 
  37:./lib/CMSIS/Include/core_cm3.h **** 
  38:./lib/CMSIS/Include/core_cm3.h **** #if defined ( __ICCARM__ )
  39:./lib/CMSIS/Include/core_cm3.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:./lib/CMSIS/Include/core_cm3.h **** #endif
  41:./lib/CMSIS/Include/core_cm3.h **** 
  42:./lib/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  43:./lib/CMSIS/Include/core_cm3.h ****  extern "C" {
  44:./lib/CMSIS/Include/core_cm3.h **** #endif
  45:./lib/CMSIS/Include/core_cm3.h **** 
  46:./lib/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  47:./lib/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  48:./lib/CMSIS/Include/core_cm3.h **** 
  49:./lib/CMSIS/Include/core_cm3.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:./lib/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:./lib/CMSIS/Include/core_cm3.h **** 
  52:./lib/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:./lib/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  54:./lib/CMSIS/Include/core_cm3.h **** 
  55:./lib/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:./lib/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  57:./lib/CMSIS/Include/core_cm3.h **** 
  58:./lib/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:./lib/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  60:./lib/CMSIS/Include/core_cm3.h ****  */
  61:./lib/CMSIS/Include/core_cm3.h **** 
  62:./lib/CMSIS/Include/core_cm3.h **** 
  63:./lib/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  64:./lib/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  65:./lib/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  66:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup Cortex_M3
  67:./lib/CMSIS/Include/core_cm3.h ****   @{
  68:./lib/CMSIS/Include/core_cm3.h ****  */
  69:./lib/CMSIS/Include/core_cm3.h **** 
  70:./lib/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  71:./lib/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:./lib/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:./lib/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | \
  74:./lib/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:./lib/CMSIS/Include/core_cm3.h **** 
  76:./lib/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03)                                   /*!< Cortex-M Core      
  77:./lib/CMSIS/Include/core_cm3.h **** 
  78:./lib/CMSIS/Include/core_cm3.h **** 
  79:./lib/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  80:./lib/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:./lib/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:./lib/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  83:./lib/CMSIS/Include/core_cm3.h **** 
  84:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  85:./lib/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  86:./lib/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  87:./lib/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  88:./lib/CMSIS/Include/core_cm3.h **** 
  89:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
  90:./lib/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  91:./lib/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  92:./lib/CMSIS/Include/core_cm3.h **** 
  93:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  94:./lib/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  95:./lib/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  96:./lib/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  97:./lib/CMSIS/Include/core_cm3.h **** 
  98:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
  99:./lib/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:./lib/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:./lib/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 102:./lib/CMSIS/Include/core_cm3.h **** 
 103:./lib/CMSIS/Include/core_cm3.h **** #endif
 104:./lib/CMSIS/Include/core_cm3.h **** 
 105:./lib/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not. This core does not support an FPU at all
 106:./lib/CMSIS/Include/core_cm3.h **** */
 107:./lib/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0
 108:./lib/CMSIS/Include/core_cm3.h **** 
 109:./lib/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 110:./lib/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 111:./lib/CMSIS/Include/core_cm3.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 112:./lib/CMSIS/Include/core_cm3.h ****   #endif
 113:./lib/CMSIS/Include/core_cm3.h **** 
 114:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 115:./lib/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 116:./lib/CMSIS/Include/core_cm3.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 117:./lib/CMSIS/Include/core_cm3.h ****   #endif
 118:./lib/CMSIS/Include/core_cm3.h **** 
 119:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 120:./lib/CMSIS/Include/core_cm3.h ****   #if defined __TI__VFP_SUPPORT____
 121:./lib/CMSIS/Include/core_cm3.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 122:./lib/CMSIS/Include/core_cm3.h ****   #endif
 123:./lib/CMSIS/Include/core_cm3.h **** 
 124:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 125:./lib/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 126:./lib/CMSIS/Include/core_cm3.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 127:./lib/CMSIS/Include/core_cm3.h ****   #endif
 128:./lib/CMSIS/Include/core_cm3.h **** 
 129:./lib/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 130:./lib/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 131:./lib/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 132:./lib/CMSIS/Include/core_cm3.h ****   #endif
 133:./lib/CMSIS/Include/core_cm3.h **** #endif
 134:./lib/CMSIS/Include/core_cm3.h **** 
 135:./lib/CMSIS/Include/core_cm3.h **** #include <stdint.h>                      /* standard types definitions                      */
 136:./lib/CMSIS/Include/core_cm3.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 137:./lib/CMSIS/Include/core_cm3.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 138:./lib/CMSIS/Include/core_cm3.h **** 
 139:./lib/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 140:./lib/CMSIS/Include/core_cm3.h **** 
 141:./lib/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 142:./lib/CMSIS/Include/core_cm3.h **** 
 143:./lib/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 144:./lib/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 145:./lib/CMSIS/Include/core_cm3.h **** 
 146:./lib/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 147:./lib/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 148:./lib/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 149:./lib/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200
 150:./lib/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 151:./lib/CMSIS/Include/core_cm3.h ****   #endif
 152:./lib/CMSIS/Include/core_cm3.h **** 
 153:./lib/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 154:./lib/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0
 155:./lib/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 156:./lib/CMSIS/Include/core_cm3.h ****   #endif
 157:./lib/CMSIS/Include/core_cm3.h **** 
 158:./lib/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 159:./lib/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4
 160:./lib/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 161:./lib/CMSIS/Include/core_cm3.h ****   #endif
 162:./lib/CMSIS/Include/core_cm3.h **** 
 163:./lib/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 164:./lib/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0
 165:./lib/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 166:./lib/CMSIS/Include/core_cm3.h ****   #endif
 167:./lib/CMSIS/Include/core_cm3.h **** #endif
 168:./lib/CMSIS/Include/core_cm3.h **** 
 169:./lib/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 170:./lib/CMSIS/Include/core_cm3.h **** /**
 171:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 172:./lib/CMSIS/Include/core_cm3.h **** 
 173:./lib/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 174:./lib/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 175:./lib/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 176:./lib/CMSIS/Include/core_cm3.h **** */
 177:./lib/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:./lib/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 179:./lib/CMSIS/Include/core_cm3.h **** #else
 180:./lib/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 181:./lib/CMSIS/Include/core_cm3.h **** #endif
 182:./lib/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 183:./lib/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 184:./lib/CMSIS/Include/core_cm3.h **** 
 185:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 186:./lib/CMSIS/Include/core_cm3.h **** 
 187:./lib/CMSIS/Include/core_cm3.h **** 
 188:./lib/CMSIS/Include/core_cm3.h **** 
 189:./lib/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 190:./lib/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 191:./lib/CMSIS/Include/core_cm3.h ****   Core Register contain:
 192:./lib/CMSIS/Include/core_cm3.h ****   - Core Register
 193:./lib/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 194:./lib/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 195:./lib/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 196:./lib/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 197:./lib/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 198:./lib/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 199:./lib/CMSIS/Include/core_cm3.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 200:./lib/CMSIS/Include/core_cm3.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 201:./lib/CMSIS/Include/core_cm3.h **** */
 202:./lib/CMSIS/Include/core_cm3.h **** 
 203:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup    CMSIS_core_register
 204:./lib/CMSIS/Include/core_cm3.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 205:./lib/CMSIS/Include/core_cm3.h ****     \brief  Core Register type definitions.
 206:./lib/CMSIS/Include/core_cm3.h ****   @{
 207:./lib/CMSIS/Include/core_cm3.h ****  */
 208:./lib/CMSIS/Include/core_cm3.h **** 
 209:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 210:./lib/CMSIS/Include/core_cm3.h ****  */
 211:./lib/CMSIS/Include/core_cm3.h **** typedef union
 212:./lib/CMSIS/Include/core_cm3.h **** {
 213:./lib/CMSIS/Include/core_cm3.h ****   struct
 214:./lib/CMSIS/Include/core_cm3.h ****   {
 215:./lib/CMSIS/Include/core_cm3.h **** #if (__CORTEX_M != 0x04)
 216:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 217:./lib/CMSIS/Include/core_cm3.h **** #else
 218:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 219:./lib/CMSIS/Include/core_cm3.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 220:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 221:./lib/CMSIS/Include/core_cm3.h **** #endif
 222:./lib/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 223:./lib/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 224:./lib/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 225:./lib/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 226:./lib/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 227:./lib/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 228:./lib/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 229:./lib/CMSIS/Include/core_cm3.h **** } APSR_Type;
 230:./lib/CMSIS/Include/core_cm3.h **** 
 231:./lib/CMSIS/Include/core_cm3.h **** 
 232:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 233:./lib/CMSIS/Include/core_cm3.h ****  */
 234:./lib/CMSIS/Include/core_cm3.h **** typedef union
 235:./lib/CMSIS/Include/core_cm3.h **** {
 236:./lib/CMSIS/Include/core_cm3.h ****   struct
 237:./lib/CMSIS/Include/core_cm3.h ****   {
 238:./lib/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 239:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 240:./lib/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 241:./lib/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 242:./lib/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 243:./lib/CMSIS/Include/core_cm3.h **** 
 244:./lib/CMSIS/Include/core_cm3.h **** 
 245:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:./lib/CMSIS/Include/core_cm3.h ****  */
 247:./lib/CMSIS/Include/core_cm3.h **** typedef union
 248:./lib/CMSIS/Include/core_cm3.h **** {
 249:./lib/CMSIS/Include/core_cm3.h ****   struct
 250:./lib/CMSIS/Include/core_cm3.h ****   {
 251:./lib/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 252:./lib/CMSIS/Include/core_cm3.h **** #if (__CORTEX_M != 0x04)
 253:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 254:./lib/CMSIS/Include/core_cm3.h **** #else
 255:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 256:./lib/CMSIS/Include/core_cm3.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 257:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 258:./lib/CMSIS/Include/core_cm3.h **** #endif
 259:./lib/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 260:./lib/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 261:./lib/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 262:./lib/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 263:./lib/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 264:./lib/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 265:./lib/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 266:./lib/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 267:./lib/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 268:./lib/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 269:./lib/CMSIS/Include/core_cm3.h **** 
 270:./lib/CMSIS/Include/core_cm3.h **** 
 271:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 272:./lib/CMSIS/Include/core_cm3.h ****  */
 273:./lib/CMSIS/Include/core_cm3.h **** typedef union
 274:./lib/CMSIS/Include/core_cm3.h **** {
 275:./lib/CMSIS/Include/core_cm3.h ****   struct
 276:./lib/CMSIS/Include/core_cm3.h ****   {
 277:./lib/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 278:./lib/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 279:./lib/CMSIS/Include/core_cm3.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 280:./lib/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 281:./lib/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 282:./lib/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 283:./lib/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 284:./lib/CMSIS/Include/core_cm3.h **** 
 285:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 286:./lib/CMSIS/Include/core_cm3.h **** 
 287:./lib/CMSIS/Include/core_cm3.h **** 
 288:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup    CMSIS_core_register
 289:./lib/CMSIS/Include/core_cm3.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 290:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the NVIC Registers
 291:./lib/CMSIS/Include/core_cm3.h ****   @{
 292:./lib/CMSIS/Include/core_cm3.h ****  */
 293:./lib/CMSIS/Include/core_cm3.h **** 
 294:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 295:./lib/CMSIS/Include/core_cm3.h ****  */
 296:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 297:./lib/CMSIS/Include/core_cm3.h **** {
 298:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 299:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED0[24];
 300:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 301:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RSERVED1[24];
 302:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 303:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED2[24];
 304:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 305:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED3[24];
 306:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 307:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED4[56];
 308:./lib/CMSIS/Include/core_cm3.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 309:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED5[644];
 310:./lib/CMSIS/Include/core_cm3.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 311:./lib/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 312:./lib/CMSIS/Include/core_cm3.h **** 
 313:./lib/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 314:./lib/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 315:./lib/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 316:./lib/CMSIS/Include/core_cm3.h **** 
 317:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 318:./lib/CMSIS/Include/core_cm3.h **** 
 319:./lib/CMSIS/Include/core_cm3.h **** 
 320:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
 321:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 322:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the System Control Block Registers
 323:./lib/CMSIS/Include/core_cm3.h ****   @{
 324:./lib/CMSIS/Include/core_cm3.h ****  */
 325:./lib/CMSIS/Include/core_cm3.h **** 
 326:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the System Control Block (SCB).
 327:./lib/CMSIS/Include/core_cm3.h ****  */
 328:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 329:./lib/CMSIS/Include/core_cm3.h **** {
 330:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 331:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 332:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 333:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 334:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 335:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 336:./lib/CMSIS/Include/core_cm3.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 337:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 338:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 339:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 340:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 341:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 342:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 343:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 344:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 345:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 346:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 347:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 348:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 349:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED0[5];
 350:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 351:./lib/CMSIS/Include/core_cm3.h **** } SCB_Type;
 352:./lib/CMSIS/Include/core_cm3.h **** 
 353:./lib/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 354:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 355:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 356:./lib/CMSIS/Include/core_cm3.h **** 
 357:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 358:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 359:./lib/CMSIS/Include/core_cm3.h **** 
 360:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 361:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 362:./lib/CMSIS/Include/core_cm3.h **** 
 363:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 364:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 365:./lib/CMSIS/Include/core_cm3.h **** 
 366:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 367:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 368:./lib/CMSIS/Include/core_cm3.h **** 
 369:./lib/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 370:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 371:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 372:./lib/CMSIS/Include/core_cm3.h **** 
 373:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 374:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 375:./lib/CMSIS/Include/core_cm3.h **** 
 376:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 377:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 378:./lib/CMSIS/Include/core_cm3.h **** 
 379:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 380:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 381:./lib/CMSIS/Include/core_cm3.h **** 
 382:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 383:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 384:./lib/CMSIS/Include/core_cm3.h **** 
 385:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 386:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 387:./lib/CMSIS/Include/core_cm3.h **** 
 388:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 389:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 390:./lib/CMSIS/Include/core_cm3.h **** 
 391:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 392:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 393:./lib/CMSIS/Include/core_cm3.h **** 
 394:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 395:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 396:./lib/CMSIS/Include/core_cm3.h **** 
 397:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 398:./lib/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 399:./lib/CMSIS/Include/core_cm3.h **** 
 400:./lib/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 401:./lib/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201)                   /* core r2p1 */
 402:./lib/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 403:./lib/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 404:./lib/CMSIS/Include/core_cm3.h **** 
 405:./lib/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 406:./lib/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 407:./lib/CMSIS/Include/core_cm3.h **** #else
 408:./lib/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 409:./lib/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 410:./lib/CMSIS/Include/core_cm3.h **** #endif
 411:./lib/CMSIS/Include/core_cm3.h **** 
 412:./lib/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 413:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 414:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 415:./lib/CMSIS/Include/core_cm3.h **** 
 416:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 417:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 418:./lib/CMSIS/Include/core_cm3.h **** 
 419:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 420:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 421:./lib/CMSIS/Include/core_cm3.h **** 
 422:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 423:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 424:./lib/CMSIS/Include/core_cm3.h **** 
 425:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 426:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 427:./lib/CMSIS/Include/core_cm3.h **** 
 428:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 429:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 430:./lib/CMSIS/Include/core_cm3.h **** 
 431:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 432:./lib/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 433:./lib/CMSIS/Include/core_cm3.h **** 
 434:./lib/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 435:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 436:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 437:./lib/CMSIS/Include/core_cm3.h **** 
 438:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 439:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 440:./lib/CMSIS/Include/core_cm3.h **** 
 441:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 442:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 443:./lib/CMSIS/Include/core_cm3.h **** 
 444:./lib/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 445:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 446:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 447:./lib/CMSIS/Include/core_cm3.h **** 
 448:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 449:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 450:./lib/CMSIS/Include/core_cm3.h **** 
 451:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 452:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 453:./lib/CMSIS/Include/core_cm3.h **** 
 454:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 455:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 456:./lib/CMSIS/Include/core_cm3.h **** 
 457:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 458:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 459:./lib/CMSIS/Include/core_cm3.h **** 
 460:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 461:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 462:./lib/CMSIS/Include/core_cm3.h **** 
 463:./lib/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 464:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 465:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 466:./lib/CMSIS/Include/core_cm3.h **** 
 467:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 468:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 469:./lib/CMSIS/Include/core_cm3.h **** 
 470:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 471:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 472:./lib/CMSIS/Include/core_cm3.h **** 
 473:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 474:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 475:./lib/CMSIS/Include/core_cm3.h **** 
 476:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 477:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 478:./lib/CMSIS/Include/core_cm3.h **** 
 479:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 480:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 481:./lib/CMSIS/Include/core_cm3.h **** 
 482:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 483:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 484:./lib/CMSIS/Include/core_cm3.h **** 
 485:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 486:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 487:./lib/CMSIS/Include/core_cm3.h **** 
 488:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 489:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 490:./lib/CMSIS/Include/core_cm3.h **** 
 491:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 492:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 493:./lib/CMSIS/Include/core_cm3.h **** 
 494:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 495:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 496:./lib/CMSIS/Include/core_cm3.h **** 
 497:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 498:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 499:./lib/CMSIS/Include/core_cm3.h **** 
 500:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 501:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 502:./lib/CMSIS/Include/core_cm3.h **** 
 503:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 504:./lib/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 505:./lib/CMSIS/Include/core_cm3.h **** 
 506:./lib/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 507:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 508:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 509:./lib/CMSIS/Include/core_cm3.h **** 
 510:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 511:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 512:./lib/CMSIS/Include/core_cm3.h **** 
 513:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 514:./lib/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 515:./lib/CMSIS/Include/core_cm3.h **** 
 516:./lib/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 517:./lib/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 518:./lib/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 519:./lib/CMSIS/Include/core_cm3.h **** 
 520:./lib/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 521:./lib/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 522:./lib/CMSIS/Include/core_cm3.h **** 
 523:./lib/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 524:./lib/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 525:./lib/CMSIS/Include/core_cm3.h **** 
 526:./lib/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 527:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 528:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 529:./lib/CMSIS/Include/core_cm3.h **** 
 530:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 531:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 532:./lib/CMSIS/Include/core_cm3.h **** 
 533:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 534:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 535:./lib/CMSIS/Include/core_cm3.h **** 
 536:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 537:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 538:./lib/CMSIS/Include/core_cm3.h **** 
 539:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 540:./lib/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 541:./lib/CMSIS/Include/core_cm3.h **** 
 542:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 543:./lib/CMSIS/Include/core_cm3.h **** 
 544:./lib/CMSIS/Include/core_cm3.h **** 
 545:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
 546:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 547:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 548:./lib/CMSIS/Include/core_cm3.h ****   @{
 549:./lib/CMSIS/Include/core_cm3.h ****  */
 550:./lib/CMSIS/Include/core_cm3.h **** 
 551:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 552:./lib/CMSIS/Include/core_cm3.h ****  */
 553:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 554:./lib/CMSIS/Include/core_cm3.h **** {
 555:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED0[1];
 556:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 557:./lib/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 558:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 559:./lib/CMSIS/Include/core_cm3.h **** #else
 560:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED1[1];
 561:./lib/CMSIS/Include/core_cm3.h **** #endif
 562:./lib/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 563:./lib/CMSIS/Include/core_cm3.h **** 
 564:./lib/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 565:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 566:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 567:./lib/CMSIS/Include/core_cm3.h **** 
 568:./lib/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 569:./lib/CMSIS/Include/core_cm3.h **** 
 570:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 571:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 572:./lib/CMSIS/Include/core_cm3.h **** 
 573:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 574:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 575:./lib/CMSIS/Include/core_cm3.h **** 
 576:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 577:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 578:./lib/CMSIS/Include/core_cm3.h **** 
 579:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 580:./lib/CMSIS/Include/core_cm3.h **** 
 581:./lib/CMSIS/Include/core_cm3.h **** 
 582:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
 583:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 584:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the System Timer Registers.
 585:./lib/CMSIS/Include/core_cm3.h ****   @{
 586:./lib/CMSIS/Include/core_cm3.h ****  */
 587:./lib/CMSIS/Include/core_cm3.h **** 
 588:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the System Timer (SysTick).
 589:./lib/CMSIS/Include/core_cm3.h ****  */
 590:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 591:./lib/CMSIS/Include/core_cm3.h **** {
 592:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 593:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 594:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 595:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 596:./lib/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 597:./lib/CMSIS/Include/core_cm3.h **** 
 598:./lib/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 599:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 600:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 601:./lib/CMSIS/Include/core_cm3.h **** 
 602:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 603:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 604:./lib/CMSIS/Include/core_cm3.h **** 
 605:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 606:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 607:./lib/CMSIS/Include/core_cm3.h **** 
 608:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 609:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 610:./lib/CMSIS/Include/core_cm3.h **** 
 611:./lib/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 612:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 613:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 614:./lib/CMSIS/Include/core_cm3.h **** 
 615:./lib/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 616:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 617:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 618:./lib/CMSIS/Include/core_cm3.h **** 
 619:./lib/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 620:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 621:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 622:./lib/CMSIS/Include/core_cm3.h **** 
 623:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 624:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 625:./lib/CMSIS/Include/core_cm3.h **** 
 626:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 627:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:./lib/CMSIS/Include/core_cm3.h **** 
 629:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 630:./lib/CMSIS/Include/core_cm3.h **** 
 631:./lib/CMSIS/Include/core_cm3.h **** 
 632:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
 633:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 634:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 635:./lib/CMSIS/Include/core_cm3.h ****   @{
 636:./lib/CMSIS/Include/core_cm3.h ****  */
 637:./lib/CMSIS/Include/core_cm3.h **** 
 638:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 639:./lib/CMSIS/Include/core_cm3.h ****  */
 640:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 641:./lib/CMSIS/Include/core_cm3.h **** {
 642:./lib/CMSIS/Include/core_cm3.h ****   __O  union
 643:./lib/CMSIS/Include/core_cm3.h ****   {
 644:./lib/CMSIS/Include/core_cm3.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 645:./lib/CMSIS/Include/core_cm3.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 646:./lib/CMSIS/Include/core_cm3.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 647:./lib/CMSIS/Include/core_cm3.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 648:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED0[864];
 649:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 650:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED1[15];
 651:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 652:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED2[15];
 653:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 654:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED3[29];
 655:./lib/CMSIS/Include/core_cm3.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 656:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 657:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 658:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED4[43];
 659:./lib/CMSIS/Include/core_cm3.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 660:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 661:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED5[6];
 662:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 663:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 664:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 665:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 666:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 667:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 668:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 669:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 670:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 671:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 672:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 673:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 674:./lib/CMSIS/Include/core_cm3.h **** } ITM_Type;
 675:./lib/CMSIS/Include/core_cm3.h **** 
 676:./lib/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 677:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 678:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 679:./lib/CMSIS/Include/core_cm3.h **** 
 680:./lib/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 681:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 682:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 683:./lib/CMSIS/Include/core_cm3.h **** 
 684:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 685:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 686:./lib/CMSIS/Include/core_cm3.h **** 
 687:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 688:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 689:./lib/CMSIS/Include/core_cm3.h **** 
 690:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 691:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 692:./lib/CMSIS/Include/core_cm3.h **** 
 693:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 694:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 695:./lib/CMSIS/Include/core_cm3.h **** 
 696:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 697:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 698:./lib/CMSIS/Include/core_cm3.h **** 
 699:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 700:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 701:./lib/CMSIS/Include/core_cm3.h **** 
 702:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 703:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 704:./lib/CMSIS/Include/core_cm3.h **** 
 705:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 706:./lib/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 707:./lib/CMSIS/Include/core_cm3.h **** 
 708:./lib/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 709:./lib/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 710:./lib/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 711:./lib/CMSIS/Include/core_cm3.h **** 
 712:./lib/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 713:./lib/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 714:./lib/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 715:./lib/CMSIS/Include/core_cm3.h **** 
 716:./lib/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 717:./lib/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 718:./lib/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 719:./lib/CMSIS/Include/core_cm3.h **** 
 720:./lib/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 721:./lib/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 722:./lib/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 723:./lib/CMSIS/Include/core_cm3.h **** 
 724:./lib/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 725:./lib/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 726:./lib/CMSIS/Include/core_cm3.h **** 
 727:./lib/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 728:./lib/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 729:./lib/CMSIS/Include/core_cm3.h **** 
 730:./lib/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 731:./lib/CMSIS/Include/core_cm3.h **** 
 732:./lib/CMSIS/Include/core_cm3.h **** 
 733:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
 734:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 735:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 736:./lib/CMSIS/Include/core_cm3.h ****   @{
 737:./lib/CMSIS/Include/core_cm3.h ****  */
 738:./lib/CMSIS/Include/core_cm3.h **** 
 739:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 740:./lib/CMSIS/Include/core_cm3.h ****  */
 741:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 742:./lib/CMSIS/Include/core_cm3.h **** {
 743:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 744:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 745:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 746:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 747:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 748:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 749:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 750:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 751:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 752:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 753:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 754:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED0[1];
 755:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 756:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 757:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 758:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED1[1];
 759:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 760:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 761:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 762:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED2[1];
 763:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 764:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 765:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 766:./lib/CMSIS/Include/core_cm3.h **** } DWT_Type;
 767:./lib/CMSIS/Include/core_cm3.h **** 
 768:./lib/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 769:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 770:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 771:./lib/CMSIS/Include/core_cm3.h **** 
 772:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 773:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 774:./lib/CMSIS/Include/core_cm3.h **** 
 775:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 776:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 777:./lib/CMSIS/Include/core_cm3.h **** 
 778:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 779:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 780:./lib/CMSIS/Include/core_cm3.h **** 
 781:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 782:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 783:./lib/CMSIS/Include/core_cm3.h **** 
 784:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 785:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 786:./lib/CMSIS/Include/core_cm3.h **** 
 787:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 788:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 789:./lib/CMSIS/Include/core_cm3.h **** 
 790:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 791:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 792:./lib/CMSIS/Include/core_cm3.h **** 
 793:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 794:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 795:./lib/CMSIS/Include/core_cm3.h **** 
 796:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 797:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 798:./lib/CMSIS/Include/core_cm3.h **** 
 799:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 800:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 801:./lib/CMSIS/Include/core_cm3.h **** 
 802:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 803:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 804:./lib/CMSIS/Include/core_cm3.h **** 
 805:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 806:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 807:./lib/CMSIS/Include/core_cm3.h **** 
 808:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 809:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 810:./lib/CMSIS/Include/core_cm3.h **** 
 811:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 812:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 813:./lib/CMSIS/Include/core_cm3.h **** 
 814:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 815:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 816:./lib/CMSIS/Include/core_cm3.h **** 
 817:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 818:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 819:./lib/CMSIS/Include/core_cm3.h **** 
 820:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 821:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 822:./lib/CMSIS/Include/core_cm3.h **** 
 823:./lib/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 824:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 825:./lib/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 826:./lib/CMSIS/Include/core_cm3.h **** 
 827:./lib/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 828:./lib/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 829:./lib/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 830:./lib/CMSIS/Include/core_cm3.h **** 
 831:./lib/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 832:./lib/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 833:./lib/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 834:./lib/CMSIS/Include/core_cm3.h **** 
 835:./lib/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 836:./lib/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 837:./lib/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 838:./lib/CMSIS/Include/core_cm3.h **** 
 839:./lib/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 840:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 841:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 842:./lib/CMSIS/Include/core_cm3.h **** 
 843:./lib/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 844:./lib/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 845:./lib/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 846:./lib/CMSIS/Include/core_cm3.h **** 
 847:./lib/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 848:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 849:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 850:./lib/CMSIS/Include/core_cm3.h **** 
 851:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 852:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 853:./lib/CMSIS/Include/core_cm3.h **** 
 854:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 855:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 856:./lib/CMSIS/Include/core_cm3.h **** 
 857:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 858:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 859:./lib/CMSIS/Include/core_cm3.h **** 
 860:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 861:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 862:./lib/CMSIS/Include/core_cm3.h **** 
 863:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 864:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 865:./lib/CMSIS/Include/core_cm3.h **** 
 866:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 867:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 868:./lib/CMSIS/Include/core_cm3.h **** 
 869:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 870:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 871:./lib/CMSIS/Include/core_cm3.h **** 
 872:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 873:./lib/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 874:./lib/CMSIS/Include/core_cm3.h **** 
 875:./lib/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 876:./lib/CMSIS/Include/core_cm3.h **** 
 877:./lib/CMSIS/Include/core_cm3.h **** 
 878:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
 879:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 880:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 881:./lib/CMSIS/Include/core_cm3.h ****   @{
 882:./lib/CMSIS/Include/core_cm3.h ****  */
 883:./lib/CMSIS/Include/core_cm3.h **** 
 884:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 885:./lib/CMSIS/Include/core_cm3.h ****  */
 886:./lib/CMSIS/Include/core_cm3.h **** typedef struct
 887:./lib/CMSIS/Include/core_cm3.h **** {
 888:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 889:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 890:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED0[2];
 891:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 892:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED1[55];
 893:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 894:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED2[131];
 895:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 896:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 897:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 898:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED3[759];
 899:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 900:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 901:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 902:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED4[1];
 903:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 904:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 905:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 906:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED5[39];
 907:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 908:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 909:./lib/CMSIS/Include/core_cm3.h ****        uint32_t RESERVED7[8];
 910:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 911:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 912:./lib/CMSIS/Include/core_cm3.h **** } TPI_Type;
 913:./lib/CMSIS/Include/core_cm3.h **** 
 914:./lib/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 915:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 916:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 917:./lib/CMSIS/Include/core_cm3.h **** 
 918:./lib/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
 919:./lib/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 920:./lib/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 921:./lib/CMSIS/Include/core_cm3.h **** 
 922:./lib/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
 923:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 924:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 925:./lib/CMSIS/Include/core_cm3.h **** 
 926:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 927:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 928:./lib/CMSIS/Include/core_cm3.h **** 
 929:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 930:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 931:./lib/CMSIS/Include/core_cm3.h **** 
 932:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 933:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 934:./lib/CMSIS/Include/core_cm3.h **** 
 935:./lib/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
 936:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 937:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 938:./lib/CMSIS/Include/core_cm3.h **** 
 939:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 940:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 941:./lib/CMSIS/Include/core_cm3.h **** 
 942:./lib/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
 943:./lib/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 944:./lib/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 945:./lib/CMSIS/Include/core_cm3.h **** 
 946:./lib/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 947:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 948:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 949:./lib/CMSIS/Include/core_cm3.h **** 
 950:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 951:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 952:./lib/CMSIS/Include/core_cm3.h **** 
 953:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 954:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 955:./lib/CMSIS/Include/core_cm3.h **** 
 956:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 957:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 958:./lib/CMSIS/Include/core_cm3.h **** 
 959:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 960:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 961:./lib/CMSIS/Include/core_cm3.h **** 
 962:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 963:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 964:./lib/CMSIS/Include/core_cm3.h **** 
 965:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 966:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
 967:./lib/CMSIS/Include/core_cm3.h **** 
 968:./lib/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
 969:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
 970:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
 971:./lib/CMSIS/Include/core_cm3.h **** 
 972:./lib/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 973:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 974:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 975:./lib/CMSIS/Include/core_cm3.h **** 
 976:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 977:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 978:./lib/CMSIS/Include/core_cm3.h **** 
 979:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 980:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 981:./lib/CMSIS/Include/core_cm3.h **** 
 982:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 983:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 984:./lib/CMSIS/Include/core_cm3.h **** 
 985:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
 986:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 987:./lib/CMSIS/Include/core_cm3.h **** 
 988:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
 989:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 990:./lib/CMSIS/Include/core_cm3.h **** 
 991:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
 992:./lib/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
 993:./lib/CMSIS/Include/core_cm3.h **** 
 994:./lib/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
 995:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
 996:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
 997:./lib/CMSIS/Include/core_cm3.h **** 
 998:./lib/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
 999:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1000:./lib/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1001:./lib/CMSIS/Include/core_cm3.h **** 
1002:./lib/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1003:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1004:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1005:./lib/CMSIS/Include/core_cm3.h **** 
1006:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1007:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1008:./lib/CMSIS/Include/core_cm3.h **** 
1009:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1010:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1011:./lib/CMSIS/Include/core_cm3.h **** 
1012:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1013:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1014:./lib/CMSIS/Include/core_cm3.h **** 
1015:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1016:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1017:./lib/CMSIS/Include/core_cm3.h **** 
1018:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1019:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1020:./lib/CMSIS/Include/core_cm3.h **** 
1021:./lib/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1022:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1023:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1024:./lib/CMSIS/Include/core_cm3.h **** 
1025:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1026:./lib/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1027:./lib/CMSIS/Include/core_cm3.h **** 
1028:./lib/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1029:./lib/CMSIS/Include/core_cm3.h **** 
1030:./lib/CMSIS/Include/core_cm3.h **** 
1031:./lib/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1)
1032:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
1033:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1034:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1035:./lib/CMSIS/Include/core_cm3.h ****   @{
1036:./lib/CMSIS/Include/core_cm3.h ****  */
1037:./lib/CMSIS/Include/core_cm3.h **** 
1038:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1039:./lib/CMSIS/Include/core_cm3.h ****  */
1040:./lib/CMSIS/Include/core_cm3.h **** typedef struct
1041:./lib/CMSIS/Include/core_cm3.h **** {
1042:./lib/CMSIS/Include/core_cm3.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1043:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1044:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1045:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1046:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1047:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1048:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1049:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1050:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1051:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1052:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1053:./lib/CMSIS/Include/core_cm3.h **** } MPU_Type;
1054:./lib/CMSIS/Include/core_cm3.h **** 
1055:./lib/CMSIS/Include/core_cm3.h **** /* MPU Type Register */
1056:./lib/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1057:./lib/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1058:./lib/CMSIS/Include/core_cm3.h **** 
1059:./lib/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1060:./lib/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1061:./lib/CMSIS/Include/core_cm3.h **** 
1062:./lib/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1063:./lib/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1064:./lib/CMSIS/Include/core_cm3.h **** 
1065:./lib/CMSIS/Include/core_cm3.h **** /* MPU Control Register */
1066:./lib/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1067:./lib/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1068:./lib/CMSIS/Include/core_cm3.h **** 
1069:./lib/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1070:./lib/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1071:./lib/CMSIS/Include/core_cm3.h **** 
1072:./lib/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1073:./lib/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1074:./lib/CMSIS/Include/core_cm3.h **** 
1075:./lib/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register */
1076:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1077:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1078:./lib/CMSIS/Include/core_cm3.h **** 
1079:./lib/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register */
1080:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1081:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1082:./lib/CMSIS/Include/core_cm3.h **** 
1083:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1084:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1085:./lib/CMSIS/Include/core_cm3.h **** 
1086:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1087:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1088:./lib/CMSIS/Include/core_cm3.h **** 
1089:./lib/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register */
1090:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1091:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1092:./lib/CMSIS/Include/core_cm3.h **** 
1093:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1094:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1095:./lib/CMSIS/Include/core_cm3.h **** 
1096:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1097:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1098:./lib/CMSIS/Include/core_cm3.h **** 
1099:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1100:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1101:./lib/CMSIS/Include/core_cm3.h **** 
1102:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1103:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1104:./lib/CMSIS/Include/core_cm3.h **** 
1105:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1106:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1107:./lib/CMSIS/Include/core_cm3.h **** 
1108:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1109:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1110:./lib/CMSIS/Include/core_cm3.h **** 
1111:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1112:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1113:./lib/CMSIS/Include/core_cm3.h **** 
1114:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1115:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1116:./lib/CMSIS/Include/core_cm3.h **** 
1117:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1118:./lib/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1119:./lib/CMSIS/Include/core_cm3.h **** 
1120:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1121:./lib/CMSIS/Include/core_cm3.h **** #endif
1122:./lib/CMSIS/Include/core_cm3.h **** 
1123:./lib/CMSIS/Include/core_cm3.h **** 
1124:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_core_register
1125:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1126:./lib/CMSIS/Include/core_cm3.h ****     \brief      Type definitions for the Core Debug Registers
1127:./lib/CMSIS/Include/core_cm3.h ****   @{
1128:./lib/CMSIS/Include/core_cm3.h ****  */
1129:./lib/CMSIS/Include/core_cm3.h **** 
1130:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1131:./lib/CMSIS/Include/core_cm3.h ****  */
1132:./lib/CMSIS/Include/core_cm3.h **** typedef struct
1133:./lib/CMSIS/Include/core_cm3.h **** {
1134:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1135:./lib/CMSIS/Include/core_cm3.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1136:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1137:./lib/CMSIS/Include/core_cm3.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1138:./lib/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1139:./lib/CMSIS/Include/core_cm3.h **** 
1140:./lib/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register */
1141:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1142:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1143:./lib/CMSIS/Include/core_cm3.h **** 
1144:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1145:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1146:./lib/CMSIS/Include/core_cm3.h **** 
1147:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1148:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1149:./lib/CMSIS/Include/core_cm3.h **** 
1150:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1151:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1152:./lib/CMSIS/Include/core_cm3.h **** 
1153:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1154:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1155:./lib/CMSIS/Include/core_cm3.h **** 
1156:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1157:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1158:./lib/CMSIS/Include/core_cm3.h **** 
1159:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1160:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1161:./lib/CMSIS/Include/core_cm3.h **** 
1162:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1163:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1164:./lib/CMSIS/Include/core_cm3.h **** 
1165:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1166:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1167:./lib/CMSIS/Include/core_cm3.h **** 
1168:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1169:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1170:./lib/CMSIS/Include/core_cm3.h **** 
1171:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1172:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1173:./lib/CMSIS/Include/core_cm3.h **** 
1174:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1175:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1176:./lib/CMSIS/Include/core_cm3.h **** 
1177:./lib/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register */
1178:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1179:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1180:./lib/CMSIS/Include/core_cm3.h **** 
1181:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1182:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1183:./lib/CMSIS/Include/core_cm3.h **** 
1184:./lib/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register */
1185:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1186:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1187:./lib/CMSIS/Include/core_cm3.h **** 
1188:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1189:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1190:./lib/CMSIS/Include/core_cm3.h **** 
1191:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1192:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1193:./lib/CMSIS/Include/core_cm3.h **** 
1194:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1195:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1196:./lib/CMSIS/Include/core_cm3.h **** 
1197:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1198:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1199:./lib/CMSIS/Include/core_cm3.h **** 
1200:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1201:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1202:./lib/CMSIS/Include/core_cm3.h **** 
1203:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1204:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1205:./lib/CMSIS/Include/core_cm3.h **** 
1206:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1207:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1208:./lib/CMSIS/Include/core_cm3.h **** 
1209:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1210:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1211:./lib/CMSIS/Include/core_cm3.h **** 
1212:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1213:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1214:./lib/CMSIS/Include/core_cm3.h **** 
1215:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1216:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1217:./lib/CMSIS/Include/core_cm3.h **** 
1218:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1219:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1220:./lib/CMSIS/Include/core_cm3.h **** 
1221:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1222:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1223:./lib/CMSIS/Include/core_cm3.h **** 
1224:./lib/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1225:./lib/CMSIS/Include/core_cm3.h **** 
1226:./lib/CMSIS/Include/core_cm3.h **** 
1227:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup    CMSIS_core_register
1228:./lib/CMSIS/Include/core_cm3.h ****     \defgroup   CMSIS_core_base     Core Definitions
1229:./lib/CMSIS/Include/core_cm3.h ****     \brief      Definitions for base addresses, unions, and structures.
1230:./lib/CMSIS/Include/core_cm3.h ****   @{
1231:./lib/CMSIS/Include/core_cm3.h ****  */
1232:./lib/CMSIS/Include/core_cm3.h **** 
1233:./lib/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1234:./lib/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1235:./lib/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1236:./lib/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1237:./lib/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1238:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1239:./lib/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1240:./lib/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1241:./lib/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1242:./lib/CMSIS/Include/core_cm3.h **** 
1243:./lib/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1244:./lib/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1245:./lib/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1246:./lib/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1247:./lib/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1248:./lib/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1249:./lib/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1250:./lib/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1251:./lib/CMSIS/Include/core_cm3.h **** 
1252:./lib/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1)
1253:./lib/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1254:./lib/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1255:./lib/CMSIS/Include/core_cm3.h **** #endif
1256:./lib/CMSIS/Include/core_cm3.h **** 
1257:./lib/CMSIS/Include/core_cm3.h **** /*@} */
1258:./lib/CMSIS/Include/core_cm3.h **** 
1259:./lib/CMSIS/Include/core_cm3.h **** 
1260:./lib/CMSIS/Include/core_cm3.h **** 
1261:./lib/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1262:./lib/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1263:./lib/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1264:./lib/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1265:./lib/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1266:./lib/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1267:./lib/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1268:./lib/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1269:./lib/CMSIS/Include/core_cm3.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1270:./lib/CMSIS/Include/core_cm3.h **** */
1271:./lib/CMSIS/Include/core_cm3.h **** 
1272:./lib/CMSIS/Include/core_cm3.h **** 
1273:./lib/CMSIS/Include/core_cm3.h **** 
1274:./lib/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1275:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1276:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1277:./lib/CMSIS/Include/core_cm3.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1278:./lib/CMSIS/Include/core_cm3.h ****     @{
1279:./lib/CMSIS/Include/core_cm3.h ****  */
1280:./lib/CMSIS/Include/core_cm3.h **** 
1281:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Set Priority Grouping
1282:./lib/CMSIS/Include/core_cm3.h **** 
1283:./lib/CMSIS/Include/core_cm3.h ****   The function sets the priority grouping field using the required unlock sequence.
1284:./lib/CMSIS/Include/core_cm3.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1285:./lib/CMSIS/Include/core_cm3.h ****   Only values from 0..7 are used.
1286:./lib/CMSIS/Include/core_cm3.h ****   In case of a conflict between priority grouping and available
1287:./lib/CMSIS/Include/core_cm3.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1288:./lib/CMSIS/Include/core_cm3.h **** 
1289:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      PriorityGroup  Priority grouping field.
1290:./lib/CMSIS/Include/core_cm3.h ****  */
1291:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1292:./lib/CMSIS/Include/core_cm3.h **** {
1293:./lib/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1294:./lib/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1295:./lib/CMSIS/Include/core_cm3.h **** 
1296:./lib/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1297:./lib/CMSIS/Include/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1298:./lib/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                 |
1299:./lib/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1300:./lib/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1301:./lib/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1302:./lib/CMSIS/Include/core_cm3.h **** }
1303:./lib/CMSIS/Include/core_cm3.h **** 
1304:./lib/CMSIS/Include/core_cm3.h **** 
1305:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Get Priority Grouping
1306:./lib/CMSIS/Include/core_cm3.h **** 
1307:./lib/CMSIS/Include/core_cm3.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1308:./lib/CMSIS/Include/core_cm3.h **** 
1309:./lib/CMSIS/Include/core_cm3.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1310:./lib/CMSIS/Include/core_cm3.h ****  */
1311:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1312:./lib/CMSIS/Include/core_cm3.h **** {
1313:./lib/CMSIS/Include/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1314:./lib/CMSIS/Include/core_cm3.h **** }
1315:./lib/CMSIS/Include/core_cm3.h **** 
1316:./lib/CMSIS/Include/core_cm3.h **** 
1317:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Enable External Interrupt
1318:./lib/CMSIS/Include/core_cm3.h **** 
1319:./lib/CMSIS/Include/core_cm3.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1320:./lib/CMSIS/Include/core_cm3.h **** 
1321:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1322:./lib/CMSIS/Include/core_cm3.h ****  */
1323:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1324:./lib/CMSIS/Include/core_cm3.h **** {
1325:./lib/CMSIS/Include/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
1326:./lib/CMSIS/Include/core_cm3.h **** }
1327:./lib/CMSIS/Include/core_cm3.h **** 
1328:./lib/CMSIS/Include/core_cm3.h **** 
1329:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Disable External Interrupt
1330:./lib/CMSIS/Include/core_cm3.h **** 
1331:./lib/CMSIS/Include/core_cm3.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1332:./lib/CMSIS/Include/core_cm3.h **** 
1333:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1334:./lib/CMSIS/Include/core_cm3.h ****  */
1335:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1336:./lib/CMSIS/Include/core_cm3.h **** {
1337:./lib/CMSIS/Include/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1338:./lib/CMSIS/Include/core_cm3.h **** }
1339:./lib/CMSIS/Include/core_cm3.h **** 
1340:./lib/CMSIS/Include/core_cm3.h **** 
1341:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Get Pending Interrupt
1342:./lib/CMSIS/Include/core_cm3.h **** 
1343:./lib/CMSIS/Include/core_cm3.h ****     The function reads the pending register in the NVIC and returns the pending bit
1344:./lib/CMSIS/Include/core_cm3.h ****     for the specified interrupt.
1345:./lib/CMSIS/Include/core_cm3.h **** 
1346:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  Interrupt number.
1347:./lib/CMSIS/Include/core_cm3.h **** 
1348:./lib/CMSIS/Include/core_cm3.h ****     \return             0  Interrupt status is not pending.
1349:./lib/CMSIS/Include/core_cm3.h ****     \return             1  Interrupt status is pending.
1350:./lib/CMSIS/Include/core_cm3.h ****  */
1351:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1352:./lib/CMSIS/Include/core_cm3.h **** {
1353:./lib/CMSIS/Include/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1354:./lib/CMSIS/Include/core_cm3.h **** }
1355:./lib/CMSIS/Include/core_cm3.h **** 
1356:./lib/CMSIS/Include/core_cm3.h **** 
1357:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Set Pending Interrupt
1358:./lib/CMSIS/Include/core_cm3.h **** 
1359:./lib/CMSIS/Include/core_cm3.h ****     The function sets the pending bit of an external interrupt.
1360:./lib/CMSIS/Include/core_cm3.h **** 
1361:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1362:./lib/CMSIS/Include/core_cm3.h ****  */
1363:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1364:./lib/CMSIS/Include/core_cm3.h **** {
1365:./lib/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1366:./lib/CMSIS/Include/core_cm3.h **** }
1367:./lib/CMSIS/Include/core_cm3.h **** 
1368:./lib/CMSIS/Include/core_cm3.h **** 
1369:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Clear Pending Interrupt
1370:./lib/CMSIS/Include/core_cm3.h **** 
1371:./lib/CMSIS/Include/core_cm3.h ****     The function clears the pending bit of an external interrupt.
1372:./lib/CMSIS/Include/core_cm3.h **** 
1373:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1374:./lib/CMSIS/Include/core_cm3.h ****  */
1375:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1376:./lib/CMSIS/Include/core_cm3.h **** {
1377:./lib/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1378:./lib/CMSIS/Include/core_cm3.h **** }
1379:./lib/CMSIS/Include/core_cm3.h **** 
1380:./lib/CMSIS/Include/core_cm3.h **** 
1381:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Get Active Interrupt
1382:./lib/CMSIS/Include/core_cm3.h **** 
1383:./lib/CMSIS/Include/core_cm3.h ****     The function reads the active register in NVIC and returns the active bit.
1384:./lib/CMSIS/Include/core_cm3.h **** 
1385:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  Interrupt number.
1386:./lib/CMSIS/Include/core_cm3.h **** 
1387:./lib/CMSIS/Include/core_cm3.h ****     \return             0  Interrupt status is not active.
1388:./lib/CMSIS/Include/core_cm3.h ****     \return             1  Interrupt status is active.
1389:./lib/CMSIS/Include/core_cm3.h ****  */
1390:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1391:./lib/CMSIS/Include/core_cm3.h **** {
1392:./lib/CMSIS/Include/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1393:./lib/CMSIS/Include/core_cm3.h **** }
1394:./lib/CMSIS/Include/core_cm3.h **** 
1395:./lib/CMSIS/Include/core_cm3.h **** 
1396:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Set Interrupt Priority
1397:./lib/CMSIS/Include/core_cm3.h **** 
1398:./lib/CMSIS/Include/core_cm3.h ****     The function sets the priority of an interrupt.
1399:./lib/CMSIS/Include/core_cm3.h **** 
1400:./lib/CMSIS/Include/core_cm3.h ****     \note The priority cannot be set for every core interrupt.
1401:./lib/CMSIS/Include/core_cm3.h **** 
1402:./lib/CMSIS/Include/core_cm3.h ****     \param [in]      IRQn  Interrupt number.
1403:./lib/CMSIS/Include/core_cm3.h ****     \param [in]  priority  Priority to set.
1404:./lib/CMSIS/Include/core_cm3.h ****  */
1405:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1406:./lib/CMSIS/Include/core_cm3.h **** {
1407:./lib/CMSIS/Include/core_cm3.h ****   if(IRQn < 0) {
1408:./lib/CMSIS/Include/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1409:./lib/CMSIS/Include/core_cm3.h ****   else {
1410:./lib/CMSIS/Include/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1411:./lib/CMSIS/Include/core_cm3.h **** }
1412:./lib/CMSIS/Include/core_cm3.h **** 
1413:./lib/CMSIS/Include/core_cm3.h **** 
1414:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Get Interrupt Priority
1415:./lib/CMSIS/Include/core_cm3.h **** 
1416:./lib/CMSIS/Include/core_cm3.h ****     The function reads the priority of an interrupt. The interrupt
1417:./lib/CMSIS/Include/core_cm3.h ****     number can be positive to specify an external (device specific)
1418:./lib/CMSIS/Include/core_cm3.h ****     interrupt, or negative to specify an internal (core) interrupt.
1419:./lib/CMSIS/Include/core_cm3.h **** 
1420:./lib/CMSIS/Include/core_cm3.h **** 
1421:./lib/CMSIS/Include/core_cm3.h ****     \param [in]   IRQn  Interrupt number.
1422:./lib/CMSIS/Include/core_cm3.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1423:./lib/CMSIS/Include/core_cm3.h ****                         priority bits of the microcontroller.
1424:./lib/CMSIS/Include/core_cm3.h ****  */
1425:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1426:./lib/CMSIS/Include/core_cm3.h **** {
1427:./lib/CMSIS/Include/core_cm3.h **** 
1428:./lib/CMSIS/Include/core_cm3.h ****   if(IRQn < 0) {
1429:./lib/CMSIS/Include/core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1430:./lib/CMSIS/Include/core_cm3.h ****   else {
1431:./lib/CMSIS/Include/core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1432:./lib/CMSIS/Include/core_cm3.h **** }
1433:./lib/CMSIS/Include/core_cm3.h **** 
1434:./lib/CMSIS/Include/core_cm3.h **** 
1435:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Encode Priority
1436:./lib/CMSIS/Include/core_cm3.h **** 
1437:./lib/CMSIS/Include/core_cm3.h ****     The function encodes the priority for an interrupt with the given priority group,
1438:./lib/CMSIS/Include/core_cm3.h ****     preemptive priority value, and subpriority value.
1439:./lib/CMSIS/Include/core_cm3.h ****     In case of a conflict between priority grouping and available
1440:./lib/CMSIS/Include/core_cm3.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1441:./lib/CMSIS/Include/core_cm3.h **** 
1442:./lib/CMSIS/Include/core_cm3.h ****     \param [in]     PriorityGroup  Used priority group.
1443:./lib/CMSIS/Include/core_cm3.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1444:./lib/CMSIS/Include/core_cm3.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1445:./lib/CMSIS/Include/core_cm3.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1446:./lib/CMSIS/Include/core_cm3.h ****  */
1447:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1448:./lib/CMSIS/Include/core_cm3.h **** {
1449:./lib/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1450:./lib/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1451:./lib/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1452:./lib/CMSIS/Include/core_cm3.h **** 
1453:./lib/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1454:./lib/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1455:./lib/CMSIS/Include/core_cm3.h **** 
1456:./lib/CMSIS/Include/core_cm3.h ****   return (
1457:./lib/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1458:./lib/CMSIS/Include/core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1459:./lib/CMSIS/Include/core_cm3.h ****          );
1460:./lib/CMSIS/Include/core_cm3.h **** }
1461:./lib/CMSIS/Include/core_cm3.h **** 
1462:./lib/CMSIS/Include/core_cm3.h **** 
1463:./lib/CMSIS/Include/core_cm3.h **** /** \brief  Decode Priority
1464:./lib/CMSIS/Include/core_cm3.h **** 
1465:./lib/CMSIS/Include/core_cm3.h ****     The function decodes an interrupt priority value with a given priority group to
1466:./lib/CMSIS/Include/core_cm3.h ****     preemptive priority value and subpriority value.
1467:./lib/CMSIS/Include/core_cm3.h ****     In case of a conflict between priority grouping and available
1468:./lib/CMSIS/Include/core_cm3.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1469:./lib/CMSIS/Include/core_cm3.h **** 
1470:./lib/CMSIS/Include/core_cm3.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1471:./lib/CMSIS/Include/core_cm3.h ****     \param [in]     PriorityGroup  Used priority group.
1472:./lib/CMSIS/Include/core_cm3.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1473:./lib/CMSIS/Include/core_cm3.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1474:./lib/CMSIS/Include/core_cm3.h ****  */
1475:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1476:./lib/CMSIS/Include/core_cm3.h **** {
1477:./lib/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1478:./lib/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1479:./lib/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1480:./lib/CMSIS/Include/core_cm3.h **** 
1481:./lib/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1482:./lib/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1483:./lib/CMSIS/Include/core_cm3.h **** 
1484:./lib/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1485:./lib/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1486:./lib/CMSIS/Include/core_cm3.h **** }
1487:./lib/CMSIS/Include/core_cm3.h **** 
1488:./lib/CMSIS/Include/core_cm3.h **** 
1489:./lib/CMSIS/Include/core_cm3.h **** /** \brief  System Reset
1490:./lib/CMSIS/Include/core_cm3.h **** 
1491:./lib/CMSIS/Include/core_cm3.h ****     The function initiates a system reset request to reset the MCU.
1492:./lib/CMSIS/Include/core_cm3.h ****  */
1493:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1494:./lib/CMSIS/Include/core_cm3.h **** {
1495:./lib/CMSIS/Include/core_cm3.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1496:./lib/CMSIS/Include/core_cm3.h ****                                                                   buffered write are completed befo
1497:./lib/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1498:./lib/CMSIS/Include/core_cm3.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1499:./lib/CMSIS/Include/core_cm3.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1500:./lib/CMSIS/Include/core_cm3.h ****   __DSB();                                                     /* Ensure completion of memory acces
1501:./lib/CMSIS/Include/core_cm3.h ****   while(1);                                                    /* wait until reset */
1502:./lib/CMSIS/Include/core_cm3.h **** }
1503:./lib/CMSIS/Include/core_cm3.h **** 
1504:./lib/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1505:./lib/CMSIS/Include/core_cm3.h **** 
1506:./lib/CMSIS/Include/core_cm3.h **** 
1507:./lib/CMSIS/Include/core_cm3.h **** 
1508:./lib/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1509:./lib/CMSIS/Include/core_cm3.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1510:./lib/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1511:./lib/CMSIS/Include/core_cm3.h ****     \brief      Functions that configure the System.
1512:./lib/CMSIS/Include/core_cm3.h ****   @{
1513:./lib/CMSIS/Include/core_cm3.h ****  */
1514:./lib/CMSIS/Include/core_cm3.h **** 
1515:./lib/CMSIS/Include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0)
1516:./lib/CMSIS/Include/core_cm3.h **** 
1517:./lib/CMSIS/Include/core_cm3.h **** /** \brief  System Tick Configuration
1518:./lib/CMSIS/Include/core_cm3.h **** 
1519:./lib/CMSIS/Include/core_cm3.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1520:./lib/CMSIS/Include/core_cm3.h ****     Counter is in free running mode to generate periodic interrupts.
1521:./lib/CMSIS/Include/core_cm3.h **** 
1522:./lib/CMSIS/Include/core_cm3.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1523:./lib/CMSIS/Include/core_cm3.h **** 
1524:./lib/CMSIS/Include/core_cm3.h ****     \return          0  Function succeeded.
1525:./lib/CMSIS/Include/core_cm3.h ****     \return          1  Function failed.
1526:./lib/CMSIS/Include/core_cm3.h **** 
1527:./lib/CMSIS/Include/core_cm3.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1528:./lib/CMSIS/Include/core_cm3.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1529:./lib/CMSIS/Include/core_cm3.h ****     must contain a vendor-specific implementation of this function.
1530:./lib/CMSIS/Include/core_cm3.h **** 
1531:./lib/CMSIS/Include/core_cm3.h ****  */
1532:./lib/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1533:./lib/CMSIS/Include/core_cm3.h **** {
1534:./lib/CMSIS/Include/core_cm3.h ****   if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
  58              		.loc 2 1534 0
  59 0016 411E     		subs	r1, r0, #1
  60 0018 B1F1807F 		cmp	r1, #16777216
  61 001c 29D2     		bcs	.L4
1535:./lib/CMSIS/Include/core_cm3.h **** 
1536:./lib/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  62              		.loc 2 1536 0
  63 001e 164B     		ldr	r3, .L6+4
  64 0020 5960     		str	r1, [r3, #4]
  65              	.LVL6:
  66              	.LBB20:
  67              	.LBB21:
1408:./lib/CMSIS/Include/core_cm3.h ****   else {
  68              		.loc 2 1408 0
  69 0022 F024     		movs	r4, #240
  70 0024 154A     		ldr	r2, .L6+8
  71 0026 82F82340 		strb	r4, [r2, #35]
  72              	.LBE21:
  73              	.LBE20:
1537:./lib/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrup
1538:./lib/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  74              		.loc 2 1538 0
  75 002a 0024     		movs	r4, #0
  76 002c 9C60     		str	r4, [r3, #8]
1539:./lib/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  77              		.loc 2 1539 0
  78 002e 0720     		movs	r0, #7
  79              	.LVL7:
  80 0030 1860     		str	r0, [r3, #0]
  81              	.LBE19:
  82              	.LBE18:
  49:src/systick.c **** 	{ 
  50:src/systick.c **** 		/* Capture error */ 
  51:src/systick.c **** 		while (1);
  52:src/systick.c **** 	}
  53:src/systick.c **** 	
  54:src/systick.c **** 	/* Making MicroSecond-Order Timer */
  55:src/systick.c **** 	/* Enable timer clock */
  56:src/systick.c **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE);
  83              		.loc 1 56 0
  84 0032 0820     		movs	r0, #8
  85 0034 0121     		movs	r1, #1
  86              	.LVL8:
  87 0036 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  88              	.LVL9:
  57:src/systick.c **** 
  58:src/systick.c **** 	/* Time base configuration */
  59:src/systick.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  60:src/systick.c **** 	TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
  89              		.loc 1 60 0
  90 003a 03A8     		add	r0, sp, #12
  91 003c FFF7FEFF 		bl	TIM_TimeBaseStructInit
  92              	.LVL10:
  61:src/systick.c **** 	TIM_TimeBaseStructure.TIM_Prescaler = (SystemCoreClock / USEC_INTERVAL) - 1;
  93              		.loc 1 61 0
  94 0040 2968     		ldr	r1, [r5, #0]
  95 0042 0F4B     		ldr	r3, .L6+12
  96 0044 B1FBF3F2 		udiv	r2, r1, r3
  97 0048 501E     		subs	r0, r2, #1
  98 004a ADF80C00 		strh	r0, [sp, #12]	@ movhi
  62:src/systick.c **** 	TIM_TimeBaseStructure.TIM_Period = UINT16_MAX; 
  99              		.loc 1 62 0
 100 004e 4FF6FF71 		movw	r1, #65535
 101 0052 ADF81010 		strh	r1, [sp, #16]	@ movhi
  63:src/systick.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 102              		.loc 1 63 0
 103 0056 ADF81240 		strh	r4, [sp, #18]	@ movhi
  64:src/systick.c **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 104              		.loc 1 64 0
 105 005a ADF80E40 		strh	r4, [sp, #14]	@ movhi
  65:src/systick.c **** 	TIM_TimeBaseInit(TIM5, &TIM_TimeBaseStructure);
 106              		.loc 1 65 0
 107 005e 0948     		ldr	r0, .L6+16
 108 0060 03A9     		add	r1, sp, #12
 109 0062 FFF7FEFF 		bl	TIM_TimeBaseInit
 110              	.LVL11:
  66:src/systick.c **** 
  67:src/systick.c **** 	/* Enable counter */
  68:src/systick.c **** 	TIM_Cmd(TIM5, ENABLE);
 111              		.loc 1 68 0
 112 0066 0748     		ldr	r0, .L6+16
 113 0068 0121     		movs	r1, #1
 114 006a FFF7FEFF 		bl	TIM_Cmd
 115              	.LVL12:
  69:src/systick.c **** }
 116              		.loc 1 69 0
 117 006e 07B0     		add	sp, sp, #28
 118 0070 30BD     		pop	{r4, r5, pc}
 119              	.LVL13:
 120              	.L4:
 121 0072 FEE7     		b	.L4
 122              	.L7:
 123              		.align	2
 124              	.L6:
 125 0074 00000000 		.word	SystemCoreClock
 126 0078 10E000E0 		.word	-536813552
 127 007c 00ED00E0 		.word	-536810240
 128 0080 40420F00 		.word	1000000
 129 0084 000C0040 		.word	1073744896
 130              		.cfi_endproc
 131              	.LFE57:
 133              		.section	.text._delay_ms,"ax",%progbits
 134              		.align	1
 135              		.global	_delay_ms
 136              		.thumb
 137              		.thumb_func
 139              	_delay_ms:
 140              	.LFB58:
  70:src/systick.c **** 
  71:src/systick.c **** 
  72:src/systick.c **** /**************************************************************************/
  73:src/systick.c **** /*! 
  74:src/systick.c ****     @brief	Delay Millisecond Order (upto 16777214mSec!)
  75:src/systick.c **** 	@param	mSec: 24-bit value due to systick downcount timer
  76:src/systick.c ****     @retval	none
  77:src/systick.c **** */
  78:src/systick.c **** /**************************************************************************/
  79:src/systick.c **** void _delay_ms(__IO uint32_t mSec)
  80:src/systick.c **** { 
 141              		.loc 1 80 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL14:
 147 0000 82B0     		sub	sp, sp, #8
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 8
 150 0002 0190     		str	r0, [sp, #4]
  81:src/systick.c **** 	TimingDelay = mSec;
 151              		.loc 1 81 0
 152 0004 019A     		ldr	r2, [sp, #4]
 153 0006 034B     		ldr	r3, .L11
 154 0008 1A60     		str	r2, [r3, #0]
 155              	.L9:
  82:src/systick.c **** 
  83:src/systick.c **** 	while(TimingDelay != 0);
 156              		.loc 1 83 0 discriminator 1
 157 000a 1868     		ldr	r0, [r3, #0]
 158 000c 0028     		cmp	r0, #0
 159 000e FCD1     		bne	.L9
  84:src/systick.c **** }
 160              		.loc 1 84 0
 161 0010 02B0     		add	sp, sp, #8
 162 0012 7047     		bx	lr
 163              	.L12:
 164              		.align	2
 165              	.L11:
 166 0014 00000000 		.word	.LANCHOR0
 167              		.cfi_endproc
 168              	.LFE58:
 170              		.section	.text._delay_us,"ax",%progbits
 171              		.align	1
 172              		.global	_delay_us
 173              		.thumb
 174              		.thumb_func
 176              	_delay_us:
 177              	.LFB59:
  85:src/systick.c **** 
  86:src/systick.c **** /**************************************************************************/
  87:src/systick.c **** /*! 
  88:src/systick.c ****     @brief	Delay Microsecond Order (upto 65534uSec!)
  89:src/systick.c **** 	@param	uSec 
  90:src/systick.c ****     @retval	none
  91:src/systick.c **** */
  92:src/systick.c **** /**************************************************************************/
  93:src/systick.c **** void _delay_us(__IO uint16_t uSec)
  94:src/systick.c **** {
 178              		.loc 1 94 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL15:
 184 0000 82B0     		sub	sp, sp, #8
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 8
 187 0002 ADF80600 		strh	r0, [sp, #6]	@ movhi
  95:src/systick.c **** 	uint16_t start = TIM5->CNT;
 188              		.loc 1 95 0
 189 0006 074B     		ldr	r3, .L16
 190 0008 998C     		ldrh	r1, [r3, #36]
 191 000a 88B2     		uxth	r0, r1
 192              	.LVL16:
 193              	.L14:
  96:src/systick.c **** 	/* use 16 bit count wrap around */
  97:src/systick.c **** 	while((uint16_t)(TIM5->CNT - start) <= uSec);
 194              		.loc 1 97 0 discriminator 1
 195 000c 054A     		ldr	r2, .L16
 196 000e 918C     		ldrh	r1, [r2, #36]
 197 0010 BDF80630 		ldrh	r3, [sp, #6]
 198              	.LVL17:
 199 0014 9BB2     		uxth	r3, r3
 200              	.LVL18:
 201 0016 0A1A     		subs	r2, r1, r0
 202 0018 91B2     		uxth	r1, r2
 203 001a 9942     		cmp	r1, r3
 204 001c F6D9     		bls	.L14
  98:src/systick.c **** 	
  99:src/systick.c **** 	/* This is the stupid method */
 100:src/systick.c **** 	/*
 101:src/systick.c **** 	while(uSec--){ 
 102:src/systick.c **** 					__NOP();
 103:src/systick.c **** 					__NOP();
 104:src/systick.c **** 					__NOP();
 105:src/systick.c **** 					__NOP();
 106:src/systick.c **** 					__NOP();
 107:src/systick.c **** 					__NOP();
 108:src/systick.c **** 					}
 109:src/systick.c **** 	*/
 110:src/systick.c **** }
 205              		.loc 1 110 0
 206 001e 02B0     		add	sp, sp, #8
 207 0020 7047     		bx	lr
 208              	.L17:
 209 0022 00BF     		.align	2
 210              	.L16:
 211 0024 000C0040 		.word	1073744896
 212              		.cfi_endproc
 213              	.LFE59:
 215              		.section	.text.Delay,"ax",%progbits
 216              		.align	1
 217              		.global	Delay
 218              		.thumb
 219              		.thumb_func
 221              	Delay:
 222              	.LFB60:
 111:src/systick.c **** 
 112:src/systick.c **** /**************************************************************************/
 113:src/systick.c **** /*! 
 114:src/systick.c ****     @brief	Delay Stupid.
 115:src/systick.c **** 	@param	nCount
 116:src/systick.c ****     @retval	none
 117:src/systick.c **** */
 118:src/systick.c **** /**************************************************************************/
 119:src/systick.c **** void Delay(__IO uint32_t nCount)
 120:src/systick.c **** {
 223              		.loc 1 120 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL19:
 229 0000 82B0     		sub	sp, sp, #8
 230              	.LCFI4:
 231              		.cfi_def_cfa_offset 8
 232 0002 0190     		str	r0, [sp, #4]
 233              	.LVL20:
 234              	.L19:
 121:src/systick.c **** 	while(nCount--){ 
 235              		.loc 1 121 0 discriminator 1
 236 0004 019B     		ldr	r3, [sp, #4]
 237 0006 5A1E     		subs	r2, r3, #1
 238              	.LVL21:
 239 0008 0192     		str	r2, [sp, #4]
 240              	.LVL22:
 241 000a 33B1     		cbz	r3, .L21
 242              	.L20:
 243              	.LBB22:
 244              	.LBB23:
 245              		.file 3 "./lib/CMSIS/Include/core_cmInstr.h"
   1:./lib/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:./lib/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:./lib/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:./lib/CMSIS/Include/core_cmInstr.h ****  * @version  V3.20
   5:./lib/CMSIS/Include/core_cmInstr.h ****  * @date     05. March 2013
   6:./lib/CMSIS/Include/core_cmInstr.h ****  *
   7:./lib/CMSIS/Include/core_cmInstr.h ****  * @note
   8:./lib/CMSIS/Include/core_cmInstr.h ****  *
   9:./lib/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:./lib/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:./lib/CMSIS/Include/core_cmInstr.h **** 
  12:./lib/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:./lib/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:./lib/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:./lib/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:./lib/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:./lib/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:./lib/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:./lib/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:./lib/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:./lib/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:./lib/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:./lib/CMSIS/Include/core_cmInstr.h ****    *
  24:./lib/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:./lib/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:./lib/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:./lib/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:./lib/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:./lib/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:./lib/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:./lib/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:./lib/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:./lib/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:./lib/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:./lib/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:./lib/CMSIS/Include/core_cmInstr.h **** 
  37:./lib/CMSIS/Include/core_cmInstr.h **** 
  38:./lib/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:./lib/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:./lib/CMSIS/Include/core_cmInstr.h **** 
  41:./lib/CMSIS/Include/core_cmInstr.h **** 
  42:./lib/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:./lib/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:./lib/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:./lib/CMSIS/Include/core_cmInstr.h ****   @{
  46:./lib/CMSIS/Include/core_cmInstr.h **** */
  47:./lib/CMSIS/Include/core_cmInstr.h **** 
  48:./lib/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:./lib/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:./lib/CMSIS/Include/core_cmInstr.h **** 
  51:./lib/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:./lib/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:./lib/CMSIS/Include/core_cmInstr.h **** #endif
  54:./lib/CMSIS/Include/core_cmInstr.h **** 
  55:./lib/CMSIS/Include/core_cmInstr.h **** 
  56:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:./lib/CMSIS/Include/core_cmInstr.h **** 
  58:./lib/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:./lib/CMSIS/Include/core_cmInstr.h ****  */
  60:./lib/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:./lib/CMSIS/Include/core_cmInstr.h **** 
  62:./lib/CMSIS/Include/core_cmInstr.h **** 
  63:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:./lib/CMSIS/Include/core_cmInstr.h **** 
  65:./lib/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:./lib/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:./lib/CMSIS/Include/core_cmInstr.h ****  */
  68:./lib/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:./lib/CMSIS/Include/core_cmInstr.h **** 
  70:./lib/CMSIS/Include/core_cmInstr.h **** 
  71:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:./lib/CMSIS/Include/core_cmInstr.h **** 
  73:./lib/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:./lib/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:./lib/CMSIS/Include/core_cmInstr.h ****  */
  76:./lib/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:./lib/CMSIS/Include/core_cmInstr.h **** 
  78:./lib/CMSIS/Include/core_cmInstr.h **** 
  79:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:./lib/CMSIS/Include/core_cmInstr.h **** 
  81:./lib/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:./lib/CMSIS/Include/core_cmInstr.h ****  */
  83:./lib/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:./lib/CMSIS/Include/core_cmInstr.h **** 
  85:./lib/CMSIS/Include/core_cmInstr.h **** 
  86:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:./lib/CMSIS/Include/core_cmInstr.h **** 
  88:./lib/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:./lib/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:./lib/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:./lib/CMSIS/Include/core_cmInstr.h ****  */
  92:./lib/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:./lib/CMSIS/Include/core_cmInstr.h **** 
  94:./lib/CMSIS/Include/core_cmInstr.h **** 
  95:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:./lib/CMSIS/Include/core_cmInstr.h **** 
  97:./lib/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:./lib/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:./lib/CMSIS/Include/core_cmInstr.h ****  */
 100:./lib/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:./lib/CMSIS/Include/core_cmInstr.h **** 
 102:./lib/CMSIS/Include/core_cmInstr.h **** 
 103:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:./lib/CMSIS/Include/core_cmInstr.h **** 
 105:./lib/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:./lib/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:./lib/CMSIS/Include/core_cmInstr.h ****  */
 108:./lib/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:./lib/CMSIS/Include/core_cmInstr.h **** 
 110:./lib/CMSIS/Include/core_cmInstr.h **** 
 111:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:./lib/CMSIS/Include/core_cmInstr.h **** 
 113:./lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:./lib/CMSIS/Include/core_cmInstr.h **** 
 115:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:./lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 117:./lib/CMSIS/Include/core_cmInstr.h ****  */
 118:./lib/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 119:./lib/CMSIS/Include/core_cmInstr.h **** 
 120:./lib/CMSIS/Include/core_cmInstr.h **** 
 121:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:./lib/CMSIS/Include/core_cmInstr.h **** 
 123:./lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:./lib/CMSIS/Include/core_cmInstr.h **** 
 125:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:./lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:./lib/CMSIS/Include/core_cmInstr.h ****  */
 128:./lib/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:./lib/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:./lib/CMSIS/Include/core_cmInstr.h **** {
 131:./lib/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 132:./lib/CMSIS/Include/core_cmInstr.h ****   bx lr
 133:./lib/CMSIS/Include/core_cmInstr.h **** }
 134:./lib/CMSIS/Include/core_cmInstr.h **** #endif
 135:./lib/CMSIS/Include/core_cmInstr.h **** 
 136:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:./lib/CMSIS/Include/core_cmInstr.h **** 
 138:./lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:./lib/CMSIS/Include/core_cmInstr.h **** 
 140:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:./lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 142:./lib/CMSIS/Include/core_cmInstr.h ****  */
 143:./lib/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:./lib/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:./lib/CMSIS/Include/core_cmInstr.h **** {
 146:./lib/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 147:./lib/CMSIS/Include/core_cmInstr.h ****   bx lr
 148:./lib/CMSIS/Include/core_cmInstr.h **** }
 149:./lib/CMSIS/Include/core_cmInstr.h **** #endif
 150:./lib/CMSIS/Include/core_cmInstr.h **** 
 151:./lib/CMSIS/Include/core_cmInstr.h **** 
 152:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:./lib/CMSIS/Include/core_cmInstr.h **** 
 154:./lib/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:./lib/CMSIS/Include/core_cmInstr.h **** 
 156:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:./lib/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 159:./lib/CMSIS/Include/core_cmInstr.h ****  */
 160:./lib/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 161:./lib/CMSIS/Include/core_cmInstr.h **** 
 162:./lib/CMSIS/Include/core_cmInstr.h **** 
 163:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 164:./lib/CMSIS/Include/core_cmInstr.h **** 
 165:./lib/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:./lib/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:./lib/CMSIS/Include/core_cmInstr.h **** 
 168:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:./lib/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 170:./lib/CMSIS/Include/core_cmInstr.h ****  */
 171:./lib/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 172:./lib/CMSIS/Include/core_cmInstr.h **** 
 173:./lib/CMSIS/Include/core_cmInstr.h **** 
 174:./lib/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 175:./lib/CMSIS/Include/core_cmInstr.h **** 
 176:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 177:./lib/CMSIS/Include/core_cmInstr.h **** 
 178:./lib/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:./lib/CMSIS/Include/core_cmInstr.h **** 
 180:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:./lib/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 182:./lib/CMSIS/Include/core_cmInstr.h ****  */
 183:./lib/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 184:./lib/CMSIS/Include/core_cmInstr.h **** 
 185:./lib/CMSIS/Include/core_cmInstr.h **** 
 186:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:./lib/CMSIS/Include/core_cmInstr.h **** 
 188:./lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 189:./lib/CMSIS/Include/core_cmInstr.h **** 
 190:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:./lib/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:./lib/CMSIS/Include/core_cmInstr.h ****  */
 193:./lib/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:./lib/CMSIS/Include/core_cmInstr.h **** 
 195:./lib/CMSIS/Include/core_cmInstr.h **** 
 196:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:./lib/CMSIS/Include/core_cmInstr.h **** 
 198:./lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 199:./lib/CMSIS/Include/core_cmInstr.h **** 
 200:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:./lib/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:./lib/CMSIS/Include/core_cmInstr.h ****  */
 203:./lib/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:./lib/CMSIS/Include/core_cmInstr.h **** 
 205:./lib/CMSIS/Include/core_cmInstr.h **** 
 206:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:./lib/CMSIS/Include/core_cmInstr.h **** 
 208:./lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 209:./lib/CMSIS/Include/core_cmInstr.h **** 
 210:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:./lib/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:./lib/CMSIS/Include/core_cmInstr.h ****  */
 213:./lib/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:./lib/CMSIS/Include/core_cmInstr.h **** 
 215:./lib/CMSIS/Include/core_cmInstr.h **** 
 216:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:./lib/CMSIS/Include/core_cmInstr.h **** 
 218:./lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 219:./lib/CMSIS/Include/core_cmInstr.h **** 
 220:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 221:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:./lib/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 223:./lib/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 224:./lib/CMSIS/Include/core_cmInstr.h ****  */
 225:./lib/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:./lib/CMSIS/Include/core_cmInstr.h **** 
 227:./lib/CMSIS/Include/core_cmInstr.h **** 
 228:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 229:./lib/CMSIS/Include/core_cmInstr.h **** 
 230:./lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 231:./lib/CMSIS/Include/core_cmInstr.h **** 
 232:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 233:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 234:./lib/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 235:./lib/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 236:./lib/CMSIS/Include/core_cmInstr.h ****  */
 237:./lib/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:./lib/CMSIS/Include/core_cmInstr.h **** 
 239:./lib/CMSIS/Include/core_cmInstr.h **** 
 240:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:./lib/CMSIS/Include/core_cmInstr.h **** 
 242:./lib/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 243:./lib/CMSIS/Include/core_cmInstr.h **** 
 244:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 245:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:./lib/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 247:./lib/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 248:./lib/CMSIS/Include/core_cmInstr.h ****  */
 249:./lib/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:./lib/CMSIS/Include/core_cmInstr.h **** 
 251:./lib/CMSIS/Include/core_cmInstr.h **** 
 252:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:./lib/CMSIS/Include/core_cmInstr.h **** 
 254:./lib/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:./lib/CMSIS/Include/core_cmInstr.h **** 
 256:./lib/CMSIS/Include/core_cmInstr.h ****  */
 257:./lib/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 258:./lib/CMSIS/Include/core_cmInstr.h **** 
 259:./lib/CMSIS/Include/core_cmInstr.h **** 
 260:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 261:./lib/CMSIS/Include/core_cmInstr.h **** 
 262:./lib/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 263:./lib/CMSIS/Include/core_cmInstr.h **** 
 264:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:./lib/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 267:./lib/CMSIS/Include/core_cmInstr.h ****  */
 268:./lib/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 269:./lib/CMSIS/Include/core_cmInstr.h **** 
 270:./lib/CMSIS/Include/core_cmInstr.h **** 
 271:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:./lib/CMSIS/Include/core_cmInstr.h **** 
 273:./lib/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 274:./lib/CMSIS/Include/core_cmInstr.h **** 
 275:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:./lib/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 278:./lib/CMSIS/Include/core_cmInstr.h ****  */
 279:./lib/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 280:./lib/CMSIS/Include/core_cmInstr.h **** 
 281:./lib/CMSIS/Include/core_cmInstr.h **** 
 282:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 283:./lib/CMSIS/Include/core_cmInstr.h **** 
 284:./lib/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:./lib/CMSIS/Include/core_cmInstr.h **** 
 286:./lib/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:./lib/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 288:./lib/CMSIS/Include/core_cmInstr.h ****  */
 289:./lib/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 290:./lib/CMSIS/Include/core_cmInstr.h **** 
 291:./lib/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 292:./lib/CMSIS/Include/core_cmInstr.h **** 
 293:./lib/CMSIS/Include/core_cmInstr.h **** 
 294:./lib/CMSIS/Include/core_cmInstr.h **** 
 295:./lib/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:./lib/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 297:./lib/CMSIS/Include/core_cmInstr.h **** 
 298:./lib/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 299:./lib/CMSIS/Include/core_cmInstr.h **** 
 300:./lib/CMSIS/Include/core_cmInstr.h **** 
 301:./lib/CMSIS/Include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 302:./lib/CMSIS/Include/core_cmInstr.h **** /* TI CCS specific functions */
 303:./lib/CMSIS/Include/core_cmInstr.h **** 
 304:./lib/CMSIS/Include/core_cmInstr.h **** #include <cmsis_ccs.h>
 305:./lib/CMSIS/Include/core_cmInstr.h **** 
 306:./lib/CMSIS/Include/core_cmInstr.h **** 
 307:./lib/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 308:./lib/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 309:./lib/CMSIS/Include/core_cmInstr.h **** 
 310:./lib/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 311:./lib/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 312:./lib/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 313:./lib/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 314:./lib/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 315:./lib/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 316:./lib/CMSIS/Include/core_cmInstr.h **** #else
 317:./lib/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 318:./lib/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 319:./lib/CMSIS/Include/core_cmInstr.h **** #endif
 320:./lib/CMSIS/Include/core_cmInstr.h **** 
 321:./lib/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 322:./lib/CMSIS/Include/core_cmInstr.h **** 
 323:./lib/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 324:./lib/CMSIS/Include/core_cmInstr.h ****  */
 325:./lib/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 326:./lib/CMSIS/Include/core_cmInstr.h **** {
 327:./lib/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 246              		.loc 3 327 0
 247              	@ 327 "./lib/CMSIS/Include/core_cmInstr.h" 1
 248 000c 00BF     		nop
 249              	@ 0 "" 2
 250              		.thumb
 251              	.LBE23:
 252              	.LBE22:
 253              	.LBB24:
 254              	.LBB25:
 255              	@ 327 "./lib/CMSIS/Include/core_cmInstr.h" 1
 256 000e 00BF     		nop
 257              	@ 0 "" 2
 258              		.thumb
 259              	.LBE25:
 260              	.LBE24:
 261              	.LBB26:
 262              	.LBB27:
 263              	@ 327 "./lib/CMSIS/Include/core_cmInstr.h" 1
 264 0010 00BF     		nop
 265              	@ 0 "" 2
 266              		.thumb
 267              	.LBE27:
 268              	.LBE26:
 269              	.LBB28:
 270              	.LBB29:
 271              	@ 327 "./lib/CMSIS/Include/core_cmInstr.h" 1
 272 0012 00BF     		nop
 273              	@ 0 "" 2
 274              		.thumb
 275              	.LBE29:
 276              	.LBE28:
 277              	.LBB30:
 278              	.LBB31:
 279              	@ 327 "./lib/CMSIS/Include/core_cmInstr.h" 1
 280 0014 00BF     		nop
 281              	@ 0 "" 2
 282              		.thumb
 283              	.LBE31:
 284              	.LBE30:
 285              	.LBB32:
 286              	.LBB33:
 287              	@ 327 "./lib/CMSIS/Include/core_cmInstr.h" 1
 288 0016 00BF     		nop
 289              	@ 0 "" 2
 290              		.thumb
 291 0018 F4E7     		b	.L19
 292              	.L21:
 293              	.LBE33:
 294              	.LBE32:
 122:src/systick.c **** 					__NOP();
 123:src/systick.c **** 					__NOP();
 124:src/systick.c **** 					__NOP();
 125:src/systick.c **** 					__NOP();
 126:src/systick.c **** 					__NOP();
 127:src/systick.c **** 					__NOP();
 128:src/systick.c **** 					}
 129:src/systick.c **** }
 295              		.loc 1 129 0
 296 001a 02B0     		add	sp, sp, #8
 297 001c 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE60:
 301              		.global	TimingDelay
 302              		.section	.bss.TimingDelay,"aw",%nobits
 303              		.align	2
 304              		.set	.LANCHOR0,. + 0
 307              	TimingDelay:
 308 0000 00000000 		.space	4
 309              		.text
 310              	.Letext0:
 311              		.file 4 "./lib/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 312              		.file 5 "c:\\devz\\arm\\bleeding-edge\\bin\\../lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 313              		.file 6 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 314              		.file 7 "./lib/CMSIS/Device/ST/STM32F10x/Include/system_stm32f10x.h"
 315              		.file 8 "./lib/STM32F10x_StdPeriph_Driver/inc/misc.h"
 316              		.file 9 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 systick.c
  R:\TEMP\ccFnnVTX.s:19     .text.SysTickInit:00000000 $t
  R:\TEMP\ccFnnVTX.s:24     .text.SysTickInit:00000000 SysTickInit
  R:\TEMP\ccFnnVTX.s:125    .text.SysTickInit:00000074 $d
  R:\TEMP\ccFnnVTX.s:134    .text._delay_ms:00000000 $t
  R:\TEMP\ccFnnVTX.s:139    .text._delay_ms:00000000 _delay_ms
  R:\TEMP\ccFnnVTX.s:166    .text._delay_ms:00000014 $d
  R:\TEMP\ccFnnVTX.s:171    .text._delay_us:00000000 $t
  R:\TEMP\ccFnnVTX.s:176    .text._delay_us:00000000 _delay_us
  R:\TEMP\ccFnnVTX.s:211    .text._delay_us:00000024 $d
  R:\TEMP\ccFnnVTX.s:216    .text.Delay:00000000 $t
  R:\TEMP\ccFnnVTX.s:221    .text.Delay:00000000 Delay
  R:\TEMP\ccFnnVTX.s:307    .bss.TimingDelay:00000000 TimingDelay
  R:\TEMP\ccFnnVTX.s:303    .bss.TimingDelay:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SysTick_CLKSourceConfig
RCC_APB1PeriphClockCmd
TIM_TimeBaseStructInit
TIM_TimeBaseInit
TIM_Cmd
SystemCoreClock
